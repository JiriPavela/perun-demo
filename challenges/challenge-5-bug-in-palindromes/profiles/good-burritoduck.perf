{
  "resources": {
    "dl_main#0": {
      "amount": [
        419
      ]
    },
    "generatePermutations#0": {
      "amount": [
        38033815
      ]
    },
    "generatePermutations#1": {
      "amount": [
        38023118
      ]
    },
    "generatePermutations#2": {
      "amount": [
        190495699
      ]
    },
    "generatePermutations#3": {
      "amount": [
        799716187
      ]
    },
    "generatePermutations#4": {
      "amount": [
        950627268
      ]
    },
    "generatePermutations#5": {
      "amount": [
        228730528
      ]
    },
    "isPalindrome#0": {
      "amount": [
        1093804469
      ]
    },
    "std::vector<char, std::allocator<char> >::operator[]#0": {
      "amount": [
        121391236
      ]
    },
    "std::vector<char, std::allocator<char> >::size#0": {
      "amount": [
        376695932
      ]
    },
    "std::vector<char, std::allocator<char> >::operator[]#1": {
      "amount": [
        152577634
      ]
    },
    "std::move<char&>#0": {
      "amount": [
        430412637
      ]
    },
    "std::swap<char>#0": {
      "amount": [
        762263540
      ]
    },
    "std::move<char&>#1": {
      "amount": [
        186779156
      ]
    },
    "std::vector<char, std::allocator<char> >::operator[]#2": {
      "amount": [
        910192201
      ]
    },
    "std::move<char&>#2": {
      "amount": [
        76402445
      ]
    },
    "std::swap<char>#1": {
      "amount": [
        752507733
      ]
    },
    "std::move<char&>#3": {
      "amount": [
        186917780
      ]
    },
    "std::vector<char, std::allocator<char> >::operator[]#3": {
      "amount": [
        629809322
      ]
    },
    "std::move<char&>#4": {
      "amount": [
        38266192
      ]
    },
    "std::swap<char>#2": {
      "amount": [
        357523846
      ]
    },
    "std::move<char&>#5": {
      "amount": [
        114230535
      ]
    },
    "std::vector<char, std::allocator<char> >::operator[]#4": {
      "amount": [
        342615684
      ]
    },
    "std::swap<char>#3": {
      "amount": [
        114333817
      ]
    },
    "std::vector<char, std::allocator<char> >::operator[]#5": {
      "amount": [
        38190916
      ]
    },
    "std::move<char&>#6": {
      "amount": [
        37984482
      ]
    },
    "_start#0": {
      "amount": [
        2
      ]
    }
  },
  "resource_type_map": {
    "dl_main#0": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "_dl_sysdep_start"
        }
      ],
      "uid": "dl_main"
    },
    "generatePermutations#0": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "generatePermutations"
    },
    "generatePermutations#1": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "generatePermutations"
    },
    "generatePermutations#2": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "generatePermutations"
    },
    "generatePermutations#3": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "generatePermutations"
    },
    "generatePermutations#4": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "generatePermutations"
    },
    "generatePermutations#5": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "generatePermutations"
    },
    "isPalindrome#0": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "isPalindrome"
    },
    "std::vector<char, std::allocator<char> >::operator[]#0": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "isPalindrome"
        }
      ],
      "uid": "std::vector<char, std::allocator<char> >::operator[]"
    },
    "std::vector<char, std::allocator<char> >::size#0": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "isPalindrome"
        }
      ],
      "uid": "std::vector<char, std::allocator<char> >::size"
    },
    "std::vector<char, std::allocator<char> >::operator[]#1": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "std::vector<char, std::allocator<char> >::operator[]"
    },
    "std::move<char&>#0": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "std::move<char&>"
    },
    "std::swap<char>#0": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "std::swap<char>"
    },
    "std::move<char&>#1": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "std::swap<char>"
        }
      ],
      "uid": "std::move<char&>"
    },
    "std::vector<char, std::allocator<char> >::operator[]#2": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "std::vector<char, std::allocator<char> >::operator[]"
    },
    "std::move<char&>#2": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "std::move<char&>"
    },
    "std::swap<char>#1": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "std::swap<char>"
    },
    "std::move<char&>#3": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "std::swap<char>"
        }
      ],
      "uid": "std::move<char&>"
    },
    "std::vector<char, std::allocator<char> >::operator[]#3": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "std::vector<char, std::allocator<char> >::operator[]"
    },
    "std::move<char&>#4": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "std::move<char&>"
    },
    "std::swap<char>#2": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "std::swap<char>"
    },
    "std::move<char&>#5": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "std::swap<char>"
        }
      ],
      "uid": "std::move<char&>"
    },
    "std::vector<char, std::allocator<char> >::operator[]#4": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "std::vector<char, std::allocator<char> >::operator[]"
    },
    "std::swap<char>#3": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "std::swap<char>"
    },
    "std::vector<char, std::allocator<char> >::operator[]#5": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        }
      ],
      "uid": "std::vector<char, std::allocator<char> >::operator[]"
    },
    "std::move<char&>#6": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "generatePermutations"
        },
        {
          "func": "std::swap<char>"
        }
      ],
      "uid": "std::move<char&>"
    },
    "_start#0": {
      "command": "generate",
      "time": 2.8210625648498535,
      "trace": [],
      "uid": "_start"
    }
  },
  "models": [],
  "origin": "13ff56d898cefd713d162964ff4a9ca09fbc4b56",
  "header": {
    "type": "time",
    "cmd": "./generate",
    "workload": "burritoduck",
    "units": {
      "time": "sample"
    }
  },
  "machine": {
    "architecture": "x86_64",
    "system": "Linux",
    "release": "5.15.146.1-microsoft-standard-WSL2",
    "host": "dellion",
    "cpu": {
      "physical": 6,
      "total": 12,
      "frequency": "2208.00Mhz"
    },
    "memory": {
      "total_ram": "7.7 GiB",
      "swap": "2.0 GiB"
    },
    "boot_info": "initrd=\\initrd.img WSL_ROOT_INIT=1 panic=-1 nr_cpus=12 hv_utils.timesync_implicit=1 console=hvc0 debug pty.legacy_count=0",
    "mem_details": {
      "MemTotal": "8026096 kB",
      "MemFree": "6198996 kB",
      "MemAvailable": "6595976 kB",
      "Buffers": "5728 kB",
      "Cached": "655732 kB",
      "SwapCached": "0 kB",
      "Active": "131096 kB",
      "Inactive": "1275788 kB",
      "Active(anon)": "2660 kB",
      "Inactive(anon)": "837756 kB",
      "Active(file)": "128436 kB",
      "Inactive(file)": "438032 kB",
      "Unevictable": "0 kB",
      "Mlocked": "0 kB",
      "SwapTotal": "2097152 kB",
      "SwapFree": "2097152 kB",
      "Dirty": "220 kB",
      "Writeback": "0 kB",
      "AnonPages": "736448 kB",
      "Mapped": "483768 kB",
      "Shmem": "95140 kB",
      "KReclaimable": "92452 kB",
      "Slab": "161656 kB",
      "SReclaimable": "92452 kB",
      "SUnreclaim": "69204 kB",
      "KernelStack": "7200 kB",
      "PageTables": "12496 kB",
      "NFS_Unstable": "0 kB",
      "Bounce": "0 kB",
      "WritebackTmp": "0 kB",
      "CommitLimit": "6110200 kB",
      "Committed_AS": "3004124 kB",
      "VmallocTotal": "34359738367 kB",
      "VmallocUsed": "29412 kB",
      "VmallocChunk": "0 kB",
      "Percpu": "8960 kB",
      "AnonHugePages": "290816 kB",
      "ShmemHugePages": "0 kB",
      "ShmemPmdMapped": "0 kB",
      "FileHugePages": "0 kB",
      "FilePmdMapped": "0 kB",
      "HugePages_Total": "0",
      "HugePages_Free": "0",
      "HugePages_Rsvd": "0",
      "HugePages_Surp": "0",
      "Hugepagesize": "2048 kB",
      "Hugetlb": "0 kB",
      "DirectMap4k": "128000 kB",
      "DirectMap2M": "6055936 kB",
      "DirectMap1G": "11534336 kB"
    },
    "cpu_details": [
      {
        "processor": "0",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "0",
        "cpu cores": "6",
        "apicid": "0",
        "initial apicid": "0",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "1",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "0",
        "cpu cores": "6",
        "apicid": "1",
        "initial apicid": "1",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "2",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "1",
        "cpu cores": "6",
        "apicid": "2",
        "initial apicid": "2",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "3",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "1",
        "cpu cores": "6",
        "apicid": "3",
        "initial apicid": "3",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "4",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "2",
        "cpu cores": "6",
        "apicid": "4",
        "initial apicid": "4",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "5",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "2",
        "cpu cores": "6",
        "apicid": "5",
        "initial apicid": "5",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "6",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "3",
        "cpu cores": "6",
        "apicid": "6",
        "initial apicid": "6",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "7",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "3",
        "cpu cores": "6",
        "apicid": "7",
        "initial apicid": "7",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "8",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "4",
        "cpu cores": "6",
        "apicid": "8",
        "initial apicid": "8",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "9",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "4",
        "cpu cores": "6",
        "apicid": "9",
        "initial apicid": "9",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "10",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "5",
        "cpu cores": "6",
        "apicid": "10",
        "initial apicid": "10",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "11",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "5",
        "cpu cores": "6",
        "apicid": "11",
        "initial apicid": "11",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {}
    ]
  },
  "collector_info": {
    "name": "kperf",
    "params": {
      "with_sudo": false,
      "warmup": 0,
      "repeat": 1,
      "workload": "burritoduck"
    }
  },
  "postprocessors": []
}