{
  "resources": {
    "_dl_lookup_symbol_x#0": {
      "amount": [
        1701843
      ]
    },
    "dl_main#0": {
      "amount": [
        243769
      ]
    },
    "memset#0": {
      "amount": [
        687926
      ]
    },
    "_int_free#0": {
      "amount": [
        950953278
      ]
    },
    "unlink_chunk.constprop.0#0": {
      "amount": [
        120519123
      ]
    },
    "computeTransformationCost#0": {
      "amount": [
        25616864
      ]
    },
    "computeTransformationCost#1": {
      "amount": [
        50121846
      ]
    },
    "computeTransformationCost#2": {
      "amount": [
        22872864
      ]
    },
    "computeTransformationCost#3": {
      "amount": [
        37744087
      ]
    },
    "computeTransformationCost#4": {
      "amount": [
        101886805
      ]
    },
    "[compare_traces]#0": {
      "amount": [
        12741664
      ]
    },
    "computeTransformationCost#5": {
      "amount": [
        54233869
      ]
    },
    "computeTransformationCost#6": {
      "amount": [
        61373804
      ]
    },
    "computeTransformationCost#7": {
      "amount": [
        12361287
      ]
    },
    "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>#0": {
      "amount": [
        12479898
      ]
    },
    "levenshteinDistance#0": {
      "amount": [
        366014288
      ]
    },
    "std::initializer_list<int>::end#0": {
      "amount": [
        25078233
      ]
    },
    "std::min<int>#0": {
      "amount": [
        25662538
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#0": {
      "amount": [
        12611915
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#0": {
      "amount": [
        25415231
      ]
    },
    "std::initializer_list<int>::begin#0": {
      "amount": [
        51409968
      ]
    },
    "std::initializer_list<int>::end#1": {
      "amount": [
        37939558
      ]
    },
    "std::initializer_list<int>::begin#1": {
      "amount": [
        12560419
      ]
    },
    "std::initializer_list<int>::size#0": {
      "amount": [
        12712946
      ]
    },
    "std::min_element<int const*>#0": {
      "amount": [
        23709202
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#1": {
      "amount": [
        12654567
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#1": {
      "amount": [
        176942357
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#0": {
      "amount": [
        177563297
      ]
    },
    "std::min_element<int const*>#1": {
      "amount": [
        12633377
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#0": {
      "amount": [
        98268400
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#0": {
      "amount": [
        254304019
      ]
    },
    "std::allocator<int>::~allocator#0": {
      "amount": [
        12642101
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#0": {
      "amount": [
        12682933
      ]
    },
    "operator new#0": {
      "amount": [
        12744650
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#0": {
      "amount": [
        12455735
      ]
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#0": {
      "amount": [
        12732984
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#0": {
      "amount": [
        11214978
      ]
    },
    "std::_Destroy<int*, int>#0": {
      "amount": [
        12657244
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#0": {
      "amount": [
        12734985
      ]
    },
    "std::min<int>#1": {
      "amount": [
        25424159
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#1": {
      "amount": [
        49214960
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#1": {
      "amount": [
        38002614
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#1": {
      "amount": [
        23826806
      ]
    },
    "switch_cost_levenshtein#0": {
      "amount": [
        12736763
      ]
    },
    "[compare_traces]#1": {
      "amount": [
        101843678
      ]
    },
    "levenshteinDistance#1": {
      "amount": [
        2096479852
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#0": {
      "amount": [
        12700177
      ]
    },
    "std::initializer_list<int>::begin#2": {
      "amount": [
        38041383
      ]
    },
    "std::initializer_list<int>::end#2": {
      "amount": [
        96181635
      ]
    },
    "std::min<int>#2": {
      "amount": [
        249400484
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#2": {
      "amount": [
        63712894
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#2": {
      "amount": [
        63959046
      ]
    },
    "std::initializer_list<int>::begin#3": {
      "amount": [
        199109586
      ]
    },
    "std::initializer_list<int>::end#3": {
      "amount": [
        227891467
      ]
    },
    "std::initializer_list<int>::begin#4": {
      "amount": [
        63450806
      ]
    },
    "std::initializer_list<int>::size#1": {
      "amount": [
        146300271
      ]
    },
    "std::initializer_list<int>::size#2": {
      "amount": [
        63234220
      ]
    },
    "std::min_element<int const*>#2": {
      "amount": [
        198878009
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#2": {
      "amount": [
        99506388
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#3": {
      "amount": [
        63695111
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#3": {
      "amount": [
        1100848805
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#3": {
      "amount": [
        779618259
      ]
    },
    "std::min_element<int const*>#3": {
      "amount": [
        50153055
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#2": {
      "amount": [
        558362831
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#0": {
      "amount": [
        12708005
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#2": {
      "amount": [
        798756794
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base#0": {
      "amount": [
        12904860
      ]
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::allocate#0": {
      "amount": [
        12643011
      ]
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::allocate#0": {
      "amount": [
        12723522
      ]
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#0": {
      "amount": [
        12735667
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#0": {
      "amount": [
        25407840
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#0": {
      "amount": [
        12694769
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#0": {
      "amount": [
        12744657
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#0": {
      "amount": [
        12769643
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#0": {
      "amount": [
        12965752
      ]
    },
    "std::vector<int, std::allocator<int> >::begin#0": {
      "amount": [
        12737901
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#0": {
      "amount": [
        89088473
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#1": {
      "amount": [
        12662107
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#1": {
      "amount": [
        37348839
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#0": {
      "amount": [
        12722408
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#0": {
      "amount": [
        25180775
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#0": {
      "amount": [
        12715571
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#0": {
      "amount": [
        12665398
      ]
    },
    "[compare_traces]#2": {
      "amount": [
        12732000
      ]
    },
    "[libstdc++.so.6.0.30]#0": {
      "amount": [
        12610990
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#1": {
      "amount": [
        22895322
      ]
    },
    "malloc#0": {
      "amount": [
        10265819
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#1": {
      "amount": [
        12720736
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#0": {
      "amount": [
        12719625
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#1": {
      "amount": [
        12697299
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#0": {
      "amount": [
        12872485
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#0": {
      "amount": [
        12669723
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#0": {
      "amount": [
        12642015
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#0": {
      "amount": [
        25504345
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#0": {
      "amount": [
        12961913
      ]
    },
    "__memmove_avx_unaligned_erms#0": {
      "amount": [
        62992157
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#0": {
      "amount": [
        24904274
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#0": {
      "amount": [
        12438660
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#1": {
      "amount": [
        36097701
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#0": {
      "amount": [
        12709335
      ]
    },
    "std::__niter_base<int*>#0": {
      "amount": [
        12738988
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#1": {
      "amount": [
        12749568
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#0": {
      "amount": [
        25554161
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#1": {
      "amount": [
        12704142
      ]
    },
    "std::vector<int, std::allocator<int> >::size#0": {
      "amount": [
        12977290
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#1": {
      "amount": [
        12621100
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#0": {
      "amount": [
        12761120
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#0": {
      "amount": [
        38199557
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#0": {
      "amount": [
        25413449
      ]
    },
    "std::_Destroy_aux<true>::__destroy<int*>#0": {
      "amount": [
        12737158
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#0": {
      "amount": [
        12711762
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#1": {
      "amount": [
        12533279
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#1": {
      "amount": [
        12773019
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#1": {
      "amount": [
        25523899
      ]
    },
    "[compare_traces]#3": {
      "amount": [
        12931003
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#1": {
      "amount": [
        12690818
      ]
    },
    "cfree@GLIBC_2.2.5#0": {
      "amount": [
        12704284
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl#0": {
      "amount": [
        23926797
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#0": {
      "amount": [
        177547464
      ]
    },
    "std::min<int>#3": {
      "amount": [
        102115035
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#3": {
      "amount": [
        240764720
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#3": {
      "amount": [
        150259795
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#4": {
      "amount": [
        8175484
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#5": {
      "amount": [
        25284293
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#0": {
      "amount": [
        31300342
      ]
    },
    "switch_cost_levenshtein#1": {
      "amount": [
        9421915
      ]
    },
    "[compare_traces]#4": {
      "amount": [
        218833517
      ]
    },
    "levenshteinDistance#2": {
      "amount": [
        4862518631
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >#0": {
      "amount": [
        12629345
      ]
    },
    "std::initializer_list<int>::begin#5": {
      "amount": [
        203303463
      ]
    },
    "std::initializer_list<int>::end#4": {
      "amount": [
        214020517
      ]
    },
    "std::min<int>#4": {
      "amount": [
        810390687
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#4": {
      "amount": [
        151893578
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#4": {
      "amount": [
        139376956
      ]
    },
    "std::initializer_list<int>::begin#6": {
      "amount": [
        287518055
      ]
    },
    "std::initializer_list<int>::end#5": {
      "amount": [
        417641738
      ]
    },
    "std::initializer_list<int>::begin#7": {
      "amount": [
        203752936
      ]
    },
    "std::initializer_list<int>::size#3": {
      "amount": [
        303951255
      ]
    },
    "std::initializer_list<int>::size#4": {
      "amount": [
        98686511
      ]
    },
    "std::min_element<int const*>#4": {
      "amount": [
        319325245
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#6": {
      "amount": [
        157216868
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#5": {
      "amount": [
        99625214
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#5": {
      "amount": [
        2789721651
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#7": {
      "amount": [
        1592108512
      ]
    },
    "std::min_element<int const*>#5": {
      "amount": [
        259593041
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#4": {
      "amount": [
        1812759530
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#2": {
      "amount": [
        12525363
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#0": {
      "amount": [
        12665181
      ]
    },
    "std::__uninitialized_default_n<int*, unsigned long>#0": {
      "amount": [
        12122490
      ]
    },
    "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>#0": {
      "amount": [
        12719733
      ]
    },
    "std::__fill_a1<int*, int>#0": {
      "amount": [
        56880613
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#2": {
      "amount": [
        12687559
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#4": {
      "amount": [
        2328428925
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector#0": {
      "amount": [
        12865328
      ]
    },
    "std::allocator<std::vector<int, std::allocator<int> > >::allocator#0": {
      "amount": [
        12720193
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize#0": {
      "amount": [
        12709714
      ]
    },
    "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#0": {
      "amount": [
        12734788
      ]
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#1": {
      "amount": [
        37773887
      ]
    },
    "operator new#1": {
      "amount": [
        12743087
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#1": {
      "amount": [
        49869793
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#2": {
      "amount": [
        35920957
      ]
    },
    "std::allocator<int>::~allocator#1": {
      "amount": [
        22026969
      ]
    },
    "std::vector<int, std::allocator<int> >::end#0": {
      "amount": [
        12702022
      ]
    },
    "std::vector<int, std::allocator<int> >::size#1": {
      "amount": [
        12725976
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#3": {
      "amount": [
        150232371
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#2": {
      "amount": [
        37938484
      ]
    },
    "std::allocator<int>::allocator#0": {
      "amount": [
        11236793
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#2": {
      "amount": [
        23139477
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#1": {
      "amount": [
        12675621
      ]
    },
    "std::allocator<int>::allocator#1": {
      "amount": [
        25744934
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#1": {
      "amount": [
        12651111
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#1": {
      "amount": [
        25402452
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#1": {
      "amount": [
        38140554
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#2": {
      "amount": [
        138816088
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#1": {
      "amount": [
        63758402
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#2": {
      "amount": [
        12675163
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#1": {
      "amount": [
        19752339
      ]
    },
    "__gnu_cxx::new_allocator<int>::_M_max_size#0": {
      "amount": [
        8968716
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#3": {
      "amount": [
        63283632
      ]
    },
    "__gnu_cxx::new_allocator<int>::_M_max_size#1": {
      "amount": [
        11289792
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#2": {
      "amount": [
        12977833
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#2": {
      "amount": [
        63620317
      ]
    },
    "std::allocator<int>::allocator#2": {
      "amount": [
        8981277
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#3": {
      "amount": [
        25321416
      ]
    },
    "std::allocator<int>::allocator#3": {
      "amount": [
        12738043
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#1": {
      "amount": [
        12705766
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#1": {
      "amount": [
        25383727
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#1": {
      "amount": [
        12899132
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#1": {
      "amount": [
        25325229
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#2": {
      "amount": [
        72911998
      ]
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#1": {
      "amount": [
        38109857
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#2": {
      "amount": [
        12707322
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#1": {
      "amount": [
        25296434
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#1": {
      "amount": [
        50719774
      ]
    },
    "__memmove_avx_unaligned_erms#1": {
      "amount": [
        62877199
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#1": {
      "amount": [
        76430161
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#2": {
      "amount": [
        25329969
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#1": {
      "amount": [
        12698536
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#3": {
      "amount": [
        12608436
      ]
    },
    "std::__niter_base<int*>#1": {
      "amount": [
        8012716
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#2": {
      "amount": [
        33476495
      ]
    },
    "std::__niter_wrap<int*>#0": {
      "amount": [
        12705201
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#3": {
      "amount": [
        12725793
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#2": {
      "amount": [
        58411330
      ]
    },
    "std::vector<int, std::allocator<int> >::end#1": {
      "amount": [
        25393045
      ]
    },
    "std::vector<int, std::allocator<int> >::size#2": {
      "amount": [
        104216475
      ]
    },
    "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#1": {
      "amount": [
        12641570
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size#0": {
      "amount": [
        9178333
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#1": {
      "amount": [
        36478043
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#2": {
      "amount": [
        12724836
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#3": {
      "amount": [
        12639164
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#1": {
      "amount": [
        40819427
      ]
    },
    "std::_Destroy<int*>#0": {
      "amount": [
        50273347
      ]
    },
    "std::_Destroy_aux<true>::__destroy<int*>#1": {
      "amount": [
        25248803
      ]
    },
    "std::_Destroy<int*>#1": {
      "amount": [
        12553888
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#3": {
      "amount": [
        37902896
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#2": {
      "amount": [
        25210247
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#4": {
      "amount": [
        100465939
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#2": {
      "amount": [
        38116920
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#0": {
      "amount": [
        38276139
      ]
    },
    "[libstdc++.so.6.0.30]#1": {
      "amount": [
        12730423
      ]
    },
    "cfree@GLIBC_2.2.5#1": {
      "amount": [
        9070321
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#3": {
      "amount": [
        37991236
      ]
    },
    "std::allocator<int>::~allocator#2": {
      "amount": [
        12770444
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#1": {
      "amount": [
        25407952
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#2": {
      "amount": [
        8084876
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#2": {
      "amount": [
        38152629
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#3": {
      "amount": [
        11761665
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#1": {
      "amount": [
        12700931
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate#0": {
      "amount": [
        12287968
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl#1": {
      "amount": [
        12727997
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#1": {
      "amount": [
        392038099
      ]
    },
    "std::min<int>#5": {
      "amount": [
        219496530
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#5": {
      "amount": [
        492004913
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#3": {
      "amount": [
        12655626
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#5": {
      "amount": [
        583217483
      ]
    },
    "std::initializer_list<double>::begin#0": {
      "amount": [
        12949167
      ]
    },
    "std::min<double>#0": {
      "amount": [
        8947239
      ]
    },
    "std::min_element<double const*>#0": {
      "amount": [
        12637386
      ]
    },
    "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>#1": {
      "amount": [
        12683789
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#8": {
      "amount": [
        12702696
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#1": {
      "amount": [
        12642495
      ]
    },
    "[compare_traces]#5": {
      "amount": [
        422861827
      ]
    },
    "levenshteinDistance#3": {
      "amount": [
        7592780766
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_get_Tp_allocator#0": {
      "amount": [
        12728402
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#2": {
      "amount": [
        12731923
      ]
    },
    "std::allocator<int>::allocator#4": {
      "amount": [
        12701681
      ]
    },
    "std::allocator<int>::~allocator#3": {
      "amount": [
        12660251
      ]
    },
    "std::initializer_list<int>::begin#8": {
      "amount": [
        174237793
      ]
    },
    "std::initializer_list<int>::end#6": {
      "amount": [
        365072314
      ]
    },
    "std::min<int>#6": {
      "amount": [
        1135305625
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#6": {
      "amount": [
        152242329
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#6": {
      "amount": [
        423789392
      ]
    },
    "std::initializer_list<int>::begin#9": {
      "amount": [
        652398489
      ]
    },
    "std::initializer_list<int>::end#7": {
      "amount": [
        858154074
      ]
    },
    "std::initializer_list<int>::begin#10": {
      "amount": [
        218966008
      ]
    },
    "std::initializer_list<int>::size#5": {
      "amount": [
        398383052
      ]
    },
    "std::initializer_list<int>::size#6": {
      "amount": [
        187406540
      ]
    },
    "std::min_element<int const*>#6": {
      "amount": [
        644755075
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#9": {
      "amount": [
        307783528
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#7": {
      "amount": [
        127025902
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#7": {
      "amount": [
        4657943861
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#10": {
      "amount": [
        3098806293
      ]
    },
    "std::min_element<int const*>#7": {
      "amount": [
        365429441
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#6": {
      "amount": [
        3003428093
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#4": {
      "amount": [
        12712987
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#2": {
      "amount": [
        12377543
      ]
    },
    "std::allocator<int>::~allocator#4": {
      "amount": [
        12764516
      ]
    },
    "std::vector<int, std::allocator<int> >::_M_default_initialize#0": {
      "amount": [
        25058061
      ]
    },
    "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>#1": {
      "amount": [
        25649110
      ]
    },
    "std::_Construct<int>#0": {
      "amount": [
        12696723
      ]
    },
    "operator new#2": {
      "amount": [
        12468398
      ]
    },
    "std::fill_n<int*, unsigned long, int>#0": {
      "amount": [
        12724482
      ]
    },
    "std::__fill_a1<int*, int>#1": {
      "amount": [
        11686847
      ]
    },
    "std::allocator<int>::allocator#5": {
      "amount": [
        12169162
      ]
    },
    "std::allocator_traits<std::allocator<int> >::max_size#0": {
      "amount": [
        25306885
      ]
    },
    "std::min<unsigned long>#0": {
      "amount": [
        12755055
      ]
    },
    "std::vector<int, std::allocator<int> >::_S_max_size#0": {
      "amount": [
        12759739
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#4": {
      "amount": [
        12665616
      ]
    },
    "std::_Destroy<int*, int>#1": {
      "amount": [
        12505583
      ]
    },
    "std::_Destroy_aux<true>::__destroy<int*>#2": {
      "amount": [
        12620583
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#3": {
      "amount": [
        12779673
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#4": {
      "amount": [
        12709751
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#5": {
      "amount": [
        12711335
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#4": {
      "amount": [
        12659128
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#0": {
      "amount": [
        12846248
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#4": {
      "amount": [
        12710718
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#6": {
      "amount": [
        3250725257
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector#1": {
      "amount": [
        12720842
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base#1": {
      "amount": [
        25375861
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate#0": {
      "amount": [
        25224849
      ]
    },
    "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >#0": {
      "amount": [
        12319464
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize#1": {
      "amount": [
        12701014
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#2": {
      "amount": [
        12976466
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#4": {
      "amount": [
        12716223
      ]
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#2": {
      "amount": [
        63251143
      ]
    },
    "operator new#3": {
      "amount": [
        36777957
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#3": {
      "amount": [
        95750198
      ]
    },
    "operator new#4": {
      "amount": [
        38070497
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#5": {
      "amount": [
        59496942
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#2": {
      "amount": [
        12651075
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#3": {
      "amount": [
        25636756
      ]
    },
    "std::allocator<int>::~allocator#5": {
      "amount": [
        25162151
      ]
    },
    "std::vector<int, std::allocator<int> >::begin#1": {
      "amount": [
        12659509
      ]
    },
    "std::vector<int, std::allocator<int> >::end#2": {
      "amount": [
        12719224
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#4": {
      "amount": [
        209125234
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#3": {
      "amount": [
        88866376
      ]
    },
    "std::allocator<int>::allocator#6": {
      "amount": [
        50795884
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#4": {
      "amount": [
        101078282
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#2": {
      "amount": [
        38180687
      ]
    },
    "std::allocator<int>::allocator#7": {
      "amount": [
        49097524
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#3": {
      "amount": [
        33984178
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#3": {
      "amount": [
        12721580
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#6": {
      "amount": [
        38164869
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#3": {
      "amount": [
        38234037
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#2": {
      "amount": [
        12676085
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#4": {
      "amount": [
        253320340
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#3": {
      "amount": [
        87828576
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#5": {
      "amount": [
        25412397
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#3": {
      "amount": [
        12871383
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#6": {
      "amount": [
        38160761
      ]
    },
    "__gnu_cxx::new_allocator<int>::_M_max_size#2": {
      "amount": [
        12888841
      ]
    },
    "operator new#5": {
      "amount": [
        9226386
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#3": {
      "amount": [
        25488527
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#3": {
      "amount": [
        12509286
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#4": {
      "amount": [
        88246176
      ]
    },
    "std::allocator<int>::allocator#8": {
      "amount": [
        8578124
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#4": {
      "amount": [
        11773977
      ]
    },
    "std::allocator<int>::allocator#9": {
      "amount": [
        36021564
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#4": {
      "amount": [
        74753736
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#4": {
      "amount": [
        25309466
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#2": {
      "amount": [
        37645577
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#2": {
      "amount": [
        62334484
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#3": {
      "amount": [
        62409485
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#3": {
      "amount": [
        19353005
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#3": {
      "amount": [
        37978898
      ]
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#2": {
      "amount": [
        148690041
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#4": {
      "amount": [
        12576241
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#2": {
      "amount": [
        37163478
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#2": {
      "amount": [
        10953441
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#3": {
      "amount": [
        50224559
      ]
    },
    "__memmove_avx_unaligned_erms#2": {
      "amount": [
        237927331
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#3": {
      "amount": [
        161969868
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#4": {
      "amount": [
        25363610
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#2": {
      "amount": [
        63325905
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#4": {
      "amount": [
        60949616
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#3": {
      "amount": [
        24220401
      ]
    },
    "std::__niter_base<int*>#2": {
      "amount": [
        24997777
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#4": {
      "amount": [
        12691883
      ]
    },
    "std::allocator<int>::~allocator#6": {
      "amount": [
        24680607
      ]
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#0": {
      "amount": [
        37855854
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#5": {
      "amount": [
        11519128
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#3": {
      "amount": [
        48985466
      ]
    },
    "std::vector<int, std::allocator<int> >::begin#2": {
      "amount": [
        41674989
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#4": {
      "amount": [
        73846505
      ]
    },
    "std::vector<int, std::allocator<int> >::end#3": {
      "amount": [
        38251607
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#5": {
      "amount": [
        98426904
      ]
    },
    "std::vector<int, std::allocator<int> >::size#3": {
      "amount": [
        99138407
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#5": {
      "amount": [
        10573990
      ]
    },
    "std::allocator<std::vector<int, std::allocator<int> > >::allocator#1": {
      "amount": [
        12627116
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> >*>#0": {
      "amount": [
        12918837
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#0": {
      "amount": [
        38005298
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#2": {
      "amount": [
        167755579
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#1": {
      "amount": [
        51085186
      ]
    },
    "std::_Destroy<int*, int>#2": {
      "amount": [
        8605553
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#6": {
      "amount": [
        38093121
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#5": {
      "amount": [
        36929791
      ]
    },
    "std::_Destroy<int*>#2": {
      "amount": [
        88675929
      ]
    },
    "std::_Destroy_aux<true>::__destroy<int*>#3": {
      "amount": [
        11357997
      ]
    },
    "std::_Destroy<int*>#3": {
      "amount": [
        24326468
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#5": {
      "amount": [
        12811476
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#7": {
      "amount": [
        25435955
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#5": {
      "amount": [
        84068098
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#7": {
      "amount": [
        151821468
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#6": {
      "amount": [
        43505696
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#1": {
      "amount": [
        12727077
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#2": {
      "amount": [
        39968566
      ]
    },
    "cfree@GLIBC_2.2.5#2": {
      "amount": [
        46287061
      ]
    },
    "operator delete#0": {
      "amount": [
        23828343
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#6": {
      "amount": [
        61120466
      ]
    },
    "std::allocator<int>::~allocator#7": {
      "amount": [
        38063274
      ]
    },
    "std::allocator<int>::~allocator#8": {
      "amount": [
        10415062
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#3": {
      "amount": [
        48008172
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#6": {
      "amount": [
        25190258
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#6": {
      "amount": [
        12175717
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#3": {
      "amount": [
        25122178
      ]
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate#0": {
      "amount": [
        12923877
      ]
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::deallocate#0": {
      "amount": [
        12717018
      ]
    },
    "cfree@GLIBC_2.2.5#3": {
      "amount": [
        12607482
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#2": {
      "amount": [
        603097122
      ]
    },
    "std::allocator<std::vector<int, std::allocator<int> > >::~allocator#0": {
      "amount": [
        12792739
      ]
    },
    "std::min<int>#7": {
      "amount": [
        359127570
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#7": {
      "amount": [
        765690474
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#7": {
      "amount": [
        882932436
      ]
    },
    "levenshteinDistance#4": {
      "amount": [
        22811955
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size#0": {
      "amount": [
        12712034
      ]
    },
    "std::initializer_list<double>::begin#1": {
      "amount": [
        12712823
      ]
    },
    "std::max<unsigned long>#0": {
      "amount": [
        12655903
      ]
    },
    "std::initializer_list<double>::end#0": {
      "amount": [
        12712417
      ]
    },
    "std::initializer_list<double>::size#0": {
      "amount": [
        21916185
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#11": {
      "amount": [
        9865963
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#12": {
      "amount": [
        20383608
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]#0": {
      "amount": [
        12737348
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#2": {
      "amount": [
        25370780
      ]
    },
    "switch_cost_levenshtein#2": {
      "amount": [
        12692291
      ]
    },
    "[compare_traces]#6": {
      "amount": [
        296733567
      ]
    },
    "levenshteinDistance#5": {
      "amount": [
        8942703565
      ]
    },
    "std::allocator<int>::~allocator#9": {
      "amount": [
        11752708
      ]
    },
    "std::initializer_list<int>::begin#11": {
      "amount": [
        289911640
      ]
    },
    "std::initializer_list<int>::end#8": {
      "amount": [
        324125401
      ]
    },
    "std::min<int>#8": {
      "amount": [
        1202392911
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#8": {
      "amount": [
        174779318
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#8": {
      "amount": [
        426007826
      ]
    },
    "std::initializer_list<int>::begin#12": {
      "amount": [
        947197643
      ]
    },
    "std::initializer_list<int>::end#9": {
      "amount": [
        885954021
      ]
    },
    "std::initializer_list<int>::begin#13": {
      "amount": [
        156915507
      ]
    },
    "std::initializer_list<int>::size#7": {
      "amount": [
        369093932
      ]
    },
    "std::initializer_list<int>::size#8": {
      "amount": [
        177773240
      ]
    },
    "std::min_element<int const*>#8": {
      "amount": [
        563969049
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#13": {
      "amount": [
        365532162
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#9": {
      "amount": [
        187661044
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#9": {
      "amount": [
        4790387296
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#14": {
      "amount": [
        3159309247
      ]
    },
    "std::min_element<int const*>#9": {
      "amount": [
        416617223
      ]
    },
    "std::vector<int, std::allocator<int> >::_S_check_init_len#0": {
      "amount": [
        12718961
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#8": {
      "amount": [
        3413435942
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#5": {
      "amount": [
        12715148
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#5": {
      "amount": [
        12665539
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#4": {
      "amount": [
        12564871
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#7": {
      "amount": [
        38118263
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#5": {
      "amount": [
        25290257
      ]
    },
    "std::__uninitialized_default_n_a<int*, unsigned long, int>#0": {
      "amount": [
        11195221
      ]
    },
    "std::allocator<int>::allocator#10": {
      "amount": [
        12710847
      ]
    },
    "std::vector<int, std::allocator<int> >::_M_default_initialize#1": {
      "amount": [
        12668091
      ]
    },
    "std::__uninitialized_default_n<int*, unsigned long>#1": {
      "amount": [
        25324565
      ]
    },
    "std::__uninitialized_default_n_a<int*, unsigned long, int>#1": {
      "amount": [
        12742850
      ]
    },
    "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>#2": {
      "amount": [
        25485847
      ]
    },
    "operator new#6": {
      "amount": [
        22291713
      ]
    },
    "operator new#7": {
      "amount": [
        12711993
      ]
    },
    "std::__addressof<int>#0": {
      "amount": [
        12725459
      ]
    },
    "std::fill_n<int*, unsigned long, int>#1": {
      "amount": [
        12598568
      ]
    },
    "std::__fill_n_a<int*, unsigned long, int>#0": {
      "amount": [
        24819997
      ]
    },
    "std::__fill_a1<int*, int>#2": {
      "amount": [
        117943805
      ]
    },
    "std::fill_n<int*, unsigned long, int>#2": {
      "amount": [
        12699327
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#5": {
      "amount": [
        8066994
      ]
    },
    "std::_Destroy<int*>#4": {
      "amount": [
        12676438
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#7": {
      "amount": [
        12690876
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#8": {
      "amount": [
        25023888
      ]
    },
    "[compare_traces]#7": {
      "amount": [
        6736693
      ]
    },
    "std::allocator<int>::~allocator#10": {
      "amount": [
        11943364
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#8": {
      "amount": [
        3304820860
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base#2": {
      "amount": [
        12692391
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate#1": {
      "amount": [
        12546545
      ]
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::allocate#1": {
      "amount": [
        12713800
      ]
    },
    "operator new#8": {
      "amount": [
        12754083
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl_data::_Vector_impl_data#0": {
      "amount": [
        12711334
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize#2": {
      "amount": [
        12668064
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#4": {
      "amount": [
        35234741
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#7": {
      "amount": [
        12706551
      ]
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#3": {
      "amount": [
        98972323
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#5": {
      "amount": [
        76467600
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#4": {
      "amount": [
        12853503
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#8": {
      "amount": [
        23163134
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#4": {
      "amount": [
        24260989
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#5": {
      "amount": [
        75621667
      ]
    },
    "std::allocator<int>::~allocator#11": {
      "amount": [
        25485916
      ]
    },
    "std::forward<std::vector<int, std::allocator<int> > const&>#0": {
      "amount": [
        19888168
      ]
    },
    "std::vector<int, std::allocator<int> >::begin#3": {
      "amount": [
        23216417
      ]
    },
    "std::vector<int, std::allocator<int> >::end#4": {
      "amount": [
        12725020
      ]
    },
    "std::vector<int, std::allocator<int> >::size#4": {
      "amount": [
        12684709
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#6": {
      "amount": [
        306645219
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#5": {
      "amount": [
        86876090
      ]
    },
    "std::allocator<int>::allocator#11": {
      "amount": [
        37891695
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#6": {
      "amount": [
        63035489
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#6": {
      "amount": [
        12640033
      ]
    },
    "std::allocator<int>::allocator#12": {
      "amount": [
        25467853
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#7": {
      "amount": [
        37146418
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#6": {
      "amount": [
        50745597
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#6": {
      "amount": [
        12043589
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#9": {
      "amount": [
        12676098
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#5": {
      "amount": [
        108805747
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#4": {
      "amount": [
        62385818
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#7": {
      "amount": [
        273462398
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#5": {
      "amount": [
        127395559
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#8": {
      "amount": [
        12774688
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#5": {
      "amount": [
        50399363
      ]
    },
    "[compare_traces]#8": {
      "amount": [
        12726623
      ]
    },
    "[libstdc++.so.6.0.30]#2": {
      "amount": [
        23616358
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#9": {
      "amount": [
        61536843
      ]
    },
    "malloc#1": {
      "amount": [
        12630987
      ]
    },
    "operator new#9": {
      "amount": [
        18607105
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#6": {
      "amount": [
        12518759
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#5": {
      "amount": [
        17436947
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#8": {
      "amount": [
        21905046
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#6": {
      "amount": [
        109839583
      ]
    },
    "std::allocator<int>::allocator#13": {
      "amount": [
        18810725
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#9": {
      "amount": [
        25344822
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#7": {
      "amount": [
        12686267
      ]
    },
    "std::allocator<int>::allocator#14": {
      "amount": [
        12735123
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#6": {
      "amount": [
        37844615
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#6": {
      "amount": [
        56041106
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#4": {
      "amount": [
        37487525
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#4": {
      "amount": [
        38095703
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#5": {
      "amount": [
        37284754
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#5": {
      "amount": [
        24615583
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#5": {
      "amount": [
        75813821
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#3": {
      "amount": [
        74235231
      ]
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#3": {
      "amount": [
        59111812
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#4": {
      "amount": [
        24281552
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#4": {
      "amount": [
        37038829
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#5": {
      "amount": [
        122359097
      ]
    },
    "[compare_traces]#9": {
      "amount": [
        12518337
      ]
    },
    "__memmove_avx_unaligned_erms#3": {
      "amount": [
        197136791
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#5": {
      "amount": [
        125854986
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#6": {
      "amount": [
        36539783
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#4": {
      "amount": [
        68997652
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#5": {
      "amount": [
        25506937
      ]
    },
    "std::__niter_wrap<int*>#1": {
      "amount": [
        25439013
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#6": {
      "amount": [
        20399422
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#5": {
      "amount": [
        37861023
      ]
    },
    "std::__niter_base<int*>#3": {
      "amount": [
        10277465
      ]
    },
    "std::__niter_wrap<int*>#2": {
      "amount": [
        12970502
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#6": {
      "amount": [
        12943404
      ]
    },
    "std::allocator<int>::~allocator#12": {
      "amount": [
        38046359
      ]
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#1": {
      "amount": [
        12700595
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#5": {
      "amount": [
        18323084
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#7": {
      "amount": [
        75475898
      ]
    },
    "std::vector<int, std::allocator<int> >::end#5": {
      "amount": [
        100095789
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#8": {
      "amount": [
        12726046
      ]
    },
    "std::vector<int, std::allocator<int> >::size#5": {
      "amount": [
        124093598
      ]
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::~new_allocator#0": {
      "amount": [
        12930460
      ]
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::max_size#0": {
      "amount": [
        12446407
      ]
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::_M_max_size#0": {
      "amount": [
        12686522
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#2": {
      "amount": [
        12640521
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#3": {
      "amount": [
        175297252
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#3": {
      "amount": [
        23839615
      ]
    },
    "std::_Destroy<int*, int>#3": {
      "amount": [
        12717217
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#9": {
      "amount": [
        63786244
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#7": {
      "amount": [
        74277913
      ]
    },
    "std::_Destroy<int*, int>#4": {
      "amount": [
        38227415
      ]
    },
    "std::_Destroy<int*>#5": {
      "amount": [
        61815262
      ]
    },
    "std::_Destroy_aux<true>::__destroy<int*>#4": {
      "amount": [
        12055061
      ]
    },
    "std::_Destroy<int*>#6": {
      "amount": [
        12485831
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#8": {
      "amount": [
        50207833
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#10": {
      "amount": [
        12718019
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#7": {
      "amount": [
        50791276
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#10": {
      "amount": [
        184868380
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#9": {
      "amount": [
        99518397
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#2": {
      "amount": [
        25406331
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#4": {
      "amount": [
        76446530
      ]
    },
    "[compare_traces]#10": {
      "amount": [
        12628987
      ]
    },
    "[libstdc++.so.6.0.30]#3": {
      "amount": [
        38122420
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#3": {
      "amount": [
        35262974
      ]
    },
    "cfree@GLIBC_2.2.5#4": {
      "amount": [
        22485661
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#8": {
      "amount": [
        139498569
      ]
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#2": {
      "amount": [
        25445695
      ]
    },
    "std::allocator<int>::~allocator#13": {
      "amount": [
        25331049
      ]
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#3": {
      "amount": [
        12659232
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#5": {
      "amount": [
        87787006
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#8": {
      "amount": [
        24310024
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#8": {
      "amount": [
        49723465
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#4": {
      "amount": [
        7087617
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> >*>#1": {
      "amount": [
        12693691
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl#2": {
      "amount": [
        9732254
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#4": {
      "amount": [
        47701489
      ]
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate#1": {
      "amount": [
        11874751
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#3": {
      "amount": [
        738601691
      ]
    },
    "std::allocator<int>::~allocator#14": {
      "amount": [
        12664817
      ]
    },
    "std::min<int>#9": {
      "amount": [
        240208118
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#9": {
      "amount": [
        874128789
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#9": {
      "amount": [
        22571668
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#9": {
      "amount": [
        975585683
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector#0": {
      "amount": [
        12647605
      ]
    },
    "levenshteinDistance#6": {
      "amount": [
        12943836
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size#1": {
      "amount": [
        12833894
      ]
    },
    "std::initializer_list<double>::end#1": {
      "amount": [
        12645999
      ]
    },
    "std::min<double>#1": {
      "amount": [
        12971161
      ]
    },
    "std::initializer_list<double>::size#1": {
      "amount": [
        9090399
      ]
    },
    "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>#2": {
      "amount": [
        10322674
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#15": {
      "amount": [
        25399799
      ]
    },
    "std::operator==<char>#0": {
      "amount": [
        12724857
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#3": {
      "amount": [
        10746272
      ]
    },
    "switch_cost_levenshtein#3": {
      "amount": [
        37285722
      ]
    },
    "[compare_traces]#11": {
      "amount": [
        280321307
      ]
    },
    "levenshteinDistance#7": {
      "amount": [
        7551570242
      ]
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::~new_allocator#1": {
      "amount": [
        12936808
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#11": {
      "amount": [
        12667196
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#5": {
      "amount": [
        12727143
      ]
    },
    "std::initializer_list<int>::begin#14": {
      "amount": [
        149762211
      ]
    },
    "std::initializer_list<int>::end#10": {
      "amount": [
        315863852
      ]
    },
    "std::min<int>#10": {
      "amount": [
        850985924
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#10": {
      "amount": [
        163179839
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#10": {
      "amount": [
        294516478
      ]
    },
    "std::initializer_list<int>::begin#15": {
      "amount": [
        372195237
      ]
    },
    "std::initializer_list<int>::end#11": {
      "amount": [
        528614294
      ]
    },
    "std::initializer_list<int>::begin#16": {
      "amount": [
        234230327
      ]
    },
    "std::initializer_list<int>::size#9": {
      "amount": [
        247638257
      ]
    },
    "std::initializer_list<int>::size#10": {
      "amount": [
        220830235
      ]
    },
    "std::min_element<int const*>#10": {
      "amount": [
        608452193
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#16": {
      "amount": [
        394624181
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#11": {
      "amount": [
        146151561
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#11": {
      "amount": [
        4030617359
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#17": {
      "amount": [
        2409171206
      ]
    },
    "std::min_element<int const*>#11": {
      "amount": [
        310219823
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#10": {
      "amount": [
        2643379664
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#8": {
      "amount": [
        12985621
      ]
    },
    "malloc#2": {
      "amount": [
        9052033
      ]
    },
    "std::vector<int, std::allocator<int> >::_M_default_initialize#2": {
      "amount": [
        11075286
      ]
    },
    "std::__uninitialized_default_n_a<int*, unsigned long, int>#2": {
      "amount": [
        12869702
      ]
    },
    "std::_Construct<int>#1": {
      "amount": [
        12497097
      ]
    },
    "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>#3": {
      "amount": [
        12713172
      ]
    },
    "std::_Construct<int>#2": {
      "amount": [
        12697978
      ]
    },
    "std::__fill_n_a<int*, unsigned long, int>#1": {
      "amount": [
        12137374
      ]
    },
    "std::__fill_n_a<int*, unsigned long, int>#2": {
      "amount": [
        12721709
      ]
    },
    "std::__fill_a1<int*, int>#3": {
      "amount": [
        73901871
      ]
    },
    "std::fill_n<int*, unsigned long, int>#3": {
      "amount": [
        12687717
      ]
    },
    "std::vector<int, std::allocator<int> >::_S_check_init_len#1": {
      "amount": [
        12631144
      ]
    },
    "__gnu_cxx::new_allocator<int>::max_size#0": {
      "amount": [
        24347368
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#12": {
      "amount": [
        25350987
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#9": {
      "amount": [
        12586802
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#10": {
      "amount": [
        3285640435
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector#2": {
      "amount": [
        12704308
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base#3": {
      "amount": [
        12562089
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage#0": {
      "amount": [
        25408627
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate#2": {
      "amount": [
        12680393
      ]
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::allocate#2": {
      "amount": [
        12750602
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl_data::_Vector_impl_data#1": {
      "amount": [
        12742168
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize#3": {
      "amount": [
        37357424
      ]
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#4": {
      "amount": [
        12243199
      ]
    },
    "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#2": {
      "amount": [
        12591375
      ]
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#5": {
      "amount": [
        75696501
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#6": {
      "amount": [
        74320729
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#6": {
      "amount": [
        25448701
      ]
    },
    "operator new#10": {
      "amount": [
        12703744
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#11": {
      "amount": [
        12581885
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#6": {
      "amount": [
        46116508
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#7": {
      "amount": [
        63549022
      ]
    },
    "std::allocator<int>::~allocator#15": {
      "amount": [
        36769197
      ]
    },
    "std::forward<std::vector<int, std::allocator<int> > const&>#1": {
      "amount": [
        12589759
      ]
    },
    "std::vector<int, std::allocator<int> >::begin#4": {
      "amount": [
        12685512
      ]
    },
    "std::vector<int, std::allocator<int> >::end#6": {
      "amount": [
        37820079
      ]
    },
    "std::vector<int, std::allocator<int> >::size#6": {
      "amount": [
        9246733
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#7": {
      "amount": [
        316535882
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#7": {
      "amount": [
        99858669
      ]
    },
    "std::allocator<int>::allocator#15": {
      "amount": [
        31161012
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#7": {
      "amount": [
        85743332
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#10": {
      "amount": [
        12739408
      ]
    },
    "std::allocator<int>::allocator#16": {
      "amount": [
        60258553
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#11": {
      "amount": [
        38333876
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#9": {
      "amount": [
        12744317
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#9": {
      "amount": [
        25393913
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#12": {
      "amount": [
        37589697
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#7": {
      "amount": [
        156005093
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#6": {
      "amount": [
        24831953
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#10": {
      "amount": [
        245238045
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#7": {
      "amount": [
        88305635
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#10": {
      "amount": [
        25303597
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#7": {
      "amount": [
        50430159
      ]
    },
    "[compare_traces]#12": {
      "amount": [
        12620124
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#11": {
      "amount": [
        59781406
      ]
    },
    "malloc#3": {
      "amount": [
        45478634
      ]
    },
    "operator new#11": {
      "amount": [
        24235362
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#8": {
      "amount": [
        11848012
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#7": {
      "amount": [
        50947957
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#12": {
      "amount": [
        22818228
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#8": {
      "amount": [
        62716437
      ]
    },
    "std::allocator<int>::allocator#17": {
      "amount": [
        9429608
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#9": {
      "amount": [
        33374410
      ]
    },
    "std::allocator<int>::allocator#18": {
      "amount": [
        23950360
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#8": {
      "amount": [
        25404797
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#8": {
      "amount": [
        113490390
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#6": {
      "amount": [
        12647635
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#6": {
      "amount": [
        37409116
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#7": {
      "amount": [
        20330076
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#7": {
      "amount": [
        12716271
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#7": {
      "amount": [
        36944496
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#5": {
      "amount": [
        22421062
      ]
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#4": {
      "amount": [
        119480609
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#6": {
      "amount": [
        12696165
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#6": {
      "amount": [
        37086564
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#6": {
      "amount": [
        49502178
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#7": {
      "amount": [
        45434711
      ]
    },
    "[compare_traces]#13": {
      "amount": [
        12654704
      ]
    },
    "__memmove_avx_unaligned_erms#4": {
      "amount": [
        146112494
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#7": {
      "amount": [
        111415608
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#8": {
      "amount": [
        37357275
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#6": {
      "amount": [
        44293643
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#7": {
      "amount": [
        12630693
      ]
    },
    "std::__niter_wrap<int*>#3": {
      "amount": [
        37438912
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#8": {
      "amount": [
        38473225
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#7": {
      "amount": [
        88288413
      ]
    },
    "std::__niter_base<int*>#4": {
      "amount": [
        37319812
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#8": {
      "amount": [
        11596458
      ]
    },
    "std::allocator<int>::~allocator#16": {
      "amount": [
        36985108
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#7": {
      "amount": [
        50691745
      ]
    },
    "std::vector<int, std::allocator<int> >::begin#5": {
      "amount": [
        50719857
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#10": {
      "amount": [
        88241668
      ]
    },
    "std::vector<int, std::allocator<int> >::end#7": {
      "amount": [
        88339795
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#11": {
      "amount": [
        30877569
      ]
    },
    "std::vector<int, std::allocator<int> >::size#7": {
      "amount": [
        96476821
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#9": {
      "amount": [
        12594216
      ]
    },
    "std::forward<std::vector<int, std::allocator<int> > const&>#2": {
      "amount": [
        13034321
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#8": {
      "amount": [
        12667149
      ]
    },
    "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#3": {
      "amount": [
        12716854
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len#0": {
      "amount": [
        12612978
      ]
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::max_size#1": {
      "amount": [
        10248625
      ]
    },
    "std::min<unsigned long>#1": {
      "amount": [
        12633972
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#4": {
      "amount": [
        76291344
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#5": {
      "amount": [
        73488861
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#5": {
      "amount": [
        75667397
      ]
    },
    "std::_Destroy<int*, int>#5": {
      "amount": [
        38094375
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#13": {
      "amount": [
        12678740
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#13": {
      "amount": [
        38176136
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#10": {
      "amount": [
        96388600
      ]
    },
    "std::_Destroy<int*, int>#6": {
      "amount": [
        37899511
      ]
    },
    "std::_Destroy<int*>#7": {
      "amount": [
        37060512
      ]
    },
    "std::_Destroy_aux<true>::__destroy<int*>#5": {
      "amount": [
        25216213
      ]
    },
    "std::_Destroy_aux<true>::__destroy<int*>#6": {
      "amount": [
        12705208
      ]
    },
    "std::_Destroy<int*>#8": {
      "amount": [
        34493604
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#10": {
      "amount": [
        47939589
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#14": {
      "amount": [
        23733895
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#10": {
      "amount": [
        48563577
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#14": {
      "amount": [
        298550168
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#11": {
      "amount": [
        89470626
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#4": {
      "amount": [
        37770778
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#6": {
      "amount": [
        57948674
      ]
    },
    "[compare_traces]#14": {
      "amount": [
        25235093
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#5": {
      "amount": [
        22144475
      ]
    },
    "cfree@GLIBC_2.2.5#5": {
      "amount": [
        29544190
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#11": {
      "amount": [
        63655646
      ]
    },
    "std::allocator<int>::~allocator#17": {
      "amount": [
        62979252
      ]
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#4": {
      "amount": [
        12728040
      ]
    },
    "std::allocator<int>::~allocator#18": {
      "amount": [
        12733536
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#7": {
      "amount": [
        50848952
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#10": {
      "amount": [
        50856630
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#11": {
      "amount": [
        60570428
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#11": {
      "amount": [
        12737388
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#6": {
      "amount": [
        12856202
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> >*>#2": {
      "amount": [
        12720077
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#6": {
      "amount": [
        12633180
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate#1": {
      "amount": [
        24861721
      ]
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate#2": {
      "amount": [
        12712442
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#4": {
      "amount": [
        795459911
      ]
    },
    "std::allocator<int>::allocator#19": {
      "amount": [
        12016850
      ]
    },
    "std::allocator<int>::~allocator#19": {
      "amount": [
        12685080
      ]
    },
    "std::min<int>#11": {
      "amount": [
        244653148
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#11": {
      "amount": [
        680559403
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#11": {
      "amount": [
        724803240
      ]
    },
    "std::min<double>#2": {
      "amount": [
        12540168
      ]
    },
    "std::min_element<double const*>#1": {
      "amount": [
        10343024
      ]
    },
    "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>#3": {
      "amount": [
        12640737
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#18": {
      "amount": [
        25070856
      ]
    },
    "std::operator==<char>#1": {
      "amount": [
        12584095
      ]
    },
    "__memcmp_avx2_movbe#0": {
      "amount": [
        11413807
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#4": {
      "amount": [
        5596697
      ]
    },
    "switch_cost_levenshtein#4": {
      "amount": [
        21923554
      ]
    },
    "[compare_traces]#15": {
      "amount": [
        171906868
      ]
    },
    "levenshteinDistance#8": {
      "amount": [
        5514966293
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >#1": {
      "amount": [
        12735625
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_get_Tp_allocator#1": {
      "amount": [
        12466894
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#7": {
      "amount": [
        11014680
      ]
    },
    "std::allocator<int>::allocator#20": {
      "amount": [
        12691924
      ]
    },
    "std::allocator<std::vector<int, std::allocator<int> > >::~allocator#1": {
      "amount": [
        12434313
      ]
    },
    "std::initializer_list<int>::begin#17": {
      "amount": [
        49228833
      ]
    },
    "std::initializer_list<int>::end#12": {
      "amount": [
        246366834
      ]
    },
    "std::min<int>#12": {
      "amount": [
        960246817
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#12": {
      "amount": [
        173550597
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#12": {
      "amount": [
        221507174
      ]
    },
    "std::initializer_list<int>::begin#18": {
      "amount": [
        385884757
      ]
    },
    "std::initializer_list<int>::end#13": {
      "amount": [
        508110016
      ]
    },
    "std::initializer_list<int>::begin#19": {
      "amount": [
        166708871
      ]
    },
    "std::initializer_list<int>::size#11": {
      "amount": [
        173890334
      ]
    },
    "std::initializer_list<int>::size#12": {
      "amount": [
        170464209
      ]
    },
    "std::min_element<int const*>#12": {
      "amount": [
        391456481
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#19": {
      "amount": [
        187338032
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#13": {
      "amount": [
        112346026
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#13": {
      "amount": [
        3117194827
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#20": {
      "amount": [
        1805564101
      ]
    },
    "std::min_element<int const*>#13": {
      "amount": [
        199427109
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#12": {
      "amount": [
        2135583858
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#9": {
      "amount": [
        25726996
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#9": {
      "amount": [
        12367619
      ]
    },
    "operator new#12": {
      "amount": [
        12874734
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#10": {
      "amount": [
        25755213
      ]
    },
    "std::allocator<int>::allocator#21": {
      "amount": [
        12548907
      ]
    },
    "std::allocator<int>::allocator#22": {
      "amount": [
        11939367
      ]
    },
    "std::allocator<int>::~allocator#20": {
      "amount": [
        12453376
      ]
    },
    "std::__uninitialized_default_n<int*, unsigned long>#2": {
      "amount": [
        12721458
      ]
    },
    "std::__uninitialized_default_n<int*, unsigned long>#3": {
      "amount": [
        12565634
      ]
    },
    "std::__fill_a1<int*, int>#4": {
      "amount": [
        126729437
      ]
    },
    "std::vector<int, std::allocator<int> >::_S_check_init_len#2": {
      "amount": [
        12692291
      ]
    },
    "std::allocator_traits<std::allocator<int> >::max_size#1": {
      "amount": [
        12647358
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#12": {
      "amount": [
        12736476
      ]
    },
    "std::_Destroy<int*>#9": {
      "amount": [
        12708161
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#15": {
      "amount": [
        25098915
      ]
    },
    "cfree@GLIBC_2.2.5#6": {
      "amount": [
        12252705
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#12": {
      "amount": [
        2373221798
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector#3": {
      "amount": [
        13048540
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base#4": {
      "amount": [
        12692542
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage#1": {
      "amount": [
        12671902
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate#3": {
      "amount": [
        12643368
      ]
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::allocate#1": {
      "amount": [
        23714092
      ]
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::allocate#2": {
      "amount": [
        12426170
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl#0": {
      "amount": [
        25224040
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl_data::_Vector_impl_data#2": {
      "amount": [
        12498704
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#7": {
      "amount": [
        12565881
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#12": {
      "amount": [
        10566481
      ]
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#6": {
      "amount": [
        82530872
      ]
    },
    "operator new#13": {
      "amount": [
        12179229
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#8": {
      "amount": [
        63290271
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#8": {
      "amount": [
        25486282
      ]
    },
    "operator new#14": {
      "amount": [
        24067182
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#15": {
      "amount": [
        12389112
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#8": {
      "amount": [
        25799282
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#9": {
      "amount": [
        36149832
      ]
    },
    "std::allocator<int>::~allocator#21": {
      "amount": [
        37687145
      ]
    },
    "std::forward<std::vector<int, std::allocator<int> > const&>#3": {
      "amount": [
        25426871
      ]
    },
    "std::vector<int, std::allocator<int> >::begin#6": {
      "amount": [
        12653288
      ]
    },
    "std::vector<int, std::allocator<int> >::end#8": {
      "amount": [
        12751174
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#10": {
      "amount": [
        267842993
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#9": {
      "amount": [
        61455970
      ]
    },
    "std::allocator<int>::allocator#23": {
      "amount": [
        48091391
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#8": {
      "amount": [
        125125639
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#13": {
      "amount": [
        12702799
      ]
    },
    "std::allocator<int>::allocator#24": {
      "amount": [
        12616394
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#14": {
      "amount": [
        12651383
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#11": {
      "amount": [
        49433645
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#16": {
      "amount": [
        50333174
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#9": {
      "amount": [
        82919505
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#8": {
      "amount": [
        12689450
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#12": {
      "amount": [
        146654404
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#9": {
      "amount": [
        74883740
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#12": {
      "amount": [
        25359077
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#10": {
      "amount": [
        25315754
      ]
    },
    "[compare_traces]#16": {
      "amount": [
        12730931
      ]
    },
    "[libstdc++.so.6.0.30]#4": {
      "amount": [
        38214428
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#13": {
      "amount": [
        36512482
      ]
    },
    "malloc#4": {
      "amount": [
        12478693
      ]
    },
    "operator new#15": {
      "amount": [
        25524133
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#9": {
      "amount": [
        12689183
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#11": {
      "amount": [
        72830147
      ]
    },
    "std::allocator<int>::allocator#25": {
      "amount": [
        12714606
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#12": {
      "amount": [
        12241032
      ]
    },
    "std::allocator<int>::allocator#26": {
      "amount": [
        12774568
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#10": {
      "amount": [
        12744632
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#10": {
      "amount": [
        23097799
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#8": {
      "amount": [
        50956707
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#8": {
      "amount": [
        61596229
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#9": {
      "amount": [
        13005293
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#9": {
      "amount": [
        38070827
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#7": {
      "amount": [
        12710814
      ]
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#5": {
      "amount": [
        113014130
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#8": {
      "amount": [
        22928279
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#8": {
      "amount": [
        63710061
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#9": {
      "amount": [
        63774754
      ]
    },
    "__memmove_avx_unaligned_erms#5": {
      "amount": [
        181975022
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#8": {
      "amount": [
        73953531
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#10": {
      "amount": [
        10321073
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#8": {
      "amount": [
        47178370
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#9": {
      "amount": [
        12722325
      ]
    },
    "std::__niter_base<int*>#5": {
      "amount": [
        10684855
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#10": {
      "amount": [
        25314135
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#9": {
      "amount": [
        50047947
      ]
    },
    "std::__niter_wrap<int*>#4": {
      "amount": [
        12724943
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#10": {
      "amount": [
        12675072
      ]
    },
    "std::allocator<int>::~allocator#22": {
      "amount": [
        38636515
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#9": {
      "amount": [
        25473721
      ]
    },
    "std::vector<int, std::allocator<int> >::begin#7": {
      "amount": [
        33883292
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#12": {
      "amount": [
        113224976
      ]
    },
    "std::vector<int, std::allocator<int> >::end#9": {
      "amount": [
        49491370
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#13": {
      "amount": [
        25396522
      ]
    },
    "std::vector<int, std::allocator<int> >::size#8": {
      "amount": [
        88382477
      ]
    },
    "std::allocator<std::vector<int, std::allocator<int> > >::allocator#2": {
      "amount": [
        12675986
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size#1": {
      "amount": [
        24082617
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#6": {
      "amount": [
        49384149
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#7": {
      "amount": [
        136813796
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#7": {
      "amount": [
        21925844
      ]
    },
    "std::_Destroy<int*, int>#7": {
      "amount": [
        25372572
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#16": {
      "amount": [
        86529704
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#13": {
      "amount": [
        134655959
      ]
    },
    "std::_Destroy<int*, int>#8": {
      "amount": [
        12723031
      ]
    },
    "std::_Destroy<int*>#10": {
      "amount": [
        38011902
      ]
    },
    "std::_Destroy<int*>#11": {
      "amount": [
        12699927
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#12": {
      "amount": [
        38093697
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#17": {
      "amount": [
        12690329
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#12": {
      "amount": [
        23490165
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#17": {
      "amount": [
        147966264
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#13": {
      "amount": [
        36271650
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#6": {
      "amount": [
        37113275
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#8": {
      "amount": [
        24448278
      ]
    },
    "[compare_traces]#17": {
      "amount": [
        12740973
      ]
    },
    "[libstdc++.so.6.0.30]#5": {
      "amount": [
        21405131
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#7": {
      "amount": [
        38340015
      ]
    },
    "cfree@GLIBC_2.2.5#7": {
      "amount": [
        21348421
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#13": {
      "amount": [
        88432550
      ]
    },
    "std::allocator<int>::~allocator#23": {
      "amount": [
        24017598
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#9": {
      "amount": [
        24648774
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#13": {
      "amount": [
        12904961
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#14": {
      "amount": [
        38102083
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_get_Tp_allocator#2": {
      "amount": [
        8878486
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl#3": {
      "amount": [
        12727512
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#8": {
      "amount": [
        35955812
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate#2": {
      "amount": [
        12719112
      ]
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate#3": {
      "amount": [
        12695800
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#5": {
      "amount": [
        469622018
      ]
    },
    "std::allocator<std::vector<int, std::allocator<int> > >::~allocator#2": {
      "amount": [
        36592941
      ]
    },
    "std::max<unsigned long>#1": {
      "amount": [
        12730655
      ]
    },
    "std::min<int>#13": {
      "amount": [
        237952551
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#13": {
      "amount": [
        610842445
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#11": {
      "amount": [
        24701628
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#13": {
      "amount": [
        497068784
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::data#0": {
      "amount": [
        12966383
      ]
    },
    "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>#4": {
      "amount": [
        12564854
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]#1": {
      "amount": [
        12916539
      ]
    },
    "[compare_traces]#18": {
      "amount": [
        150941016
      ]
    },
    "levenshteinDistance#9": {
      "amount": [
        3271874714
      ]
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::~new_allocator#2": {
      "amount": [
        12710597
      ]
    },
    "std::initializer_list<int>::begin#20": {
      "amount": [
        101398675
      ]
    },
    "std::initializer_list<int>::end#14": {
      "amount": [
        123513901
      ]
    },
    "std::min<int>#14": {
      "amount": [
        550776564
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#14": {
      "amount": [
        38105678
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#14": {
      "amount": [
        89019981
      ]
    },
    "std::initializer_list<int>::begin#21": {
      "amount": [
        251301704
      ]
    },
    "std::initializer_list<int>::end#15": {
      "amount": [
        287509286
      ]
    },
    "std::initializer_list<int>::begin#22": {
      "amount": [
        137085714
      ]
    },
    "std::initializer_list<int>::size#13": {
      "amount": [
        138877158
      ]
    },
    "std::initializer_list<int>::size#14": {
      "amount": [
        101480976
      ]
    },
    "std::min_element<int const*>#14": {
      "amount": [
        278696331
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#21": {
      "amount": [
        201500474
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#15": {
      "amount": [
        86687948
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#15": {
      "amount": [
        2329528399
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#22": {
      "amount": [
        1254959568
      ]
    },
    "[unknown]#0": {
      "amount": [
        11956240
      ]
    },
    "std::min_element<int const*>#15": {
      "amount": [
        178284620
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#14": {
      "amount": [
        1472465082
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#12": {
      "amount": [
        12689890
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#13": {
      "amount": [
        11944816
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#11": {
      "amount": [
        9948239
      ]
    },
    "std::__iterator_category<int*>#0": {
      "amount": [
        12704292
      ]
    },
    "std::__fill_a1<int*, int>#5": {
      "amount": [
        75471527
      ]
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#5": {
      "amount": [
        12692518
      ]
    },
    "std::vector<int, std::allocator<int> >::_S_max_size#1": {
      "amount": [
        12718763
      ]
    },
    "std::_Destroy<int*, int>#9": {
      "amount": [
        12620377
      ]
    },
    "std::allocator<int>::~allocator#24": {
      "amount": [
        12717001
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#14": {
      "amount": [
        1487173954
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector#4": {
      "amount": [
        12723452
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base#5": {
      "amount": [
        12617831
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage#2": {
      "amount": [
        12610724
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl#1": {
      "amount": [
        11267440
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#9": {
      "amount": [
        12531648
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#14": {
      "amount": [
        12640467
      ]
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#7": {
      "amount": [
        59992718
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#10": {
      "amount": [
        12948213
      ]
    },
    "operator new#16": {
      "amount": [
        37199686
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#10": {
      "amount": [
        11032597
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#11": {
      "amount": [
        61158336
      ]
    },
    "std::vector<int, std::allocator<int> >::begin#8": {
      "amount": [
        12691445
      ]
    },
    "std::vector<int, std::allocator<int> >::size#9": {
      "amount": [
        12683020
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#13": {
      "amount": [
        213676200
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#10": {
      "amount": [
        19607347
      ]
    },
    "std::allocator<int>::allocator#27": {
      "amount": [
        12695216
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#10": {
      "amount": [
        25393812
      ]
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#6": {
      "amount": [
        12111435
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#13": {
      "amount": [
        12639128
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#11": {
      "amount": [
        84837427
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#14": {
      "amount": [
        126945932
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#10": {
      "amount": [
        10999605
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#11": {
      "amount": [
        12715998
      ]
    },
    "[libstdc++.so.6.0.30]#6": {
      "amount": [
        12666172
      ]
    },
    "malloc#5": {
      "amount": [
        12687153
      ]
    },
    "operator new#17": {
      "amount": [
        25449937
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#12": {
      "amount": [
        12615798
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#15": {
      "amount": [
        24947537
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#14": {
      "amount": [
        46870194
      ]
    },
    "std::allocator<int>::allocator#28": {
      "amount": [
        12633850
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#15": {
      "amount": [
        25629454
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#13": {
      "amount": [
        25420470
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#12": {
      "amount": [
        50272682
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#9": {
      "amount": [
        12628465
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#10": {
      "amount": [
        12712823
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#11": {
      "amount": [
        12657977
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#11": {
      "amount": [
        75385074
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#9": {
      "amount": [
        37871326
      ]
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#6": {
      "amount": [
        25344962
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#10": {
      "amount": [
        12694498
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#10": {
      "amount": [
        12640328
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#11": {
      "amount": [
        38639109
      ]
    },
    "[compare_traces]#19": {
      "amount": [
        11956500
      ]
    },
    "__memmove_avx_unaligned_erms#6": {
      "amount": [
        63507496
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#9": {
      "amount": [
        46960787
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#10": {
      "amount": [
        63404670
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#11": {
      "amount": [
        12749388
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#11": {
      "amount": [
        50405946
      ]
    },
    "std::__niter_base<int*>#6": {
      "amount": [
        12637815
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#9": {
      "amount": [
        25242509
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#14": {
      "amount": [
        71908575
      ]
    },
    "std::vector<int, std::allocator<int> >::end#10": {
      "amount": [
        50708904
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#15": {
      "amount": [
        25352641
      ]
    },
    "std::vector<int, std::allocator<int> >::size#10": {
      "amount": [
        112565030
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#15": {
      "amount": [
        23821381
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#14": {
      "amount": [
        12892110
      ]
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::max_size#2": {
      "amount": [
        13001923
      ]
    },
    "std::min<unsigned long>#2": {
      "amount": [
        13015918
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#8": {
      "amount": [
        47364591
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#8": {
      "amount": [
        36656666
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#18": {
      "amount": [
        12735062
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#15": {
      "amount": [
        50601614
      ]
    },
    "std::_Destroy<int*, int>#10": {
      "amount": [
        38157266
      ]
    },
    "std::_Destroy<int*>#12": {
      "amount": [
        50259669
      ]
    },
    "std::_Destroy_aux<true>::__destroy<int*>#7": {
      "amount": [
        12676351
      ]
    },
    "std::_Destroy_aux<true>::__destroy<int*>#8": {
      "amount": [
        25360145
      ]
    },
    "std::_Destroy<int*>#13": {
      "amount": [
        11995143
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#14": {
      "amount": [
        12542602
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#19": {
      "amount": [
        150433582
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#15": {
      "amount": [
        74413476
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#8": {
      "amount": [
        25581862
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#10": {
      "amount": [
        37837746
      ]
    },
    "[compare_traces]#20": {
      "amount": [
        12582284
      ]
    },
    "[libstdc++.so.6.0.30]#7": {
      "amount": [
        9452442
      ]
    },
    "cfree@GLIBC_2.2.5#8": {
      "amount": [
        47496134
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#14": {
      "amount": [
        88071719
      ]
    },
    "std::allocator<int>::~allocator#25": {
      "amount": [
        12687585
      ]
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#7": {
      "amount": [
        24987948
      ]
    },
    "std::allocator<int>::~allocator#26": {
      "amount": [
        12728577
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#16": {
      "amount": [
        38149465
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#16": {
      "amount": [
        12704672
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl#4": {
      "amount": [
        12643477
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#9": {
      "amount": [
        12703116
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate#3": {
      "amount": [
        12737488
      ]
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate#4": {
      "amount": [
        12685781
      ]
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::deallocate#1": {
      "amount": [
        11710549
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl#5": {
      "amount": [
        12751692
      ]
    },
    "std::allocator<std::vector<int, std::allocator<int> > >::~allocator#3": {
      "amount": [
        12746056
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#6": {
      "amount": [
        356222314
      ]
    },
    "std::max<unsigned long>#2": {
      "amount": [
        12720665
      ]
    },
    "std::min<int>#15": {
      "amount": [
        86420674
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#15": {
      "amount": [
        338882347
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#15": {
      "amount": [
        372138672
      ]
    },
    "std::min<double>#3": {
      "amount": [
        12710760
      ]
    },
    "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>#5": {
      "amount": [
        12715987
      ]
    },
    "__memcmp_avx2_movbe#1": {
      "amount": [
        12516274
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]#2": {
      "amount": [
        12723136
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#5": {
      "amount": [
        12685394
      ]
    },
    "switch_cost_levenshtein#5": {
      "amount": [
        36255796
      ]
    },
    "[compare_traces]#21": {
      "amount": [
        96218749
      ]
    },
    "levenshteinDistance#10": {
      "amount": [
        1896863008
      ]
    },
    "std::initializer_list<int>::end#16": {
      "amount": [
        36269670
      ]
    },
    "std::min<int>#16": {
      "amount": [
        299532854
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#16": {
      "amount": [
        62284901
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#16": {
      "amount": [
        124040163
      ]
    },
    "std::initializer_list<int>::begin#23": {
      "amount": [
        174297866
      ]
    },
    "std::initializer_list<int>::end#17": {
      "amount": [
        236362510
      ]
    },
    "std::initializer_list<int>::begin#24": {
      "amount": [
        63503120
      ]
    },
    "std::initializer_list<int>::size#15": {
      "amount": [
        71369288
      ]
    },
    "std::initializer_list<int>::size#16": {
      "amount": [
        38076348
      ]
    },
    "std::min_element<int const*>#16": {
      "amount": [
        165199482
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#23": {
      "amount": [
        99225849
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#17": {
      "amount": [
        38087700
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#17": {
      "amount": [
        1231496083
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#24": {
      "amount": [
        501253148
      ]
    },
    "std::min_element<int const*>#17": {
      "amount": [
        99057027
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#16": {
      "amount": [
        768568202
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#15": {
      "amount": [
        11984981
      ]
    },
    "malloc#6": {
      "amount": [
        12555326
      ]
    },
    "std::allocator<int>::~allocator#27": {
      "amount": [
        12292660
      ]
    },
    "std::_Construct<int>#3": {
      "amount": [
        12726160
      ]
    },
    "std::__fill_a1<int*, int>#6": {
      "amount": [
        25174388
      ]
    },
    "std::vector<int, std::allocator<int> >::_S_max_size#2": {
      "amount": [
        12650741
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#16": {
      "amount": [
        829738312
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#11": {
      "amount": [
        12710874
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#17": {
      "amount": [
        12964770
      ]
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#8": {
      "amount": [
        25386015
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#12": {
      "amount": [
        35892714
      ]
    },
    "operator new#18": {
      "amount": [
        25505991
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#18": {
      "amount": [
        12729555
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#15": {
      "amount": [
        100911502
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#11": {
      "amount": [
        62922372
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#11": {
      "amount": [
        37554580
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#16": {
      "amount": [
        12661585
      ]
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#8": {
      "amount": [
        11360429
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#16": {
      "amount": [
        12675410
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#19": {
      "amount": [
        12676607
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#12": {
      "amount": [
        12612565
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#17": {
      "amount": [
        87323748
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#11": {
      "amount": [
        49733546
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#12": {
      "amount": [
        12743778
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#14": {
      "amount": [
        11847955
      ]
    },
    "malloc#7": {
      "amount": [
        12576066
      ]
    },
    "operator new#19": {
      "amount": [
        12656139
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#13": {
      "amount": [
        25404916
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#16": {
      "amount": [
        24863149
      ]
    },
    "std::allocator<int>::allocator#29": {
      "amount": [
        12845870
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#16": {
      "amount": [
        12714898
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#17": {
      "amount": [
        12759958
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#14": {
      "amount": [
        25851436
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#13": {
      "amount": [
        47704891
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#11": {
      "amount": [
        12709480
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#10": {
      "amount": [
        25013429
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#12": {
      "amount": [
        12632850
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#12": {
      "amount": [
        9207916
      ]
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#7": {
      "amount": [
        24022590
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#12": {
      "amount": [
        12677676
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#11": {
      "amount": [
        24948314
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#12": {
      "amount": [
        12714327
      ]
    },
    "__memmove_avx_unaligned_erms#7": {
      "amount": [
        61868450
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#10": {
      "amount": [
        63564736
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#13": {
      "amount": [
        13005295
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#12": {
      "amount": [
        12670932
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#13": {
      "amount": [
        12693263
      ]
    },
    "std::__niter_base<int*>#7": {
      "amount": [
        11140235
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#13": {
      "amount": [
        25437502
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#13": {
      "amount": [
        25451540
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#12": {
      "amount": [
        20502971
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#12": {
      "amount": [
        25605394
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#11": {
      "amount": [
        25185284
      ]
    },
    "std::vector<int, std::allocator<int> >::begin#9": {
      "amount": [
        25125415
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#17": {
      "amount": [
        25060793
      ]
    },
    "std::vector<int, std::allocator<int> >::end#11": {
      "amount": [
        12768629
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#18": {
      "amount": [
        23417304
      ]
    },
    "std::vector<int, std::allocator<int> >::size#11": {
      "amount": [
        38388753
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#18": {
      "amount": [
        12694443
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len#1": {
      "amount": [
        24629273
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size#2": {
      "amount": [
        12715521
      ]
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::_M_max_size#1": {
      "amount": [
        12755398
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#9": {
      "amount": [
        49989030
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#9": {
      "amount": [
        12049977
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#20": {
      "amount": [
        12632012
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#17": {
      "amount": [
        51190081
      ]
    },
    "std::_Destroy<int*, int>#11": {
      "amount": [
        19703505
      ]
    },
    "std::_Destroy_aux<true>::__destroy<int*>#9": {
      "amount": [
        11403648
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#16": {
      "amount": [
        12661797
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#20": {
      "amount": [
        12686097
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#15": {
      "amount": [
        12725732
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#21": {
      "amount": [
        113730890
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#17": {
      "amount": [
        38127933
      ]
    },
    "cfree@GLIBC_2.2.5#9": {
      "amount": [
        37608437
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#16": {
      "amount": [
        25695597
      ]
    },
    "std::allocator<int>::~allocator#28": {
      "amount": [
        12715257
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#19": {
      "amount": [
        11316220
      ]
    },
    "[libstdc++.so.6.0.30]#8": {
      "amount": [
        12682677
      ]
    },
    "std::allocator<std::vector<int, std::allocator<int> > >::~allocator#4": {
      "amount": [
        23862861
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#7": {
      "amount": [
        100662827
      ]
    },
    "std::allocator<int>::allocator#30": {
      "amount": [
        12705429
      ]
    },
    "std::min<int>#17": {
      "amount": [
        89016131
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#17": {
      "amount": [
        175951220
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#17": {
      "amount": [
        220732512
      ]
    },
    "std::min<double>#4": {
      "amount": [
        12557454
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#6": {
      "amount": [
        12740480
      ]
    },
    "[compare_traces]#22": {
      "amount": [
        25474200
      ]
    },
    "levenshteinDistance#11": {
      "amount": [
        757547414
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#10": {
      "amount": [
        12717791
      ]
    },
    "std::initializer_list<int>::begin#25": {
      "amount": [
        38218634
      ]
    },
    "std::initializer_list<int>::end#18": {
      "amount": [
        24960213
      ]
    },
    "std::min<int>#18": {
      "amount": [
        240321299
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#18": {
      "amount": [
        20125709
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#18": {
      "amount": [
        50499839
      ]
    },
    "std::initializer_list<int>::begin#26": {
      "amount": [
        109521243
      ]
    },
    "std::initializer_list<int>::end#19": {
      "amount": [
        75679520
      ]
    },
    "std::initializer_list<int>::size#17": {
      "amount": [
        37119813
      ]
    },
    "std::initializer_list<int>::size#18": {
      "amount": [
        76076980
      ]
    },
    "std::min_element<int const*>#18": {
      "amount": [
        123008194
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#25": {
      "amount": [
        62876129
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#19": {
      "amount": [
        583404819
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#26": {
      "amount": [
        315640678
      ]
    },
    "std::min_element<int const*>#19": {
      "amount": [
        25408614
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#18": {
      "amount": [
        450823021
      ]
    },
    "std::__fill_a1<int*, int>#7": {
      "amount": [
        16948041
      ]
    },
    "std::allocator_traits<std::allocator<int> >::max_size#2": {
      "amount": [
        12907041
      ]
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#9": {
      "amount": [
        10422344
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#18": {
      "amount": [
        431475187
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate#4": {
      "amount": [
        12617553
      ]
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::allocate#3": {
      "amount": [
        10988289
      ]
    },
    "operator new#20": {
      "amount": [
        10257678
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#13": {
      "amount": [
        12672326
      ]
    },
    "operator new#21": {
      "amount": [
        10857808
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#14": {
      "amount": [
        12671149
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#16": {
      "amount": [
        88911450
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#12": {
      "amount": [
        12676791
      ]
    },
    "std::allocator<int>::allocator#31": {
      "amount": [
        12600139
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#13": {
      "amount": [
        10961188
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#17": {
      "amount": [
        12644623
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#21": {
      "amount": [
        12734320
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#13": {
      "amount": [
        50417693
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#18": {
      "amount": [
        12952081
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#15": {
      "amount": [
        12827200
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#14": {
      "amount": [
        37919521
      ]
    },
    "__gnu_cxx::new_allocator<int>::_M_max_size#3": {
      "amount": [
        12714768
      ]
    },
    "operator new#22": {
      "amount": [
        25355258
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#15": {
      "amount": [
        12710057
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#18": {
      "amount": [
        12328146
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#12": {
      "amount": [
        12658972
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#13": {
      "amount": [
        12337491
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#13": {
      "amount": [
        51087984
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#12": {
      "amount": [
        12643607
      ]
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#8": {
      "amount": [
        37385035
      ]
    },
    "__memmove_avx_unaligned_erms#8": {
      "amount": [
        38408122
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#11": {
      "amount": [
        36731356
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#14": {
      "amount": [
        35372632
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#14": {
      "amount": [
        12619116
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#19": {
      "amount": [
        12657691
      ]
    },
    "std::vector<int, std::allocator<int> >::size#12": {
      "amount": [
        12783861
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#10": {
      "amount": [
        12631968
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#22": {
      "amount": [
        12876103
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#22": {
      "amount": [
        12732846
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#18": {
      "amount": [
        25382507
      ]
    },
    "std::_Destroy<int*, int>#12": {
      "amount": [
        12392359
      ]
    },
    "std::_Destroy_aux<true>::__destroy<int*>#10": {
      "amount": [
        12711247
      ]
    },
    "std::_Destroy_aux<true>::__destroy<int*>#11": {
      "amount": [
        25342104
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#17": {
      "amount": [
        25500306
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#23": {
      "amount": [
        12724155
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#11": {
      "amount": [
        12595173
      ]
    },
    "std::allocator<int>::~allocator#29": {
      "amount": [
        12587344
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#12": {
      "amount": [
        12617604
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#20": {
      "amount": [
        25235846
      ]
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate#5": {
      "amount": [
        12645840
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#8": {
      "amount": [
        63469149
      ]
    },
    "std::min<int>#19": {
      "amount": [
        38535599
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#19": {
      "amount": [
        75105422
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#19": {
      "amount": [
        124683561
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#7": {
      "amount": [
        12711784
      ]
    },
    "[compare_traces]#23": {
      "amount": [
        12937111
      ]
    },
    "levenshteinDistance#12": {
      "amount": [
        567025503
      ]
    },
    "std::allocator<std::vector<int, std::allocator<int> > >::allocator#3": {
      "amount": [
        12640452
      ]
    },
    "std::initializer_list<int>::begin#27": {
      "amount": [
        12784706
      ]
    },
    "std::initializer_list<int>::end#20": {
      "amount": [
        12722236
      ]
    },
    "std::min<int>#20": {
      "amount": [
        48883655
      ]
    },
    "std::initializer_list<int>::begin#28": {
      "amount": [
        12606256
      ]
    },
    "std::initializer_list<int>::end#21": {
      "amount": [
        25407176
      ]
    },
    "std::initializer_list<int>::begin#29": {
      "amount": [
        37867564
      ]
    },
    "std::initializer_list<int>::size#19": {
      "amount": [
        38363741
      ]
    },
    "std::initializer_list<int>::size#20": {
      "amount": [
        25391535
      ]
    },
    "std::min_element<int const*>#20": {
      "amount": [
        48802523
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#27": {
      "amount": [
        12726899
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#19": {
      "amount": [
        12721267
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#20": {
      "amount": [
        225969612
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#28": {
      "amount": [
        146146844
      ]
    },
    "std::min_element<int const*>#21": {
      "amount": [
        12709573
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#20": {
      "amount": [
        136894988
      ]
    },
    "std::__fill_a1<int*, int>#8": {
      "amount": [
        12712722
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#20": {
      "amount": [
        152174084
      ]
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#9": {
      "amount": [
        37986445
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#15": {
      "amount": [
        12670097
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#17": {
      "amount": [
        25332584
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#20": {
      "amount": [
        13000141
      ]
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#10": {
      "amount": [
        12679653
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#23": {
      "amount": [
        11998479
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#14": {
      "amount": [
        12772583
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#12": {
      "amount": [
        12669617
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#19": {
      "amount": [
        12600532
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#16": {
      "amount": [
        12678614
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#18": {
      "amount": [
        12676166
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#19": {
      "amount": [
        12833220
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#16": {
      "amount": [
        25365544
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#14": {
      "amount": [
        24449146
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#13": {
      "amount": [
        12637773
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#14": {
      "amount": [
        12475617
      ]
    },
    "__memmove_avx_unaligned_erms#9": {
      "amount": [
        12659735
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#15": {
      "amount": [
        12660981
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#14": {
      "amount": [
        12689145
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#21": {
      "amount": [
        12268262
      ]
    },
    "std::vector<int, std::allocator<int> >::size#13": {
      "amount": [
        24751473
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#11": {
      "amount": [
        12698846
      ]
    },
    "std::_Destroy<int*, int>#13": {
      "amount": [
        12742366
      ]
    },
    "std::_Destroy<int*>#14": {
      "amount": [
        12649066
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#24": {
      "amount": [
        12641311
      ]
    },
    "std::allocator<int>::~allocator#30": {
      "amount": [
        12738517
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#9": {
      "amount": [
        10920608
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#21": {
      "amount": [
        50790011
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#21": {
      "amount": [
        47963696
      ]
    },
    "levenshteinDistance#13": {
      "amount": [
        202005562
      ]
    },
    "std::initializer_list<int>::begin#30": {
      "amount": [
        12763341
      ]
    },
    "std::min<int>#21": {
      "amount": [
        12684290
      ]
    },
    "std::initializer_list<int>::end#22": {
      "amount": [
        38131164
      ]
    },
    "std::initializer_list<int>::size#21": {
      "amount": [
        12706598
      ]
    },
    "std::initializer_list<int>::size#22": {
      "amount": [
        12651970
      ]
    },
    "std::min_element<int const*>#22": {
      "amount": [
        37966125
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#29": {
      "amount": [
        12298291
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#21": {
      "amount": [
        92885793
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#30": {
      "amount": [
        25389825
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#22": {
      "amount": [
        25374638
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#13": {
      "amount": [
        12487431
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#22": {
      "amount": [
        101232556
      ]
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#10": {
      "amount": [
        12655963
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#17": {
      "amount": [
        12717313
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#18": {
      "amount": [
        12728811
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#13": {
      "amount": [
        12704864
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#20": {
      "amount": [
        12697410
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#17": {
      "amount": [
        12686885
      ]
    },
    "__gnu_cxx::new_allocator<int>::_M_max_size#4": {
      "amount": [
        12699435
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#20": {
      "amount": [
        9786496
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#14": {
      "amount": [
        12149590
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#15": {
      "amount": [
        12668437
      ]
    },
    "__memmove_avx_unaligned_erms#10": {
      "amount": [
        12680178
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#12": {
      "amount": [
        12712164
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#10": {
      "amount": [
        12724965
      ]
    },
    "std::_Destroy<int*>#15": {
      "amount": [
        12684260
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#18": {
      "amount": [
        12723481
      ]
    },
    "std::min<int>#22": {
      "amount": [
        12957510
      ]
    },
    "[compare_traces]#24": {
      "amount": [
        12812739
      ]
    },
    "levenshteinDistance#14": {
      "amount": [
        38297345
      ]
    },
    "std::min<int>#23": {
      "amount": [
        12716867
      ]
    },
    "std::min_element<int const*>#23": {
      "amount": [
        12739153
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#22": {
      "amount": [
        47663595
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#31": {
      "amount": [
        12684542
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#23": {
      "amount": [
        12830035
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#21": {
      "amount": [
        12655906
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#21": {
      "amount": [
        12731944
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#15": {
      "amount": [
        12627561
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#14": {
      "amount": [
        12675081
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#11": {
      "amount": [
        12662542
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#25": {
      "amount": [
        12761696
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#13": {
      "amount": [
        12627460
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#23": {
      "amount": [
        25484436
      ]
    },
    "levenshteinDistance#15": {
      "amount": [
        12701594
      ]
    },
    "std::min<int>#24": {
      "amount": [
        10879200
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#24": {
      "amount": [
        12656017
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#24": {
      "amount": [
        12730420
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#25": {
      "amount": [
        12674380
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#32": {
      "amount": [
        12667255
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#25": {
      "amount": [
        12727004
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#33": {
      "amount": [
        12698554
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#26": {
      "amount": [
        12685249
      ]
    },
    "_int_free#1": {
      "amount": [
        373024788
      ]
    },
    "_int_malloc#0": {
      "amount": [
        1002329063
      ]
    },
    "_start#0": {
      "amount": [
        3226
      ]
    },
    "cfree@GLIBC_2.2.5#10": {
      "amount": [
        336186317
      ]
    },
    "malloc#8": {
      "amount": [
        851359263
      ]
    }
  },
  "resource_type_map": {
    "_dl_lookup_symbol_x#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "_dl_lookup_symbol_x"
    },
    "dl_main#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "_dl_sysdep_start"
        }
      ],
      "uid": "dl_main"
    },
    "memset#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "_dl_sysdep_start"
        },
        {
          "func": "dl_main"
        }
      ],
      "uid": "memset"
    },
    "_int_free#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "[unknown]"
        }
      ],
      "uid": "_int_free"
    },
    "unlink_chunk.constprop.0#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "[unknown]"
        }
      ],
      "uid": "unlink_chunk.constprop.0"
    },
    "computeTransformationCost#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "computeTransformationCost#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "computeTransformationCost#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "computeTransformationCost#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "computeTransformationCost#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "[compare_traces]#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "[compare_traces]"
    },
    "computeTransformationCost#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "computeTransformationCost#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "computeTransformationCost#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        }
      ],
      "uid": "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "levenshteinDistance#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::initializer_list<int>::end#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "__gnu_cxx::__ops::__iter_less_iter#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::begin#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::__iter_less_iter#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::min_element<int const*>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::allocator<int>::~allocator#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "operator new#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::_Destroy<int*, int>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::min<int>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        },
        {
          "func": "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "switch_cost_levenshtein#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "switch_cost_levenshtein"
    },
    "[compare_traces]#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
    },
    "std::initializer_list<int>::begin#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "__gnu_cxx::__ops::__iter_less_iter#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::begin#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::__iter_less_iter#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::min_element<int const*>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::allocate#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::allocate"
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::allocate#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::allocate"
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::vector<int, std::allocator<int> >::begin#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::begin"
    },
    "std::vector<int, std::allocator<int> >::vector#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "__gnu_cxx::new_allocator<int>::allocate#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "[compare_traces]#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "[compare_traces]"
    },
    "[libstdc++.so.6.0.30]#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "__gnu_cxx::new_allocator<int>::allocate#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "malloc#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "malloc"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a1<false, int const*, int*>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "__memmove_avx_unaligned_erms#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__copy_move_a2<false, int const*, int*>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "std::__niter_base<int*>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int*>"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::begin"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::end"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::size#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::vector<int, std::allocator<int> >::vector#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::vector<int, std::allocator<int> >::~vector#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Destroy_aux<true>::__destroy<int*>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        },
        {
          "func": "std::_Destroy<int*>"
        }
      ],
      "uid": "std::_Destroy_aux<true>::__destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "[compare_traces]#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "[compare_traces]"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "cfree@GLIBC_2.2.5#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::min<int>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        },
        {
          "func": "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size"
    },
    "switch_cost_levenshtein#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "switch_cost_levenshtein"
    },
    "[compare_traces]#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
    },
    "std::initializer_list<int>::begin#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "__gnu_cxx::__ops::__iter_less_iter#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::begin#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::__iter_less_iter#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::min_element<int const*>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<int, std::allocator<int> >::vector#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "std::__uninitialized_default_n<int*, unsigned long>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        }
      ],
      "uid": "std::__uninitialized_default_n<int*, unsigned long>"
    },
    "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        }
      ],
      "uid": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
    },
    "std::__fill_a1<int*, int>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_a<int*, int>"
        }
      ],
      "uid": "std::__fill_a1<int*, int>"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
    },
    "std::allocator<std::vector<int, std::allocator<int> > >::allocator#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::allocator<std::vector<int, std::allocator<int> > >::allocator"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
    },
    "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "operator new#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "operator new"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::allocator<int>::~allocator#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::vector<int, std::allocator<int> >::end#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::end"
    },
    "std::vector<int, std::allocator<int> >::size#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::vector<int, std::allocator<int> >::vector#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::allocator<int>::allocator#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::allocator<int>::allocator#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "__gnu_cxx::new_allocator<int>::allocate#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "__gnu_cxx::new_allocator<int>::_M_max_size#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::_M_max_size"
    },
    "__gnu_cxx::new_allocator<int>::allocate#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "__gnu_cxx::new_allocator<int>::_M_max_size#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        },
        {
          "func": "__gnu_cxx::new_allocator<int>::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::_M_max_size"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::allocator<int>::allocator#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::allocator<int>::allocator#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__copy_move_a1<false, int const*, int*>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move_a2<false, int const*, int*>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "__memmove_avx_unaligned_erms#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__copy_move_a2<false, int const*, int*>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__niter_base<int*>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int*>"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::__niter_wrap<int*>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_wrap<int*>"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::begin"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::end#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::end"
    },
    "std::vector<int, std::allocator<int> >::size#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        }
      ],
      "uid": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::vector<int, std::allocator<int> >::~vector#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Destroy<int*>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Destroy_aux<true>::__destroy<int*>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        },
        {
          "func": "std::_Destroy<int*>"
        }
      ],
      "uid": "std::_Destroy_aux<true>::__destroy<int*>"
    },
    "std::_Destroy<int*>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "[libstdc++.so.6.0.30]#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "cfree@GLIBC_2.2.5#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::allocator<int>::~allocator#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::vector<int, std::allocator<int> >::~vector#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::min<int>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<int, std::allocator<int> >::~vector#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::initializer_list<double>::begin#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::initializer_list<double>::begin"
    },
    "std::min<double>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::min<double>"
    },
    "std::min_element<double const*>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        }
      ],
      "uid": "std::min_element<double const*>"
    },
    "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        }
      ],
      "uid": "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        },
        {
          "func": "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size"
    },
    "[compare_traces]#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_get_Tp_allocator#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
    },
    "std::allocator<int>::allocator#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::allocator<int>::~allocator#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::initializer_list<int>::begin#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "__gnu_cxx::__ops::__iter_less_iter#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::begin#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::__iter_less_iter#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::min_element<int const*>#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "__gnu_cxx::new_allocator<int>::allocate#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::allocator<int>::~allocator#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::vector<int, std::allocator<int> >::_M_default_initialize#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::_M_default_initialize"
    },
    "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        }
      ],
      "uid": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
    },
    "std::_Construct<int>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        }
      ],
      "uid": "std::_Construct<int>"
    },
    "operator new#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::_Construct<int>"
        }
      ],
      "uid": "operator new"
    },
    "std::fill_n<int*, unsigned long, int>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        }
      ],
      "uid": "std::fill_n<int*, unsigned long, int>"
    },
    "std::__fill_a1<int*, int>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_a<int*, int>"
        }
      ],
      "uid": "std::__fill_a1<int*, int>"
    },
    "std::allocator<int>::allocator#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_S_check_init_len"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::allocator_traits<std::allocator<int> >::max_size#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_S_check_init_len"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::max_size"
    },
    "std::min<unsigned long>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_S_check_init_len"
        }
      ],
      "uid": "std::min<unsigned long>"
    },
    "std::vector<int, std::allocator<int> >::_S_max_size#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::_S_max_size"
    },
    "std::vector<int, std::allocator<int> >::~vector#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Destroy<int*, int>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Destroy_aux<true>::__destroy<int*>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy_aux<true>::__destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate"
    },
    "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        }
      ],
      "uid": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "operator new#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "operator new"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "operator new#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "operator new"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::allocator<int>::~allocator#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::vector<int, std::allocator<int> >::begin#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::begin"
    },
    "std::vector<int, std::allocator<int> >::end#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::end"
    },
    "std::vector<int, std::allocator<int> >::vector#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::allocator<int>::allocator#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::allocator<int>::allocator#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "__gnu_cxx::new_allocator<int>::allocate#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "__gnu_cxx::new_allocator<int>::allocate#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "__gnu_cxx::new_allocator<int>::_M_max_size#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        },
        {
          "func": "__gnu_cxx::new_allocator<int>::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::_M_max_size"
    },
    "operator new#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::allocator<int>::allocator#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        },
        {
          "func": "std::allocator<int>::allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::allocator<int>::allocator#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__copy_move_a1<false, int const*, int*>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__copy_move_a2<false, int const*, int*>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "__memmove_avx_unaligned_erms#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__copy_move_a2<false, int const*, int*>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "std::__niter_base<int*>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int*>"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::allocator<int>::~allocator#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::allocator<int>::~allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::~new_allocator"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::vector<int, std::allocator<int> >::begin#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::begin"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::begin"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::end#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::end"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::end"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::size#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::allocator<std::vector<int, std::allocator<int> > >::allocator#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
        }
      ],
      "uid": "std::allocator<std::vector<int, std::allocator<int> > >::allocator"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> >*>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::_Destroy<int*, int>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::vector<int, std::allocator<int> >::~vector#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Destroy<int*>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Destroy_aux<true>::__destroy<int*>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        },
        {
          "func": "std::_Destroy<int*>"
        }
      ],
      "uid": "std::_Destroy_aux<true>::__destroy<int*>"
    },
    "std::_Destroy<int*>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "cfree@GLIBC_2.2.5#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "operator delete#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "operator delete"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::allocator<int>::~allocator#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::allocator<int>::~allocator#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "std::vector<int, std::allocator<int> >::~vector#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate"
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::deallocate#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::deallocate"
    },
    "cfree@GLIBC_2.2.5#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::allocator<std::vector<int, std::allocator<int> > >::~allocator#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::allocator<std::vector<int, std::allocator<int> > >::~allocator"
    },
    "std::min<int>#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "levenshteinDistance#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size"
    },
    "std::initializer_list<double>::begin#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::initializer_list<double>::begin"
    },
    "std::max<unsigned long>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::max<unsigned long>"
    },
    "std::initializer_list<double>::end#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        }
      ],
      "uid": "std::initializer_list<double>::end"
    },
    "std::initializer_list<double>::size#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::initializer_list<double>::end"
        }
      ],
      "uid": "std::initializer_list<double>::size"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        },
        {
          "func": "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size"
    },
    "switch_cost_levenshtein#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "switch_cost_levenshtein"
    },
    "[compare_traces]#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::allocator<int>::~allocator#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::initializer_list<int>::begin#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "__gnu_cxx::__ops::__iter_less_iter#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::begin#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::__iter_less_iter#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::min_element<int const*>#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::_S_check_init_len#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::_S_check_init_len"
    },
    "std::vector<int, std::allocator<int> >::operator[]#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<int, std::allocator<int> >::vector#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "__gnu_cxx::new_allocator<int>::allocate#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::__uninitialized_default_n_a<int*, unsigned long, int>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
    },
    "std::allocator<int>::allocator#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::vector<int, std::allocator<int> >::_M_default_initialize#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::_M_default_initialize"
    },
    "std::__uninitialized_default_n<int*, unsigned long>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        }
      ],
      "uid": "std::__uninitialized_default_n<int*, unsigned long>"
    },
    "std::__uninitialized_default_n_a<int*, unsigned long, int>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        }
      ],
      "uid": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
    },
    "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        }
      ],
      "uid": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
    },
    "operator new#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        }
      ],
      "uid": "operator new"
    },
    "operator new#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::_Construct<int>"
        }
      ],
      "uid": "operator new"
    },
    "std::__addressof<int>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        }
      ],
      "uid": "std::__addressof<int>"
    },
    "std::fill_n<int*, unsigned long, int>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        }
      ],
      "uid": "std::fill_n<int*, unsigned long, int>"
    },
    "std::__fill_n_a<int*, unsigned long, int>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        }
      ],
      "uid": "std::__fill_n_a<int*, unsigned long, int>"
    },
    "std::__fill_a1<int*, int>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_a<int*, int>"
        }
      ],
      "uid": "std::__fill_a1<int*, int>"
    },
    "std::fill_n<int*, unsigned long, int>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        }
      ],
      "uid": "std::fill_n<int*, unsigned long, int>"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_S_check_init_len"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::_Destroy<int*>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "[compare_traces]#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "[compare_traces]"
    },
    "std::allocator<int>::~allocator#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate"
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::allocate#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::allocate"
    },
    "operator new#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl_data::_Vector_impl_data#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::allocator<int>::~allocator#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::forward<std::vector<int, std::allocator<int> > const&>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::forward<std::vector<int, std::allocator<int> > const&>"
    },
    "std::vector<int, std::allocator<int> >::begin#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::begin"
    },
    "std::vector<int, std::allocator<int> >::end#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::end"
    },
    "std::vector<int, std::allocator<int> >::size#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::vector<int, std::allocator<int> >::vector#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::allocator<int>::allocator#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::allocator<int>::allocator#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        },
        {
          "func": "std::allocator<int>::allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "__gnu_cxx::new_allocator<int>::allocate#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "[compare_traces]#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "[compare_traces]"
    },
    "[libstdc++.so.6.0.30]#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "__gnu_cxx::new_allocator<int>::allocate#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "malloc#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "malloc"
    },
    "operator new#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::allocator<int>::allocator#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        },
        {
          "func": "std::allocator<int>::allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::allocator<int>::allocator#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a1<false, int const*, int*>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a1<false, int const*, int*>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__copy_move_a2<false, int const*, int*>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "[compare_traces]#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "[compare_traces]"
    },
    "__memmove_avx_unaligned_erms#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__copy_move_a2<false, int const*, int*>#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__niter_wrap<int*>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_wrap<int*>"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "std::__niter_base<int*>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int*>"
    },
    "std::__niter_wrap<int*>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_wrap<int*>"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::allocator<int>::~allocator#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::allocator<int>::~allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::~new_allocator"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::begin"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::end#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::end"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::end"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::size#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::~new_allocator#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::~new_allocator"
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::max_size#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::max_size"
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::_M_max_size#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::max_size"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::_M_max_size"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::_Destroy<int*, int>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::vector<int, std::allocator<int> >::~vector#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Destroy<int*, int>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Destroy<int*>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Destroy_aux<true>::__destroy<int*>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy_aux<true>::__destroy<int*>"
    },
    "std::_Destroy<int*>#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "[compare_traces]#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "[compare_traces]"
    },
    "[libstdc++.so.6.0.30]#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "cfree@GLIBC_2.2.5#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::~new_allocator"
    },
    "std::allocator<int>::~allocator#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        },
        {
          "func": "std::allocator<int>::~allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::~new_allocator"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::vector<int, std::allocator<int> >::~vector#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> >*>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::allocator<int>::~allocator#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::min<int>#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<int, std::allocator<int> >::~vector#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
    },
    "levenshteinDistance#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size"
    },
    "std::initializer_list<double>::end#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::initializer_list<double>::end"
    },
    "std::min<double>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::min<double>"
    },
    "std::initializer_list<double>::size#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::initializer_list<double>::end"
        }
      ],
      "uid": "std::initializer_list<double>::size"
    },
    "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        }
      ],
      "uid": "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        },
        {
          "func": "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::operator==<char>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::operator==<char>"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size"
    },
    "switch_cost_levenshtein#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "switch_cost_levenshtein"
    },
    "[compare_traces]#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::~new_allocator#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::~new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
    },
    "std::initializer_list<int>::begin#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "__gnu_cxx::__ops::__iter_less_iter#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::begin#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::__iter_less_iter#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::min_element<int const*>#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "malloc#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "malloc"
    },
    "std::vector<int, std::allocator<int> >::_M_default_initialize#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::_M_default_initialize"
    },
    "std::__uninitialized_default_n_a<int*, unsigned long, int>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        }
      ],
      "uid": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
    },
    "std::_Construct<int>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        }
      ],
      "uid": "std::_Construct<int>"
    },
    "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        }
      ],
      "uid": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
    },
    "std::_Construct<int>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        }
      ],
      "uid": "std::_Construct<int>"
    },
    "std::__fill_n_a<int*, unsigned long, int>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        }
      ],
      "uid": "std::__fill_n_a<int*, unsigned long, int>"
    },
    "std::__fill_n_a<int*, unsigned long, int>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        }
      ],
      "uid": "std::__fill_n_a<int*, unsigned long, int>"
    },
    "std::__fill_a1<int*, int>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_a<int*, int>"
        }
      ],
      "uid": "std::__fill_a1<int*, int>"
    },
    "std::fill_n<int*, unsigned long, int>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        }
      ],
      "uid": "std::fill_n<int*, unsigned long, int>"
    },
    "std::vector<int, std::allocator<int> >::_S_check_init_len#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::_S_check_init_len"
    },
    "__gnu_cxx::new_allocator<int>::max_size#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_S_check_init_len"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_S_max_size"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::max_size"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate"
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::allocate#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::allocate"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl_data::_Vector_impl_data#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "operator new#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "operator new"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::allocator<int>::~allocator#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::forward<std::vector<int, std::allocator<int> > const&>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::forward<std::vector<int, std::allocator<int> > const&>"
    },
    "std::vector<int, std::allocator<int> >::begin#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::begin"
    },
    "std::vector<int, std::allocator<int> >::end#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::end"
    },
    "std::vector<int, std::allocator<int> >::size#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::vector<int, std::allocator<int> >::vector#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::allocator<int>::allocator#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::allocator<int>::allocator#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        },
        {
          "func": "std::allocator<int>::allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "__gnu_cxx::new_allocator<int>::allocate#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "[compare_traces]#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "[compare_traces]"
    },
    "__gnu_cxx::new_allocator<int>::allocate#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "malloc#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "malloc"
    },
    "operator new#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::allocator<int>::allocator#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::allocator<int>::allocator#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a1<false, int const*, int*>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__copy_move_a1<false, int const*, int*>#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__copy_move_a2<false, int const*, int*>#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "[compare_traces]#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "[compare_traces]"
    },
    "__memmove_avx_unaligned_erms#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__copy_move_a2<false, int const*, int*>#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__niter_wrap<int*>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_wrap<int*>"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "std::__niter_base<int*>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int*>"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::allocator<int>::~allocator#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::vector<int, std::allocator<int> >::begin#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::begin"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::begin"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::end#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::end"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::end"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::size#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::forward<std::vector<int, std::allocator<int> > const&>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::forward<std::vector<int, std::allocator<int> > const&>"
    },
    "std::vector<int, std::allocator<int> >::vector#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        }
      ],
      "uid": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::max_size#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::max_size"
    },
    "std::min<unsigned long>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size"
        }
      ],
      "uid": "std::min<unsigned long>"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::_Destroy<int*, int>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::vector<int, std::allocator<int> >::~vector#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Destroy<int*, int>#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Destroy<int*>#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Destroy_aux<true>::__destroy<int*>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        },
        {
          "func": "std::_Destroy<int*>"
        }
      ],
      "uid": "std::_Destroy_aux<true>::__destroy<int*>"
    },
    "std::_Destroy_aux<true>::__destroy<int*>#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy_aux<true>::__destroy<int*>"
    },
    "std::_Destroy<int*>#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "[compare_traces]#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "[compare_traces]"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "cfree@GLIBC_2.2.5#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::allocator<int>::~allocator#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        },
        {
          "func": "std::allocator<int>::~allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::~new_allocator"
    },
    "std::allocator<int>::~allocator#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::vector<int, std::allocator<int> >::~vector#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> >*>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate"
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::allocator<int>::allocator#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::allocator<int>::~allocator#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::min<int>#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::min<double>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::min<double>"
    },
    "std::min_element<double const*>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        }
      ],
      "uid": "std::min_element<double const*>"
    },
    "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        }
      ],
      "uid": "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        },
        {
          "func": "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::operator==<char>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::operator==<char>"
    },
    "__memcmp_avx2_movbe#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::operator==<char>"
        }
      ],
      "uid": "__memcmp_avx2_movbe"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size"
    },
    "switch_cost_levenshtein#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "switch_cost_levenshtein"
    },
    "[compare_traces]#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_get_Tp_allocator#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
    },
    "std::allocator<int>::allocator#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::allocator<std::vector<int, std::allocator<int> > >::~allocator#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::allocator<std::vector<int, std::allocator<int> > >::~allocator"
    },
    "std::initializer_list<int>::begin#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "__gnu_cxx::__ops::__iter_less_iter#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::begin#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::__iter_less_iter#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::min_element<int const*>#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<int, std::allocator<int> >::vector#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "operator new#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::allocator<int>::allocator#21": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::allocator<int>::allocator#22": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::allocator<int>::~allocator#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::__uninitialized_default_n<int*, unsigned long>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        }
      ],
      "uid": "std::__uninitialized_default_n<int*, unsigned long>"
    },
    "std::__uninitialized_default_n<int*, unsigned long>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        }
      ],
      "uid": "std::__uninitialized_default_n<int*, unsigned long>"
    },
    "std::__fill_a1<int*, int>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_a<int*, int>"
        }
      ],
      "uid": "std::__fill_a1<int*, int>"
    },
    "std::vector<int, std::allocator<int> >::_S_check_init_len#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::_S_check_init_len"
    },
    "std::allocator_traits<std::allocator<int> >::max_size#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_S_check_init_len"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_S_max_size"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::max_size"
    },
    "std::vector<int, std::allocator<int> >::~vector#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Destroy<int*>#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "cfree@GLIBC_2.2.5#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate"
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::allocate#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::allocate"
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::allocate#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::allocate"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl_data::_Vector_impl_data#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "operator new#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "operator new"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "operator new#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "operator new"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::allocator<int>::~allocator#21": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::forward<std::vector<int, std::allocator<int> > const&>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::forward<std::vector<int, std::allocator<int> > const&>"
    },
    "std::vector<int, std::allocator<int> >::begin#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::begin"
    },
    "std::vector<int, std::allocator<int> >::end#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::end"
    },
    "std::vector<int, std::allocator<int> >::vector#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::allocator<int>::allocator#23": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::allocator<int>::allocator#24": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        },
        {
          "func": "std::allocator<int>::allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "__gnu_cxx::new_allocator<int>::allocate#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "[compare_traces]#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "[compare_traces]"
    },
    "[libstdc++.so.6.0.30]#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "__gnu_cxx::new_allocator<int>::allocate#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "malloc#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "malloc"
    },
    "operator new#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::allocator<int>::allocator#25": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::allocator<int>::allocator#26": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a1<false, int const*, int*>#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__copy_move_a1<false, int const*, int*>#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move_a2<false, int const*, int*>#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "__memmove_avx_unaligned_erms#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__copy_move_a2<false, int const*, int*>#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__niter_base<int*>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int*>"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "std::__niter_wrap<int*>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_wrap<int*>"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::allocator<int>::~allocator#22": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "std::vector<int, std::allocator<int> >::begin#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::begin"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::begin"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::end#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::end"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::end"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::size#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::allocator<std::vector<int, std::allocator<int> > >::allocator#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
        }
      ],
      "uid": "std::allocator<std::vector<int, std::allocator<int> > >::allocator"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::_Destroy<int*, int>#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::vector<int, std::allocator<int> >::~vector#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Destroy<int*, int>#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Destroy<int*>#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Destroy<int*>#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "[compare_traces]#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "[compare_traces]"
    },
    "[libstdc++.so.6.0.30]#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "cfree@GLIBC_2.2.5#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::allocator<int>::~allocator#23": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::vector<int, std::allocator<int> >::~vector#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_get_Tp_allocator#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate"
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::allocator<std::vector<int, std::allocator<int> > >::~allocator#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::allocator<std::vector<int, std::allocator<int> > >::~allocator"
    },
    "std::max<unsigned long>#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::max<unsigned long>"
    },
    "std::min<int>#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<int, std::allocator<int> >::vector#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::data#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::data"
    },
    "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        }
      ],
      "uid": "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]"
    },
    "[compare_traces]#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::~new_allocator#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::allocator<std::vector<int, std::allocator<int> > >::~allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::~new_allocator"
    },
    "std::initializer_list<int>::begin#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "__gnu_cxx::__ops::__iter_less_iter#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#21": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::begin#22": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#21": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::__iter_less_iter#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#22": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "[unknown]#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        }
      ],
      "uid": "[unknown]"
    },
    "std::min_element<int const*>#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<int, std::allocator<int> >::vector#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::__iterator_category<int*>#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        }
      ],
      "uid": "std::__iterator_category<int*>"
    },
    "std::__fill_a1<int*, int>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_a<int*, int>"
        }
      ],
      "uid": "std::__fill_a1<int*, int>"
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_S_check_init_len"
        },
        {
          "func": "std::allocator<int>::~allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::~new_allocator"
    },
    "std::vector<int, std::allocator<int> >::_S_max_size#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_S_check_init_len"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::_S_max_size"
    },
    "std::_Destroy<int*, int>#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::allocator<int>::~allocator#24": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "operator new#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "operator new"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::vector<int, std::allocator<int> >::begin#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::begin"
    },
    "std::vector<int, std::allocator<int> >::size#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::vector<int, std::allocator<int> >::vector#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::allocator<int>::allocator#27": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::~new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "[libstdc++.so.6.0.30]#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "malloc#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "malloc"
    },
    "operator new#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::allocator<int>::allocator#28": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a1<false, int const*, int*>#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__copy_move_a1<false, int const*, int*>#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move_a2<false, int const*, int*>#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "[compare_traces]#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "[compare_traces]"
    },
    "__memmove_avx_unaligned_erms#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "std::__niter_base<int*>#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int*>"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::begin"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::end#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::end"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::end"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::size#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::vector<int, std::allocator<int> >::vector#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::max_size#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::max_size"
    },
    "std::min<unsigned long>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
        }
      ],
      "uid": "std::min<unsigned long>"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::vector<int, std::allocator<int> >::~vector#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Destroy<int*, int>#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Destroy<int*>#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Destroy_aux<true>::__destroy<int*>#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        },
        {
          "func": "std::_Destroy<int*>"
        }
      ],
      "uid": "std::_Destroy_aux<true>::__destroy<int*>"
    },
    "std::_Destroy_aux<true>::__destroy<int*>#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy_aux<true>::__destroy<int*>"
    },
    "std::_Destroy<int*>#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "[compare_traces]#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "[compare_traces]"
    },
    "[libstdc++.so.6.0.30]#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "cfree@GLIBC_2.2.5#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::allocator<int>::~allocator#25": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        },
        {
          "func": "std::allocator<int>::~allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::~new_allocator"
    },
    "std::allocator<int>::~allocator#26": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::vector<int, std::allocator<int> >::~vector#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate"
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate"
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::deallocate#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::deallocate"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl"
    },
    "std::allocator<std::vector<int, std::allocator<int> > >::~allocator#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "std::allocator<std::vector<int, std::allocator<int> > >::~allocator"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::max<unsigned long>#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::max<unsigned long>"
    },
    "std::min<int>#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::min<double>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::min<double>"
    },
    "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        }
      ],
      "uid": "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__memcmp_avx2_movbe#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::operator==<char>"
        }
      ],
      "uid": "__memcmp_avx2_movbe"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size"
    },
    "switch_cost_levenshtein#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "switch_cost_levenshtein"
    },
    "[compare_traces]#21": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::initializer_list<int>::end#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "__gnu_cxx::__ops::__iter_less_iter#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#23": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::begin#24": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#23": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::__iter_less_iter#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#24": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::min_element<int const*>#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "malloc#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "malloc"
    },
    "std::allocator<int>::~allocator#27": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::_Construct<int>#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        }
      ],
      "uid": "std::_Construct<int>"
    },
    "std::__fill_a1<int*, int>#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_a<int*, int>"
        }
      ],
      "uid": "std::__fill_a1<int*, int>"
    },
    "std::vector<int, std::allocator<int> >::_S_max_size#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_S_check_init_len"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::_S_max_size"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "operator new#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "operator new"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::vector<int, std::allocator<int> >::vector#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::~new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "__gnu_cxx::new_allocator<int>::allocate#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "malloc#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "malloc"
    },
    "operator new#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::allocator<int>::allocator#29": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        },
        {
          "func": "std::allocator<int>::allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__copy_move_a1<false, int const*, int*>#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move_a2<false, int const*, int*>#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "__memmove_avx_unaligned_erms#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__copy_move_a2<false, int const*, int*>#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__niter_base<int*>#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int*>"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::vector<int, std::allocator<int> >::begin#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::begin"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::begin"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::end#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::end"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::end"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::size#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size"
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::_M_max_size#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::max_size"
        },
        {
          "func": "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::max_size"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::_M_max_size"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::vector<int, std::allocator<int> >::~vector#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Destroy<int*, int>#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Destroy_aux<true>::__destroy<int*>#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy_aux<true>::__destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#21": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "cfree@GLIBC_2.2.5#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::allocator<int>::~allocator#28": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "[libstdc++.so.6.0.30]#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "std::allocator<std::vector<int, std::allocator<int> > >::~allocator#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "std::allocator<std::vector<int, std::allocator<int> > >::~allocator"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::allocator<int>::allocator#30": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::min<int>#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::min<double>#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::min<double>"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#6": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size"
    },
    "[compare_traces]#22": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
    },
    "std::initializer_list<int>::begin#25": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "__gnu_cxx::__ops::__iter_less_iter#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#26": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::size#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#25": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#26": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::min_element<int const*>#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::__fill_a1<int*, int>#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_a<int*, int>"
        }
      ],
      "uid": "std::__fill_a1<int*, int>"
    },
    "std::allocator_traits<std::allocator<int> >::max_size#2": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_S_check_init_len"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_S_max_size"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::max_size"
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        },
        {
          "func": "std::allocator<int>::~allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::~new_allocator"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate"
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::allocate#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::allocate"
    },
    "operator new#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "operator new#21": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "operator new"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::vector<int, std::allocator<int> >::vector#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::allocator<int>::allocator#31": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        },
        {
          "func": "std::allocator<int>::allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#21": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "__gnu_cxx::new_allocator<int>::allocate#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "__gnu_cxx::new_allocator<int>::_M_max_size#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::_M_max_size"
    },
    "operator new#22": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a1<false, int const*, int*>#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "__memmove_avx_unaligned_erms#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::end"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::size#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#22": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#22": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::vector<int, std::allocator<int> >::~vector#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Destroy<int*, int>#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Destroy_aux<true>::__destroy<int*>#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        },
        {
          "func": "std::_Destroy<int*>"
        }
      ],
      "uid": "std::_Destroy_aux<true>::__destroy<int*>"
    },
    "std::_Destroy_aux<true>::__destroy<int*>#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy_aux<true>::__destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#23": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "std::allocator<int>::~allocator#29": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate#5": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::min<int>#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#7": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size"
    },
    "[compare_traces]#23": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::allocator<std::vector<int, std::allocator<int> > >::allocator#3": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::allocator<std::vector<int, std::allocator<int> > >::allocator"
    },
    "std::initializer_list<int>::begin#27": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::initializer_list<int>::begin#28": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#21": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::begin#29": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#27": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::__iter_less_iter#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#28": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::min_element<int const*>#21": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::__fill_a1<int*, int>#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_a<int*, int>"
        }
      ],
      "uid": "std::__fill_a1<int*, int>"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::vector<int, std::allocator<int> >::vector#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::~new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#23": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "__gnu_cxx::new_allocator<int>::allocate#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        },
        {
          "func": "std::allocator<int>::allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#19": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#16": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a1<false, int const*, int*>#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move_a2<false, int const*, int*>#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "__memmove_avx_unaligned_erms#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#21": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::end"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::size#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::_Destroy<int*, int>#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Destroy<int*>#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#24": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::allocator<int>::~allocator#30": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#9": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::vector<int, std::allocator<int> >::operator[]#21": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#21": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "levenshteinDistance#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::initializer_list<int>::begin#30": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::min<int>#21": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::initializer_list<int>::end#22": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::size#21": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#22": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#22": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#29": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#21": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#30": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::vector<int, std::allocator<int> >::operator[]#22": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#22": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::vector<int, std::allocator<int> >::vector#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "__gnu_cxx::new_allocator<int>::allocate#17": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "__gnu_cxx::new_allocator<int>::_M_max_size#4": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        },
        {
          "func": "__gnu_cxx::new_allocator<int>::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::_M_max_size"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#20": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::__copy_move_a1<false, int const*, int*>#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move_a1<false, int const*, int*>#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "__memmove_avx_unaligned_erms#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#12": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Destroy<int*>#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#18": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "std::min<int>#22": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "[compare_traces]#24": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::min<int>#23": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::min_element<int const*>#23": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#22": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#31": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#23": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#21": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#21": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#14": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#11": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#25": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#13": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "std::vector<int, std::allocator<int> >::operator[]#23": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "levenshteinDistance#15": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::min<int>#24": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#24": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#24": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#25": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#32": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::vector<int, std::allocator<int> >::operator[]#25": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#33": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#26": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "_int_free#1": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [],
      "uid": "_int_free"
    },
    "_int_malloc#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [],
      "uid": "_int_malloc"
    },
    "_start#0": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [],
      "uid": "_start"
    },
    "cfree@GLIBC_2.2.5#10": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "malloc#8": {
      "command": "compare_traces",
      "time": 57.599063873291016,
      "trace": [],
      "uid": "malloc"
    }
  },
  "models": [],
  "origin": "979c7050f9d06b2796bffc995a3031dbc9a9dea6",
  "header": {
    "type": "time",
    "cmd": "./compare_traces inputs/minimal-baseline.txt inputs/minimal-target.txt",
    "workload": "",
    "units": {
      "time": "sample"
    }
  },
  "machine": {
    "architecture": "x86_64",
    "system": "Linux",
    "release": "5.15.146.1-microsoft-standard-WSL2",
    "host": "dellion",
    "cpu": {
      "physical": 6,
      "total": 12,
      "frequency": "2208.00Mhz"
    },
    "memory": {
      "total_ram": "7.7 GiB",
      "swap": "2.0 GiB"
    },
    "boot_info": "initrd=\\initrd.img WSL_ROOT_INIT=1 panic=-1 nr_cpus=12 hv_utils.timesync_implicit=1 console=hvc0 debug pty.legacy_count=0",
    "mem_details": {
      "MemTotal": "8026092 kB",
      "MemFree": "6621652 kB",
      "MemAvailable": "6951544 kB",
      "Buffers": "49852 kB",
      "Cached": "460616 kB",
      "SwapCached": "0 kB",
      "Active": "276708 kB",
      "Inactive": "735672 kB",
      "Active(anon)": "2224 kB",
      "Inactive(anon)": "503116 kB",
      "Active(file)": "274484 kB",
      "Inactive(file)": "232556 kB",
      "Unevictable": "0 kB",
      "Mlocked": "0 kB",
      "SwapTotal": "2097152 kB",
      "SwapFree": "2097152 kB",
      "Dirty": "0 kB",
      "Writeback": "0 kB",
      "AnonPages": "496956 kB",
      "Mapped": "281796 kB",
      "Shmem": "3428 kB",
      "KReclaimable": "77504 kB",
      "Slab": "140680 kB",
      "SReclaimable": "77504 kB",
      "SUnreclaim": "63176 kB",
      "KernelStack": "5728 kB",
      "PageTables": "7716 kB",
      "NFS_Unstable": "0 kB",
      "Bounce": "0 kB",
      "WritebackTmp": "0 kB",
      "CommitLimit": "6110196 kB",
      "Committed_AS": "2359608 kB",
      "VmallocTotal": "34359738367 kB",
      "VmallocUsed": "27908 kB",
      "VmallocChunk": "0 kB",
      "Percpu": "8960 kB",
      "AnonHugePages": "266240 kB",
      "ShmemHugePages": "0 kB",
      "ShmemPmdMapped": "0 kB",
      "FileHugePages": "0 kB",
      "FilePmdMapped": "0 kB",
      "HugePages_Total": "0",
      "HugePages_Free": "0",
      "HugePages_Rsvd": "0",
      "HugePages_Surp": "0",
      "Hugepagesize": "2048 kB",
      "Hugetlb": "0 kB",
      "DirectMap4k": "123904 kB",
      "DirectMap2M": "6060032 kB",
      "DirectMap1G": "11534336 kB"
    },
    "cpu_details": [
      {
        "processor": "0",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "0",
        "cpu cores": "6",
        "apicid": "0",
        "initial apicid": "0",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "1",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "0",
        "cpu cores": "6",
        "apicid": "1",
        "initial apicid": "1",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "2",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "1",
        "cpu cores": "6",
        "apicid": "2",
        "initial apicid": "2",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "3",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "1",
        "cpu cores": "6",
        "apicid": "3",
        "initial apicid": "3",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "4",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "2",
        "cpu cores": "6",
        "apicid": "4",
        "initial apicid": "4",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "5",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "2",
        "cpu cores": "6",
        "apicid": "5",
        "initial apicid": "5",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "6",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "3",
        "cpu cores": "6",
        "apicid": "6",
        "initial apicid": "6",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "7",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "3",
        "cpu cores": "6",
        "apicid": "7",
        "initial apicid": "7",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "8",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "4",
        "cpu cores": "6",
        "apicid": "8",
        "initial apicid": "8",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "9",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "4",
        "cpu cores": "6",
        "apicid": "9",
        "initial apicid": "9",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "10",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "5",
        "cpu cores": "6",
        "apicid": "10",
        "initial apicid": "10",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "11",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "5",
        "cpu cores": "6",
        "apicid": "11",
        "initial apicid": "11",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {}
    ]
  },
  "collector_info": {
    "name": "kperf",
    "params": {
      "repeat": 1,
      "with_sudo": false,
      "warmup": 3,
      "workload": ""
    }
  },
  "postprocessors": []
}