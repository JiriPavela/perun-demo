{
  "resources": {
    "__GI___libc_open#0": {
      "amount": [
        145455
      ]
    },
    "dl_main#0": {
      "amount": [
        896
      ]
    },
    "_int_free#0": {
      "amount": [
        1128765414
      ]
    },
    "std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::underflow#0": {
      "amount": [
        214027
      ]
    },
    "unlink_chunk.constprop.0#0": {
      "amount": [
        74976543
      ]
    },
    "computeTransformationCost#0": {
      "amount": [
        38143063
      ]
    },
    "computeTransformationCost#1": {
      "amount": [
        38913660
      ]
    },
    "computeTransformationCost#2": {
      "amount": [
        38112187
      ]
    },
    "computeTransformationCost#3": {
      "amount": [
        38219711
      ]
    },
    "computeTransformationCost#4": {
      "amount": [
        38107451
      ]
    },
    "computeTransformationCost#5": {
      "amount": [
        38223850
      ]
    },
    "computeTransformationCost#6": {
      "amount": [
        76061251
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#0": {
      "amount": [
        36927213
      ]
    },
    "[compare_traces]#0": {
      "amount": [
        38172224
      ]
    },
    "levenshteinDistance#0": {
      "amount": [
        295350107
      ]
    },
    "std::initializer_list<int>::begin#0": {
      "amount": [
        37881184
      ]
    },
    "std::initializer_list<int>::begin#1": {
      "amount": [
        38084344
      ]
    },
    "std::initializer_list<int>::end#0": {
      "amount": [
        113725274
      ]
    },
    "std::min_element<int const*>#0": {
      "amount": [
        37111005
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#0": {
      "amount": [
        226476071
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#0": {
      "amount": [
        113289491
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#0": {
      "amount": [
        112076475
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#0": {
      "amount": [
        113692325
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#0": {
      "amount": [
        37949426
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#0": {
      "amount": [
        38193344
      ]
    },
    "std::vector<int, std::allocator<int> >::size#0": {
      "amount": [
        38172878
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#0": {
      "amount": [
        37917516
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#0": {
      "amount": [
        37969763
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#1": {
      "amount": [
        37858437
      ]
    },
    "std::initializer_list<double>::end#0": {
      "amount": [
        36674632
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#1": {
      "amount": [
        38136683
      ]
    },
    "[compare_traces]#1": {
      "amount": [
        38232813
      ]
    },
    "levenshteinDistance#1": {
      "amount": [
        2103132176
      ]
    },
    "std::initializer_list<int>::begin#2": {
      "amount": [
        38269472
      ]
    },
    "std::initializer_list<int>::end#1": {
      "amount": [
        38073893
      ]
    },
    "std::min<int>#0": {
      "amount": [
        152426277
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#1": {
      "amount": [
        76212102
      ]
    },
    "std::initializer_list<int>::begin#3": {
      "amount": [
        227630287
      ]
    },
    "std::initializer_list<int>::end#2": {
      "amount": [
        187620688
      ]
    },
    "std::initializer_list<int>::begin#4": {
      "amount": [
        38183485
      ]
    },
    "std::initializer_list<int>::size#0": {
      "amount": [
        34238652
      ]
    },
    "std::initializer_list<int>::size#1": {
      "amount": [
        75689724
      ]
    },
    "std::min_element<int const*>#1": {
      "amount": [
        190572375
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#1": {
      "amount": [
        113267682
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#0": {
      "amount": [
        113537006
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#2": {
      "amount": [
        1004130925
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#2": {
      "amount": [
        593212631
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#2": {
      "amount": [
        758730438
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#0": {
      "amount": [
        38114415
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#1": {
      "amount": [
        753381917
      ]
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#0": {
      "amount": [
        38183593
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#0": {
      "amount": [
        36861506
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#0": {
      "amount": [
        38164656
      ]
    },
    "std::allocator<int>::allocator#0": {
      "amount": [
        38091574
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#0": {
      "amount": [
        152445918
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#0": {
      "amount": [
        38197148
      ]
    },
    "operator new#0": {
      "amount": [
        38126816
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#0": {
      "amount": [
        38132562
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#0": {
      "amount": [
        38250115
      ]
    },
    "__memmove_avx_unaligned_erms#0": {
      "amount": [
        38194139
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#0": {
      "amount": [
        110456737
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#0": {
      "amount": [
        37904141
      ]
    },
    "std::vector<int, std::allocator<int> >::size#1": {
      "amount": [
        37789131
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector#0": {
      "amount": [
        37725657
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#0": {
      "amount": [
        35923124
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#0": {
      "amount": [
        75490896
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#0": {
      "amount": [
        37153130
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#0": {
      "amount": [
        74960329
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#1": {
      "amount": [
        38062522
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#1": {
      "amount": [
        38127706
      ]
    },
    "cfree@GLIBC_2.2.5#0": {
      "amount": [
        38170129
      ]
    },
    "std::allocator<int>::~allocator#0": {
      "amount": [
        38179797
      ]
    },
    "std::allocator<int>::~allocator#1": {
      "amount": [
        38138833
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#1": {
      "amount": [
        216191706
      ]
    },
    "std::min<int>#1": {
      "amount": [
        114478309
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#3": {
      "amount": [
        75814057
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#2": {
      "amount": [
        185329914
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size#0": {
      "amount": [
        38118611
      ]
    },
    "std::initializer_list<double>::end#1": {
      "amount": [
        37364913
      ]
    },
    "[compare_traces]#2": {
      "amount": [
        306122237
      ]
    },
    "levenshteinDistance#2": {
      "amount": [
        5219676818
      ]
    },
    "std::initializer_list<int>::begin#5": {
      "amount": [
        38195231
      ]
    },
    "std::initializer_list<int>::end#3": {
      "amount": [
        302090406
      ]
    },
    "std::min<int>#2": {
      "amount": [
        796610876
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#1": {
      "amount": [
        76153488
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#3": {
      "amount": [
        375146304
      ]
    },
    "std::initializer_list<int>::begin#6": {
      "amount": [
        379841781
      ]
    },
    "std::initializer_list<int>::end#4": {
      "amount": [
        381431167
      ]
    },
    "std::initializer_list<int>::begin#7": {
      "amount": [
        149564914
      ]
    },
    "std::initializer_list<int>::size#2": {
      "amount": [
        151740208
      ]
    },
    "std::initializer_list<int>::size#3": {
      "amount": [
        37769049
      ]
    },
    "std::min_element<int const*>#2": {
      "amount": [
        489255087
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#3": {
      "amount": [
        299856308
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#2": {
      "amount": [
        37974594
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#4": {
      "amount": [
        3036272948
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#4": {
      "amount": [
        1725024391
      ]
    },
    "std::min_element<int const*>#3": {
      "amount": [
        189728128
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#4": {
      "amount": [
        1639372277
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#0": {
      "amount": [
        38045011
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#1": {
      "amount": [
        37704346
      ]
    },
    "std::vector<int, std::allocator<int> >::_M_default_initialize#0": {
      "amount": [
        38293861
      ]
    },
    "std::__fill_a1<int*, int>#0": {
      "amount": [
        38188548
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#0": {
      "amount": [
        38115126
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#1": {
      "amount": [
        38184355
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#3": {
      "amount": [
        2074607884
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate#0": {
      "amount": [
        37869848
      ]
    },
    "operator new#1": {
      "amount": [
        38193901
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#1": {
      "amount": [
        38110851
      ]
    },
    "std::allocator<int>::~allocator#2": {
      "amount": [
        39106400
      ]
    },
    "std::vector<int, std::allocator<int> >::size#2": {
      "amount": [
        36498063
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#1": {
      "amount": [
        153002776
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#1": {
      "amount": [
        33750496
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#1": {
      "amount": [
        37902507
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#1": {
      "amount": [
        36968722
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#1": {
      "amount": [
        76341365
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#2": {
      "amount": [
        150360621
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#1": {
      "amount": [
        37943101
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#0": {
      "amount": [
        38228390
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#2": {
      "amount": [
        36808562
      ]
    },
    "operator new#2": {
      "amount": [
        35915624
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#2": {
      "amount": [
        38135040
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#0": {
      "amount": [
        75059798
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#0": {
      "amount": [
        75828296
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#1": {
      "amount": [
        38114650
      ]
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#0": {
      "amount": [
        38136212
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#0": {
      "amount": [
        28433865
      ]
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#1": {
      "amount": [
        38229914
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#0": {
      "amount": [
        76198140
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#0": {
      "amount": [
        76348505
      ]
    },
    "[compare_traces]#3": {
      "amount": [
        37763153
      ]
    },
    "__memmove_avx_unaligned_erms#1": {
      "amount": [
        190345361
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#1": {
      "amount": [
        38138115
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#1": {
      "amount": [
        38156847
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#1": {
      "amount": [
        38173628
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#1": {
      "amount": [
        38087283
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#2": {
      "amount": [
        38221955
      ]
    },
    "std::vector<int, std::allocator<int> >::end#0": {
      "amount": [
        38241307
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#3": {
      "amount": [
        76259768
      ]
    },
    "std::vector<int, std::allocator<int> >::size#3": {
      "amount": [
        113783260
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#0": {
      "amount": [
        69790427
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#1": {
      "amount": [
        152752456
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#2": {
      "amount": [
        38217623
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#1": {
      "amount": [
        36172550
      ]
    },
    "std::_Destroy<int*, int>#0": {
      "amount": [
        38004387
      ]
    },
    "std::_Destroy<int*>#0": {
      "amount": [
        38233876
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#2": {
      "amount": [
        76365240
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#2": {
      "amount": [
        36454467
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#2": {
      "amount": [
        38293577
      ]
    },
    "cfree@GLIBC_2.2.5#1": {
      "amount": [
        38166927
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#3": {
      "amount": [
        38182082
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#0": {
      "amount": [
        38213266
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#2": {
      "amount": [
        37814478
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate#0": {
      "amount": [
        38136313
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#2": {
      "amount": [
        434552418
      ]
    },
    "std::allocator<int>::allocator#1": {
      "amount": [
        38000259
      ]
    },
    "std::max<unsigned long>#0": {
      "amount": [
        37964773
      ]
    },
    "std::min<int>#3": {
      "amount": [
        75840093
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#5": {
      "amount": [
        336014648
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#4": {
      "amount": [
        754420496
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector#1": {
      "amount": [
        37829228
      ]
    },
    "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>#0": {
      "amount": [
        37424741
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#5": {
      "amount": [
        36380571
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]#0": {
      "amount": [
        35435227
      ]
    },
    "[compare_traces]#4": {
      "amount": [
        525553567
      ]
    },
    "levenshteinDistance#3": {
      "amount": [
        8419054315
      ]
    },
    "std::initializer_list<int>::begin#8": {
      "amount": [
        108260843
      ]
    },
    "std::initializer_list<int>::end#5": {
      "amount": [
        303526242
      ]
    },
    "std::min<int>#4": {
      "amount": [
        794730104
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#3": {
      "amount": [
        112336544
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#5": {
      "amount": [
        380310178
      ]
    },
    "std::initializer_list<int>::begin#9": {
      "amount": [
        680071088
      ]
    },
    "std::initializer_list<int>::end#6": {
      "amount": [
        758088505
      ]
    },
    "std::initializer_list<int>::begin#10": {
      "amount": [
        113030210
      ]
    },
    "std::initializer_list<int>::size#4": {
      "amount": [
        113408120
      ]
    },
    "std::initializer_list<int>::size#5": {
      "amount": [
        190394712
      ]
    },
    "std::min_element<int const*>#4": {
      "amount": [
        567902412
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#6": {
      "amount": [
        457034300
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#4": {
      "amount": [
        114370805
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#6": {
      "amount": [
        4426480724
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#7": {
      "amount": [
        2981847055
      ]
    },
    "std::min_element<int const*>#5": {
      "amount": [
        343420965
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#6": {
      "amount": [
        3052478768
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#2": {
      "amount": [
        38064248
      ]
    },
    "[libstdc++.so.6.0.30]#0": {
      "amount": [
        38194766
      ]
    },
    "operator new#3": {
      "amount": [
        38276286
      ]
    },
    "std::allocator<int>::~allocator#3": {
      "amount": [
        76253751
      ]
    },
    "std::vector<int, std::allocator<int> >::_M_default_initialize#1": {
      "amount": [
        38246322
      ]
    },
    "std::_Construct<int>#0": {
      "amount": [
        39104046
      ]
    },
    "std::__fill_a1<int*, int>#1": {
      "amount": [
        38144919
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#0": {
      "amount": [
        38280214
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#5": {
      "amount": [
        3281004353
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector#0": {
      "amount": [
        37541517
      ]
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#1": {
      "amount": [
        114304370
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#0": {
      "amount": [
        38210705
      ]
    },
    "std::allocator<int>::~allocator#4": {
      "amount": [
        110718521
      ]
    },
    "std::forward<std::vector<int, std::allocator<int> > const&>#0": {
      "amount": [
        38177290
      ]
    },
    "std::vector<int, std::allocator<int> >::begin#0": {
      "amount": [
        37667711
      ]
    },
    "std::vector<int, std::allocator<int> >::end#1": {
      "amount": [
        38263485
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#3": {
      "amount": [
        153310466
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#1": {
      "amount": [
        38124607
      ]
    },
    "std::allocator<int>::allocator#2": {
      "amount": [
        152341730
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#2": {
      "amount": [
        75528247
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#0": {
      "amount": [
        38156731
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#3": {
      "amount": [
        38001025
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#2": {
      "amount": [
        38143238
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#0": {
      "amount": [
        37890928
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#4": {
      "amount": [
        264998093
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#1": {
      "amount": [
        38178484
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#1": {
      "amount": [
        38207961
      ]
    },
    "[libstdc++.so.6.0.30]#1": {
      "amount": [
        36872210
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#3": {
      "amount": [
        37105184
      ]
    },
    "__gnu_cxx::new_allocator<int>::_M_max_size#0": {
      "amount": [
        38070630
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#1": {
      "amount": [
        38302138
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#3": {
      "amount": [
        38955950
      ]
    },
    "std::allocator<int>::allocator#3": {
      "amount": [
        34570588
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#2": {
      "amount": [
        35617181
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#1": {
      "amount": [
        76149376
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#2": {
      "amount": [
        35491319
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#3": {
      "amount": [
        115524400
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#1": {
      "amount": [
        38111485
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#1": {
      "amount": [
        76390507
      ]
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#2": {
      "amount": [
        76327712
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#0": {
      "amount": [
        152383369
      ]
    },
    "__memmove_avx_unaligned_erms#2": {
      "amount": [
        225431827
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#2": {
      "amount": [
        151167480
      ]
    },
    "std::__niter_base<int*>#0": {
      "amount": [
        76186575
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#0": {
      "amount": [
        75613978
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#2": {
      "amount": [
        38191199
      ]
    },
    "std::__niter_base<int*>#1": {
      "amount": [
        37562533
      ]
    },
    "std::__niter_wrap<int*>#0": {
      "amount": [
        37778396
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#3": {
      "amount": [
        24341637
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#2": {
      "amount": [
        113571489
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#4": {
      "amount": [
        75384824
      ]
    },
    "std::vector<int, std::allocator<int> >::end#2": {
      "amount": [
        70391562
      ]
    },
    "std::vector<int, std::allocator<int> >::size#4": {
      "amount": [
        38164142
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len#0": {
      "amount": [
        38259342
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#2": {
      "amount": [
        144394706
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#1": {
      "amount": [
        35528600
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#3": {
      "amount": [
        114265736
      ]
    },
    "std::_Destroy<int*, int>#1": {
      "amount": [
        76279926
      ]
    },
    "std::_Destroy<int*>#1": {
      "amount": [
        104961245
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#1": {
      "amount": [
        38068393
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#3": {
      "amount": [
        186012226
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#1": {
      "amount": [
        37952079
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#3": {
      "amount": [
        38145864
      ]
    },
    "cfree@GLIBC_2.2.5#2": {
      "amount": [
        75536447
      ]
    },
    "operator delete#0": {
      "amount": [
        37216210
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#2": {
      "amount": [
        114338251
      ]
    },
    "std::allocator<int>::~allocator#5": {
      "amount": [
        37928572
      ]
    },
    "std::allocator<int>::~allocator#6": {
      "amount": [
        37749268
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#4": {
      "amount": [
        38088084
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#4": {
      "amount": [
        38169769
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#3": {
      "amount": [
        413206013
      ]
    },
    "std::min<int>#5": {
      "amount": [
        290925689
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#7": {
      "amount": [
        668875577
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#4": {
      "amount": [
        37983901
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#6": {
      "amount": [
        486513598
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector#1": {
      "amount": [
        37962174
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size#1": {
      "amount": [
        38010908
      ]
    },
    "std::initializer_list<double>::begin#0": {
      "amount": [
        38198423
      ]
    },
    "std::operator==<char>#0": {
      "amount": [
        37992265
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#2": {
      "amount": [
        76123615
      ]
    },
    "switch_cost_levenshtein#0": {
      "amount": [
        38128022
      ]
    },
    "[compare_traces]#5": {
      "amount": [
        564639465
      ]
    },
    "levenshteinDistance#4": {
      "amount": [
        8390166119
      ]
    },
    "std::initializer_list<int>::begin#11": {
      "amount": [
        191273743
      ]
    },
    "std::initializer_list<int>::end#7": {
      "amount": [
        418579776
      ]
    },
    "std::min<int>#6": {
      "amount": [
        1173538865
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#5": {
      "amount": [
        76291702
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#7": {
      "amount": [
        451438367
      ]
    },
    "std::initializer_list<int>::begin#12": {
      "amount": [
        602594999
      ]
    },
    "std::initializer_list<int>::end#8": {
      "amount": [
        794388430
      ]
    },
    "std::initializer_list<int>::begin#13": {
      "amount": [
        190301846
      ]
    },
    "std::initializer_list<int>::size#6": {
      "amount": [
        285223766
      ]
    },
    "std::initializer_list<int>::size#7": {
      "amount": [
        341104676
      ]
    },
    "std::min_element<int const*>#6": {
      "amount": [
        639482887
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#8": {
      "amount": [
        493209699
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#6": {
      "amount": [
        225602488
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#8": {
      "amount": [
        5483667556
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#9": {
      "amount": [
        3169269544
      ]
    },
    "std::min_element<int const*>#7": {
      "amount": [
        377781321
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#8": {
      "amount": [
        3365654729
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#5": {
      "amount": [
        38155676
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#5": {
      "amount": [
        39128707
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#3": {
      "amount": [
        38226133
      ]
    },
    "std::__uninitialized_default_n_a<int*, unsigned long, int>#0": {
      "amount": [
        38252543
      ]
    },
    "std::__fill_a1<int*, int>#2": {
      "amount": [
        113015878
      ]
    },
    "std::vector<int, std::allocator<int> >::_S_check_init_len#0": {
      "amount": [
        31680830
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#3": {
      "amount": [
        38145171
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#3": {
      "amount": [
        38101082
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#4": {
      "amount": [
        38023340
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#4": {
      "amount": [
        38066346
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#7": {
      "amount": [
        3735466072
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector#2": {
      "amount": [
        38207978
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage#0": {
      "amount": [
        38125134
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize#0": {
      "amount": [
        38104239
      ]
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#2": {
      "amount": [
        76351097
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#1": {
      "amount": [
        114631276
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#2": {
      "amount": [
        38186833
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#4": {
      "amount": [
        38215495
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#0": {
      "amount": [
        187502391
      ]
    },
    "std::allocator<int>::~allocator#7": {
      "amount": [
        37928046
      ]
    },
    "std::vector<int, std::allocator<int> >::begin#1": {
      "amount": [
        38109482
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#6": {
      "amount": [
        228683847
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#3": {
      "amount": [
        37032986
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#4": {
      "amount": [
        73643202
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#3": {
      "amount": [
        38118549
      ]
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#0": {
      "amount": [
        38253841
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#6": {
      "amount": [
        38124833
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#4": {
      "amount": [
        228975817
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#2": {
      "amount": [
        38250850
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#7": {
      "amount": [
        114403345
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#3": {
      "amount": [
        36495700
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#2": {
      "amount": [
        38175015
      ]
    },
    "[libstdc++.so.6.0.30]#2": {
      "amount": [
        38125367
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#4": {
      "amount": [
        103064712
      ]
    },
    "operator new#4": {
      "amount": [
        38155272
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#2": {
      "amount": [
        38483787
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#4": {
      "amount": [
        75942971
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#4": {
      "amount": [
        114550929
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#5": {
      "amount": [
        76023117
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#3": {
      "amount": [
        37985282
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#4": {
      "amount": [
        37570242
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#3": {
      "amount": [
        75302456
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#5": {
      "amount": [
        37672961
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#1": {
      "amount": [
        74344479
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#2": {
      "amount": [
        152452870
      ]
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#3": {
      "amount": [
        152298303
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#2": {
      "amount": [
        37994731
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#1": {
      "amount": [
        76269703
      ]
    },
    "__memmove_avx_unaligned_erms#3": {
      "amount": [
        188726903
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#3": {
      "amount": [
        76228042
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#2": {
      "amount": [
        37495198
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#3": {
      "amount": [
        36713389
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#2": {
      "amount": [
        76643152
      ]
    },
    "std::__niter_base<int*>#2": {
      "amount": [
        37734890
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#4": {
      "amount": [
        38097781
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#5": {
      "amount": [
        38159340
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#4": {
      "amount": [
        37923943
      ]
    },
    "std::vector<int, std::allocator<int> >::begin#2": {
      "amount": [
        152007846
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#5": {
      "amount": [
        38167468
      ]
    },
    "std::vector<int, std::allocator<int> >::end#3": {
      "amount": [
        73873300
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#6": {
      "amount": [
        75108623
      ]
    },
    "std::vector<int, std::allocator<int> >::size#5": {
      "amount": [
        37908973
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#1": {
      "amount": [
        38230334
      ]
    },
    "std::forward<std::vector<int, std::allocator<int> > const&>#1": {
      "amount": [
        38128789
      ]
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::max_size#0": {
      "amount": [
        76785715
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector#2": {
      "amount": [
        37479643
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#2": {
      "amount": [
        61701769
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#3": {
      "amount": [
        74981001
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#3": {
      "amount": [
        37012064
      ]
    },
    "std::_Destroy<int*, int>#2": {
      "amount": [
        75196770
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#5": {
      "amount": [
        38144580
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#5": {
      "amount": [
        76118946
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#5": {
      "amount": [
        38161616
      ]
    },
    "std::_Destroy<int*, int>#3": {
      "amount": [
        37954870
      ]
    },
    "std::_Destroy<int*>#2": {
      "amount": [
        38225309
      ]
    },
    "std::_Destroy<int*>#3": {
      "amount": [
        37887399
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#2": {
      "amount": [
        38075743
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#6": {
      "amount": [
        37884971
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#4": {
      "amount": [
        37518929
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#6": {
      "amount": [
        38239538
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#3": {
      "amount": [
        38065274
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#5": {
      "amount": [
        74737849
      ]
    },
    "cfree@GLIBC_2.2.5#3": {
      "amount": [
        37973503
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#5": {
      "amount": [
        113034727
      ]
    },
    "std::allocator<int>::~allocator#8": {
      "amount": [
        37779662
      ]
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#1": {
      "amount": [
        38161268
      ]
    },
    "std::allocator<int>::~allocator#9": {
      "amount": [
        38141958
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#5": {
      "amount": [
        38184105
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#6": {
      "amount": [
        38059847
      ]
    },
    "cfree@GLIBC_2.2.5#4": {
      "amount": [
        38173497
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#4": {
      "amount": [
        876730290
      ]
    },
    "std::min<int>#7": {
      "amount": [
        378490337
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#9": {
      "amount": [
        911065440
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#8": {
      "amount": [
        840321256
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::data#0": {
      "amount": [
        28231944
      ]
    },
    "std::initializer_list<double>::begin#1": {
      "amount": [
        37566101
      ]
    },
    "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>#1": {
      "amount": [
        37699393
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#3": {
      "amount": [
        38209338
      ]
    },
    "[compare_traces]#6": {
      "amount": [
        225726881
      ]
    },
    "levenshteinDistance#5": {
      "amount": [
        7843867505
      ]
    },
    "std::initializer_list<int>::begin#14": {
      "amount": [
        190632853
      ]
    },
    "std::initializer_list<int>::end#9": {
      "amount": [
        266417760
      ]
    },
    "std::min<int>#8": {
      "amount": [
        759610216
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#7": {
      "amount": [
        114614708
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#9": {
      "amount": [
        341881842
      ]
    },
    "std::initializer_list<int>::begin#15": {
      "amount": [
        566061454
      ]
    },
    "std::initializer_list<int>::end#10": {
      "amount": [
        720832903
      ]
    },
    "std::initializer_list<int>::begin#16": {
      "amount": [
        263364223
      ]
    },
    "std::initializer_list<int>::size#8": {
      "amount": [
        456200861
      ]
    },
    "std::initializer_list<int>::size#9": {
      "amount": [
        456714390
      ]
    },
    "std::min_element<int const*>#8": {
      "amount": [
        341685149
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#10": {
      "amount": [
        342016553
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#8": {
      "amount": [
        152381584
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#10": {
      "amount": [
        4238559500
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#11": {
      "amount": [
        2853226678
      ]
    },
    "std::min_element<int const*>#9": {
      "amount": [
        452890792
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#10": {
      "amount": [
        2267906458
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#8": {
      "amount": [
        38161562
      ]
    },
    "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>#0": {
      "amount": [
        38254800
      ]
    },
    "std::__fill_n_a<int*, unsigned long, int>#0": {
      "amount": [
        37433597
      ]
    },
    "std::__fill_a1<int*, int>#3": {
      "amount": [
        261446034
      ]
    },
    "std::allocator<int>::~allocator#10": {
      "amount": [
        38048245
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#9": {
      "amount": [
        3099848704
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage#1": {
      "amount": [
        38000521
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate#1": {
      "amount": [
        38302039
      ]
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::new_allocator#0": {
      "amount": [
        38187624
      ]
    },
    "operator new#5": {
      "amount": [
        38095592
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#2": {
      "amount": [
        38030154
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#7": {
      "amount": [
        35965565
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#1": {
      "amount": [
        38149796
      ]
    },
    "std::allocator<int>::~allocator#11": {
      "amount": [
        152395590
      ]
    },
    "std::forward<std::vector<int, std::allocator<int> > const&>#2": {
      "amount": [
        38018443
      ]
    },
    "std::vector<int, std::allocator<int> >::size#6": {
      "amount": [
        37963636
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#7": {
      "amount": [
        266401369
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#4": {
      "amount": [
        151233335
      ]
    },
    "std::allocator<int>::allocator#4": {
      "amount": [
        228826927
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#5": {
      "amount": [
        38061008
      ]
    },
    "std::allocator<int>::allocator#5": {
      "amount": [
        38149775
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#5": {
      "amount": [
        114425341
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#4": {
      "amount": [
        38120412
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#9": {
      "amount": [
        305262066
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#5": {
      "amount": [
        226165370
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#3": {
      "amount": [
        38189031
      ]
    },
    "__gnu_cxx::new_allocator<int>::_M_max_size#1": {
      "amount": [
        37913537
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#6": {
      "amount": [
        149306715
      ]
    },
    "std::allocator<int>::allocator#6": {
      "amount": [
        112786180
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#6": {
      "amount": [
        38234530
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#7": {
      "amount": [
        73984468
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#4": {
      "amount": [
        38122549
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#2": {
      "amount": [
        76264337
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#5": {
      "amount": [
        114147199
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#6": {
      "amount": [
        36681003
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#2": {
      "amount": [
        38145109
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#3": {
      "amount": [
        114233286
      ]
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#4": {
      "amount": [
        75746692
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#4": {
      "amount": [
        38118112
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#3": {
      "amount": [
        36557100
      ]
    },
    "__memmove_avx_unaligned_erms#4": {
      "amount": [
        227209739
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#5": {
      "amount": [
        226472976
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#5": {
      "amount": [
        76362534
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#3": {
      "amount": [
        38155804
      ]
    },
    "std::__niter_wrap<int*>#1": {
      "amount": [
        38234113
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#6": {
      "amount": [
        38088041
      ]
    },
    "std::__niter_wrap<int*>#2": {
      "amount": [
        38007968
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#4": {
      "amount": [
        38209904
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#6": {
      "amount": [
        76175808
      ]
    },
    "std::vector<int, std::allocator<int> >::begin#3": {
      "amount": [
        38136721
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#7": {
      "amount": [
        141868562
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#8": {
      "amount": [
        38188566
      ]
    },
    "std::vector<int, std::allocator<int> >::size#7": {
      "amount": [
        180485289
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size#0": {
      "amount": [
        72697620
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#4": {
      "amount": [
        38120395
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#4": {
      "amount": [
        37751599
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#5": {
      "amount": [
        24973214
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#7": {
      "amount": [
        112639701
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#7": {
      "amount": [
        152868177
      ]
    },
    "std::_Destroy<int*, int>#4": {
      "amount": [
        112592460
      ]
    },
    "std::_Destroy_aux<true>::__destroy<int*>#0": {
      "amount": [
        38272782
      ]
    },
    "std::_Destroy<int*>#4": {
      "amount": [
        75229138
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#8": {
      "amount": [
        99535248
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#4": {
      "amount": [
        114462001
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#6": {
      "amount": [
        38278641
      ]
    },
    "cfree@GLIBC_2.2.5#5": {
      "amount": [
        38195307
      ]
    },
    "operator delete#1": {
      "amount": [
        39138987
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#6": {
      "amount": [
        75893584
      ]
    },
    "std::allocator<int>::~allocator#12": {
      "amount": [
        38083596
      ]
    },
    "std::allocator<int>::~allocator#13": {
      "amount": [
        38178723
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#7": {
      "amount": [
        38224794
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#2": {
      "amount": [
        37559732
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#5": {
      "amount": [
        38283710
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#5": {
      "amount": [
        312291158
      ]
    },
    "std::min<int>#9": {
      "amount": [
        494546133
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#11": {
      "amount": [
        861107770
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#10": {
      "amount": [
        490481459
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#4": {
      "amount": [
        38157482
      ]
    },
    "[compare_traces]#7": {
      "amount": [
        490489479
      ]
    },
    "levenshteinDistance#6": {
      "amount": [
        5413977936
      ]
    },
    "std::initializer_list<int>::begin#17": {
      "amount": [
        190279521
      ]
    },
    "std::initializer_list<int>::end#11": {
      "amount": [
        343061249
      ]
    },
    "std::min<int>#10": {
      "amount": [
        1170942602
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#9": {
      "amount": [
        76186105
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#11": {
      "amount": [
        225026484
      ]
    },
    "std::initializer_list<int>::begin#18": {
      "amount": [
        340353220
      ]
    },
    "std::initializer_list<int>::end#12": {
      "amount": [
        415726297
      ]
    },
    "std::initializer_list<int>::begin#19": {
      "amount": [
        303025625
      ]
    },
    "std::initializer_list<int>::size#10": {
      "amount": [
        190630166
      ]
    },
    "std::initializer_list<int>::size#11": {
      "amount": [
        150043367
      ]
    },
    "std::min_element<int const*>#10": {
      "amount": [
        380428157
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#12": {
      "amount": [
        266230157
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#10": {
      "amount": [
        228658703
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#12": {
      "amount": [
        3055869504
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#13": {
      "amount": [
        1848507317
      ]
    },
    "std::min_element<int const*>#11": {
      "amount": [
        342275721
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#12": {
      "amount": [
        2313590636
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#8": {
      "amount": [
        38243576
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#9": {
      "amount": [
        38261800
      ]
    },
    "std::__fill_a<int*, int>#0": {
      "amount": [
        38220632
      ]
    },
    "std::__fill_a1<int*, int>#4": {
      "amount": [
        38282537
      ]
    },
    "std::__fill_a1<int*, int>#5": {
      "amount": [
        76374848
      ]
    },
    "std::vector<int, std::allocator<int> >::_S_check_init_len#1": {
      "amount": [
        38902037
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#6": {
      "amount": [
        37879251
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#7": {
      "amount": [
        38275735
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#11": {
      "amount": [
        2545672218
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage#2": {
      "amount": [
        35839364
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_get_Tp_allocator#0": {
      "amount": [
        31911413
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#3": {
      "amount": [
        38209253
      ]
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#3": {
      "amount": [
        37949674
      ]
    },
    "operator new#6": {
      "amount": [
        38182075
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#4": {
      "amount": [
        114583446
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#5": {
      "amount": [
        38803982
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#8": {
      "amount": [
        38184346
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#6": {
      "amount": [
        38106309
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#3": {
      "amount": [
        38224183
      ]
    },
    "std::allocator<int>::~allocator#14": {
      "amount": [
        38046328
      ]
    },
    "std::vector<int, std::allocator<int> >::begin#4": {
      "amount": [
        37957521
      ]
    },
    "std::vector<int, std::allocator<int> >::size#8": {
      "amount": [
        75552527
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#8": {
      "amount": [
        152444185
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#6": {
      "amount": [
        38247573
      ]
    },
    "std::allocator<int>::allocator#7": {
      "amount": [
        37911392
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#6": {
      "amount": [
        75792688
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#7": {
      "amount": [
        36321809
      ]
    },
    "std::allocator<int>::allocator#8": {
      "amount": [
        76239517
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#8": {
      "amount": [
        38266039
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#9": {
      "amount": [
        76425232
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#9": {
      "amount": [
        38186491
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#7": {
      "amount": [
        190167222
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#10": {
      "amount": [
        152546944
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#6": {
      "amount": [
        152441049
      ]
    },
    "__gnu_cxx::new_allocator<int>::_M_max_size#2": {
      "amount": [
        38287367
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#5": {
      "amount": [
        113951060
      ]
    },
    "operator new#7": {
      "amount": [
        74807275
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#10": {
      "amount": [
        38202397
      ]
    },
    "std::allocator<int>::allocator#9": {
      "amount": [
        37716148
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#11": {
      "amount": [
        75991975
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#5": {
      "amount": [
        152641044
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#7": {
      "amount": [
        75711292
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#7": {
      "amount": [
        38949755
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#3": {
      "amount": [
        36656511
      ]
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#5": {
      "amount": [
        75947430
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#4": {
      "amount": [
        37798307
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#4": {
      "amount": [
        38065810
      ]
    },
    "__memmove_avx_unaligned_erms#5": {
      "amount": [
        152697792
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#6": {
      "amount": [
        149665331
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#4": {
      "amount": [
        38185827
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#7": {
      "amount": [
        38218036
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#8": {
      "amount": [
        38164749
      ]
    },
    "std::__niter_base<int*>#3": {
      "amount": [
        38001633
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#5": {
      "amount": [
        38031925
      ]
    },
    "std::vector<int, std::allocator<int> >::begin#5": {
      "amount": [
        37837772
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#10": {
      "amount": [
        75976444
      ]
    },
    "std::vector<int, std::allocator<int> >::end#4": {
      "amount": [
        112662969
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#11": {
      "amount": [
        38098710
      ]
    },
    "std::vector<int, std::allocator<int> >::size#9": {
      "amount": [
        112789108
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#3": {
      "amount": [
        38262398
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#9": {
      "amount": [
        38429010
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size#1": {
      "amount": [
        72146661
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#10": {
      "amount": [
        33525186
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#8": {
      "amount": [
        114805191
      ]
    },
    "std::_Destroy<int*, int>#5": {
      "amount": [
        38050190
      ]
    },
    "std::_Destroy<int*>#5": {
      "amount": [
        38239209
      ]
    },
    "std::_Destroy_aux<true>::__destroy<int*>#1": {
      "amount": [
        38926501
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#5": {
      "amount": [
        38078239
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#8": {
      "amount": [
        38263428
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#9": {
      "amount": [
        76192064
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#6": {
      "amount": [
        72486136
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#8": {
      "amount": [
        38121819
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#7": {
      "amount": [
        76445802
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#9": {
      "amount": [
        37516322
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#4": {
      "amount": [
        76366872
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#9": {
      "amount": [
        38247091
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#6": {
      "amount": [
        265692464
      ]
    },
    "std::allocator<int>::~allocator#15": {
      "amount": [
        38258790
      ]
    },
    "std::min<int>#11": {
      "amount": [
        228769455
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#13": {
      "amount": [
        430757514
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#12": {
      "amount": [
        677623030
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector#3": {
      "amount": [
        38231548
      ]
    },
    "[compare_traces]#8": {
      "amount": [
        303789958
      ]
    },
    "levenshteinDistance#7": {
      "amount": [
        3403494042
      ]
    },
    "std::initializer_list<int>::begin#20": {
      "amount": [
        114226873
      ]
    },
    "std::initializer_list<int>::end#13": {
      "amount": [
        114076017
      ]
    },
    "std::min<int>#12": {
      "amount": [
        481046335
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#11": {
      "amount": [
        149502175
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#13": {
      "amount": [
        114904359
      ]
    },
    "std::initializer_list<int>::begin#21": {
      "amount": [
        190829863
      ]
    },
    "std::initializer_list<int>::end#14": {
      "amount": [
        495124888
      ]
    },
    "std::initializer_list<int>::begin#22": {
      "amount": [
        38093945
      ]
    },
    "std::initializer_list<int>::size#12": {
      "amount": [
        296855805
      ]
    },
    "std::initializer_list<int>::size#13": {
      "amount": [
        38273606
      ]
    },
    "std::min_element<int const*>#12": {
      "amount": [
        304452646
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#14": {
      "amount": [
        152206245
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#12": {
      "amount": [
        37175820
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#14": {
      "amount": [
        2033422986
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#15": {
      "amount": [
        1250091030
      ]
    },
    "std::min_element<int const*>#13": {
      "amount": [
        38224662
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#14": {
      "amount": [
        1169128987
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#10": {
      "amount": [
        38016956
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#13": {
      "amount": [
        1267201138
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage#3": {
      "amount": [
        38038116
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate#2": {
      "amount": [
        38242870
      ]
    },
    "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#0": {
      "amount": [
        38307107
      ]
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#4": {
      "amount": [
        76921074
      ]
    },
    "operator new#8": {
      "amount": [
        37944835
      ]
    },
    "operator new#9": {
      "amount": [
        38107290
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#11": {
      "amount": [
        37787631
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#8": {
      "amount": [
        38242169
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#4": {
      "amount": [
        112475227
      ]
    },
    "std::vector<int, std::allocator<int> >::end#5": {
      "amount": [
        34667004
      ]
    },
    "std::vector<int, std::allocator<int> >::size#10": {
      "amount": [
        38118429
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#11": {
      "amount": [
        266433175
      ]
    },
    "std::allocator<int>::allocator#10": {
      "amount": [
        38270534
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#7": {
      "amount": [
        73306038
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#9": {
      "amount": [
        38252112
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#9": {
      "amount": [
        51613115
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#11": {
      "amount": [
        151799263
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#4": {
      "amount": [
        19342039
      ]
    },
    "operator new#10": {
      "amount": [
        38046741
      ]
    },
    "std::allocator_traits<std::allocator<int> >::allocate#5": {
      "amount": [
        38159166
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#8": {
      "amount": [
        38216383
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#6": {
      "amount": [
        37656544
      ]
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#6": {
      "amount": [
        76125089
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#5": {
      "amount": [
        38074688
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#5": {
      "amount": [
        37952967
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#7": {
      "amount": [
        38032663
      ]
    },
    "__memmove_avx_unaligned_erms#6": {
      "amount": [
        76170623
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#8": {
      "amount": [
        152679642
      ]
    },
    "std::__niter_base<int*>#4": {
      "amount": [
        38241317
      ]
    },
    "std::__niter_base<int*>#5": {
      "amount": [
        38017964
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#7": {
      "amount": [
        38284711
      ]
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#8": {
      "amount": [
        38242896
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#12": {
      "amount": [
        38081798
      ]
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#13": {
      "amount": [
        114432676
      ]
    },
    "std::vector<int, std::allocator<int> >::size#11": {
      "amount": [
        153266419
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#12": {
      "amount": [
        37985306
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size#2": {
      "amount": [
        38112744
      ]
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#6": {
      "amount": [
        38137087
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#10": {
      "amount": [
        38883367
      ]
    },
    "std::_Destroy<int*>#6": {
      "amount": [
        38273475
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#11": {
      "amount": [
        76377907
      ]
    },
    "[libstdc++.so.6.0.30]#3": {
      "amount": [
        38228748
      ]
    },
    "cfree@GLIBC_2.2.5#6": {
      "amount": [
        38144271
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#10": {
      "amount": [
        38123460
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#5": {
      "amount": [
        37517286
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate#1": {
      "amount": [
        38218895
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#7": {
      "amount": [
        398484363
      ]
    },
    "std::min<int>#13": {
      "amount": [
        191214540
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#15": {
      "amount": [
        416762688
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#14": {
      "amount": [
        188983298
      ]
    },
    "switch_cost_levenshtein#1": {
      "amount": [
        38104224
      ]
    },
    "[compare_traces]#9": {
      "amount": [
        38215575
      ]
    },
    "levenshteinDistance#8": {
      "amount": [
        2512098007
      ]
    },
    "std::initializer_list<int>::end#15": {
      "amount": [
        34911861
      ]
    },
    "std::min<int>#14": {
      "amount": [
        420475944
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#15": {
      "amount": [
        114478703
      ]
    },
    "std::initializer_list<int>::begin#23": {
      "amount": [
        152793478
      ]
    },
    "std::initializer_list<int>::end#16": {
      "amount": [
        190347661
      ]
    },
    "std::min_element<int const*>#14": {
      "amount": [
        38009932
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#16": {
      "amount": [
        152618413
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#13": {
      "amount": [
        114372443
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#16": {
      "amount": [
        1102638857
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#17": {
      "amount": [
        722474225
      ]
    },
    "std::min_element<int const*>#15": {
      "amount": [
        37812542
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#16": {
      "amount": [
        400489994
      ]
    },
    "std::vector<int, std::allocator<int> >::_M_default_initialize#2": {
      "amount": [
        38186525
      ]
    },
    "std::__fill_a1<int*, int>#6": {
      "amount": [
        76159817
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#15": {
      "amount": [
        819745937
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate#3": {
      "amount": [
        534180
      ]
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#5": {
      "amount": [
        113184703
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#12": {
      "amount": [
        38260962
      ]
    },
    "std::allocator<int>::~allocator#16": {
      "amount": [
        38259384
      ]
    },
    "std::vector<int, std::allocator<int> >::begin#6": {
      "amount": [
        38222901
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#13": {
      "amount": [
        152586728
      ]
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#7": {
      "amount": [
        38148447
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#12": {
      "amount": [
        38133672
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#7": {
      "amount": [
        37497015
      ]
    },
    "__gnu_cxx::new_allocator<int>::_M_max_size#3": {
      "amount": [
        38320270
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#12": {
      "amount": [
        76483921
      ]
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#9": {
      "amount": [
        76352081
      ]
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#8": {
      "amount": [
        32489726
      ]
    },
    "std::__copy_move_a1<false, int const*, int*>#6": {
      "amount": [
        37910478
      ]
    },
    "std::__copy_move_a2<false, int const*, int*>#5": {
      "amount": [
        76395381
      ]
    },
    "__memmove_avx_unaligned_erms#7": {
      "amount": [
        76253020
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#9": {
      "amount": [
        75642415
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#9": {
      "amount": [
        38129172
      ]
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#2": {
      "amount": [
        38152630
      ]
    },
    "std::vector<int, std::allocator<int> >::begin#7": {
      "amount": [
        35970507
      ]
    },
    "std::vector<int, std::allocator<int> >::size#12": {
      "amount": [
        37204856
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len#1": {
      "amount": [
        19953669
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#10": {
      "amount": [
        38186212
      ]
    },
    "std::_Destroy<int*>#7": {
      "amount": [
        38251037
      ]
    },
    "std::_Destroy<int*>#8": {
      "amount": [
        38245419
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#12": {
      "amount": [
        76459892
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#8": {
      "amount": [
        38232246
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#11": {
      "amount": [
        38138832
      ]
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#3": {
      "amount": [
        37988027
      ]
    },
    "std::allocator<int>::~allocator#17": {
      "amount": [
        37773635
      ]
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#6": {
      "amount": [
        38105045
      ]
    },
    "std::vector<int, std::allocator<int> >::~vector#11": {
      "amount": [
        37593070
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#8": {
      "amount": [
        93380643
      ]
    },
    "std::min<int>#15": {
      "amount": [
        75546244
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#17": {
      "amount": [
        229395946
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#16": {
      "amount": [
        152858244
      ]
    },
    "[compare_traces]#10": {
      "amount": [
        38585621
      ]
    },
    "levenshteinDistance#9": {
      "amount": [
        608477964
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#13": {
      "amount": [
        38176570
      ]
    },
    "std::min<int>#16": {
      "amount": [
        299927134
      ]
    },
    "std::initializer_list<int>::end#17": {
      "amount": [
        114613862
      ]
    },
    "std::initializer_list<int>::begin#24": {
      "amount": [
        76192382
      ]
    },
    "std::initializer_list<int>::size#14": {
      "amount": [
        76536797
      ]
    },
    "std::initializer_list<int>::size#15": {
      "amount": [
        76434569
      ]
    },
    "std::min_element<int const*>#16": {
      "amount": [
        151286515
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#18": {
      "amount": [
        76374195
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#17": {
      "amount": [
        454643348
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#19": {
      "amount": [
        343131305
      ]
    },
    "std::min_element<int const*>#17": {
      "amount": [
        74597054
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#18": {
      "amount": [
        152730629
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#10": {
      "amount": [
        38143842
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#13": {
      "amount": [
        37808060
      ]
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#9": {
      "amount": [
        38525925
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#17": {
      "amount": [
        271692561
      ]
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#6": {
      "amount": [
        38186623
      ]
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#5": {
      "amount": [
        114566663
      ]
    },
    "std::allocator<int>::~allocator#18": {
      "amount": [
        38195452
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#14": {
      "amount": [
        38303196
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#14": {
      "amount": [
        38029674
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#6": {
      "amount": [
        38164524
      ]
    },
    "__gnu_cxx::new_allocator<int>::allocate#7": {
      "amount": [
        38054025
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#6": {
      "amount": [
        38107244
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#7": {
      "amount": [
        38090701
      ]
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#5": {
      "amount": [
        38037992
      ]
    },
    "__memmove_avx_unaligned_erms#8": {
      "amount": [
        38151047
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#10": {
      "amount": [
        38269810
      ]
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#10": {
      "amount": [
        38108428
      ]
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#6": {
      "amount": [
        37539559
      ]
    },
    "std::_Destroy<int*>#9": {
      "amount": [
        38083321
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#13": {
      "amount": [
        38033015
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#7": {
      "amount": [
        28395661
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#9": {
      "amount": [
        38726479
      ]
    },
    "[libstdc++.so.6.0.30]#4": {
      "amount": [
        38205578
      ]
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_get_Tp_allocator#1": {
      "amount": [
        38234166
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#9": {
      "amount": [
        38134267
      ]
    },
    "std::min<int>#17": {
      "amount": [
        37921466
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#19": {
      "amount": [
        152775965
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#18": {
      "amount": [
        190711264
      ]
    },
    "levenshteinDistance#10": {
      "amount": [
        381182116
      ]
    },
    "std::initializer_list<int>::end#18": {
      "amount": [
        35318757
      ]
    },
    "std::min<int>#18": {
      "amount": [
        75779264
      ]
    },
    "__gnu_cxx::__ops::__iter_less_iter#14": {
      "amount": [
        38208134
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#18": {
      "amount": [
        37255615
      ]
    },
    "std::initializer_list<int>::begin#25": {
      "amount": [
        38279401
      ]
    },
    "std::initializer_list<int>::size#16": {
      "amount": [
        38229462
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#19": {
      "amount": [
        340281431
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#20": {
      "amount": [
        305554396
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#20": {
      "amount": [
        115265848
      ]
    },
    "std::vector<int, std::allocator<int> >::_S_max_size#0": {
      "amount": [
        37857962
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#19": {
      "amount": [
        229600507
      ]
    },
    "std::vector<int, std::allocator<int> >::vector#15": {
      "amount": [
        37788127
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#13": {
      "amount": [
        38559786
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#14": {
      "amount": [
        38174058
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#8": {
      "amount": [
        38170015
      ]
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#3": {
      "amount": [
        38603686
      ]
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#7": {
      "amount": [
        38119019
      ]
    },
    "[compare_traces]#11": {
      "amount": [
        38207308
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#11": {
      "amount": [
        74246752
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#14": {
      "amount": [
        38189098
      ]
    },
    "std::_Destroy<int*, int>#6": {
      "amount": [
        38234580
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#12": {
      "amount": [
        38288130
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#14": {
      "amount": [
        37964624
      ]
    },
    "operator delete#2": {
      "amount": [
        38166599
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#21": {
      "amount": [
        38078263
      ]
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#20": {
      "amount": [
        74661434
      ]
    },
    "levenshteinDistance#11": {
      "amount": [
        224790066
      ]
    },
    "std::initializer_list<int>::end#19": {
      "amount": [
        38223216
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#20": {
      "amount": [
        38602987
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#21": {
      "amount": [
        152580163
      ]
    },
    "std::vector<int, std::allocator<int> >::operator[]#22": {
      "amount": [
        38124979
      ]
    },
    "std::__fill_a1<int*, int>#7": {
      "amount": [
        76245438
      ]
    },
    "std::allocator<int>::allocator#11": {
      "amount": [
        37854515
      ]
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#10": {
      "amount": [
        38213097
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#9": {
      "amount": [
        38122414
      ]
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#12": {
      "amount": [
        38206376
      ]
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#15": {
      "amount": [
        38247257
      ]
    },
    "__gnu_cxx::new_allocator<int>::deallocate#10": {
      "amount": [
        37902363
      ]
    },
    "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>#2": {
      "amount": [
        37888903
      ]
    },
    "levenshteinDistance#12": {
      "amount": [
        38231089
      ]
    },
    "std::min<int>#19": {
      "amount": [
        38193353
      ]
    },
    "std::min_element<int const*>#18": {
      "amount": [
        38211227
      ]
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#21": {
      "amount": [
        38006621
      ]
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#8": {
      "amount": [
        38260883
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#10": {
      "amount": [
        38079732
      ]
    },
    "levenshteinDistance#13": {
      "amount": [
        38222657
      ]
    },
    "_int_free#1": {
      "amount": [
        229105990
      ]
    },
    "_int_malloc#0": {
      "amount": [
        924843182
      ]
    },
    "_start#0": {
      "amount": [
        2
      ]
    },
    "cfree@GLIBC_2.2.5#7": {
      "amount": [
        302846906
      ]
    },
    "malloc#0": {
      "amount": [
        910847678
      ]
    }
  },
  "resource_type_map": {
    "__GI___libc_open#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "[unknown]"
        }
      ],
      "uid": "__GI___libc_open"
    },
    "dl_main#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "_dl_sysdep_start"
        }
      ],
      "uid": "dl_main"
    },
    "_int_free#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "[unknown]"
        }
      ],
      "uid": "_int_free"
    },
    "std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::underflow#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::underflow"
    },
    "unlink_chunk.constprop.0#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "[unknown]"
        }
      ],
      "uid": "unlink_chunk.constprop.0"
    },
    "computeTransformationCost#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "computeTransformationCost#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "computeTransformationCost#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "computeTransformationCost#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "computeTransformationCost#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "computeTransformationCost#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "computeTransformationCost#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size"
    },
    "[compare_traces]#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::initializer_list<int>::begin#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::begin#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min_element<int const*>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::vector<int, std::allocator<int> >::operator[]#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "std::vector<int, std::allocator<int> >::size#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::vector<int, std::allocator<int> >::operator[]#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::initializer_list<double>::end#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        }
      ],
      "uid": "std::initializer_list<double>::end"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size"
    },
    "[compare_traces]#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::initializer_list<int>::begin#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::begin#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::__iter_less_iter#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::vector<int, std::allocator<int> >::operator[]#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::vector<int, std::allocator<int> >::vector#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "std::allocator<int>::allocator#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "__gnu_cxx::new_allocator<int>::allocate#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "operator new#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "__memmove_avx_unaligned_erms#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::end"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::size#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::vector<int, std::allocator<int> >::~vector#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "cfree@GLIBC_2.2.5#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "std::allocator<int>::~allocator#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::allocator<int>::~allocator#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::min<int>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size"
    },
    "std::initializer_list<double>::end#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::initializer_list<double>::end"
    },
    "[compare_traces]#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::initializer_list<int>::begin#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "__gnu_cxx::__ops::__iter_less_iter#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::begin#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::__iter_less_iter#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::min_element<int const*>#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::vector<int, std::allocator<int> >::_M_default_initialize#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::_M_default_initialize"
    },
    "std::__fill_a1<int*, int>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_a<int*, int>"
        }
      ],
      "uid": "std::__fill_a1<int*, int>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate"
    },
    "operator new#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "operator new"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::allocator<int>::~allocator#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::vector<int, std::allocator<int> >::size#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::vector<int, std::allocator<int> >::vector#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "__gnu_cxx::new_allocator<int>::allocate#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "__gnu_cxx::new_allocator<int>::allocate#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "operator new#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__copy_move_a1<false, int const*, int*>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "[compare_traces]#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "[compare_traces]"
    },
    "__memmove_avx_unaligned_erms#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::begin"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::end#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::end"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::end"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::size#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::vector<int, std::allocator<int> >::~vector#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Destroy<int*, int>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Destroy<int*>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "cfree@GLIBC_2.2.5#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::vector<int, std::allocator<int> >::~vector#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::allocator<int>::allocator#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::max<unsigned long>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::max<unsigned long>"
    },
    "std::min<int>#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
    },
    "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        }
      ],
      "uid": "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        },
        {
          "func": "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]"
    },
    "[compare_traces]#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::initializer_list<int>::begin#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "__gnu_cxx::__ops::__iter_less_iter#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::begin#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::__iter_less_iter#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::min_element<int const*>#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<int, std::allocator<int> >::vector#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "[libstdc++.so.6.0.30]#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "operator new#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::allocator<int>::~allocator#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::vector<int, std::allocator<int> >::_M_default_initialize#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::_M_default_initialize"
    },
    "std::_Construct<int>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        }
      ],
      "uid": "std::_Construct<int>"
    },
    "std::__fill_a1<int*, int>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_a<int*, int>"
        }
      ],
      "uid": "std::__fill_a1<int*, int>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "std::allocator<int>::~allocator#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::forward<std::vector<int, std::allocator<int> > const&>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::forward<std::vector<int, std::allocator<int> > const&>"
    },
    "std::vector<int, std::allocator<int> >::begin#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::begin"
    },
    "std::vector<int, std::allocator<int> >::end#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::end"
    },
    "std::vector<int, std::allocator<int> >::vector#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::allocator<int>::allocator#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "[libstdc++.so.6.0.30]#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "__gnu_cxx::new_allocator<int>::allocate#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "__gnu_cxx::new_allocator<int>::_M_max_size#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        },
        {
          "func": "__gnu_cxx::new_allocator<int>::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::_M_max_size"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::allocator<int>::allocator#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        },
        {
          "func": "std::allocator<int>::allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a1<false, int const*, int*>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a2<false, int const*, int*>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "__memmove_avx_unaligned_erms#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__niter_base<int*>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int*>"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "std::__niter_base<int*>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int*>"
    },
    "std::__niter_wrap<int*>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_wrap<int*>"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::begin"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::end#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::end"
    },
    "std::vector<int, std::allocator<int> >::size#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::vector<int, std::allocator<int> >::~vector#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Destroy<int*, int>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Destroy<int*>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "cfree@GLIBC_2.2.5#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "operator delete#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "operator delete"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::allocator<int>::~allocator#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::allocator<int>::~allocator#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "std::vector<int, std::allocator<int> >::~vector#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::min<int>#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<int, std::allocator<int> >::vector#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size"
    },
    "std::initializer_list<double>::begin#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::initializer_list<double>::end"
        }
      ],
      "uid": "std::initializer_list<double>::begin"
    },
    "std::operator==<char>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::operator==<char>"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size"
    },
    "switch_cost_levenshtein#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "switch_cost_levenshtein"
    },
    "[compare_traces]#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::initializer_list<int>::begin#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "__gnu_cxx::__ops::__iter_less_iter#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::begin#13": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::__iter_less_iter#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::min_element<int const*>#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<int, std::allocator<int> >::vector#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::__uninitialized_default_n_a<int*, unsigned long, int>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
    },
    "std::__fill_a1<int*, int>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_a<int*, int>"
        }
      ],
      "uid": "std::__fill_a1<int*, int>"
    },
    "std::vector<int, std::allocator<int> >::_S_check_init_len#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::_S_check_init_len"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::allocator<int>::~allocator#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::vector<int, std::allocator<int> >::begin#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::begin"
    },
    "std::vector<int, std::allocator<int> >::vector#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        },
        {
          "func": "std::allocator<int>::allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::~new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "[libstdc++.so.6.0.30]#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "__gnu_cxx::new_allocator<int>::allocate#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "operator new#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a1<false, int const*, int*>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move_a2<false, int const*, int*>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "__memmove_avx_unaligned_erms#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__copy_move_a2<false, int const*, int*>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__niter_base<int*>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int*>"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::vector<int, std::allocator<int> >::begin#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::begin"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::begin"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::end#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::end"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::end"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::size#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::forward<std::vector<int, std::allocator<int> > const&>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::forward<std::vector<int, std::allocator<int> > const&>"
    },
    "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::max_size#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::max_size"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::_Destroy<int*, int>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::vector<int, std::allocator<int> >::~vector#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Destroy<int*, int>#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Destroy<int*>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Destroy<int*>#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "cfree@GLIBC_2.2.5#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::allocator<int>::~allocator#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        },
        {
          "func": "std::allocator<int>::~allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::~new_allocator"
    },
    "std::allocator<int>::~allocator#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "std::vector<int, std::allocator<int> >::~vector#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "cfree@GLIBC_2.2.5#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::min<int>#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::data#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::data"
    },
    "std::initializer_list<double>::begin#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        }
      ],
      "uid": "std::initializer_list<double>::begin"
    },
    "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        }
      ],
      "uid": "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size"
    },
    "[compare_traces]#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::initializer_list<int>::begin#14": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "__gnu_cxx::__ops::__iter_less_iter#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#15": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::begin#16": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::__iter_less_iter#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::min_element<int const*>#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        }
      ],
      "uid": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
    },
    "std::__fill_n_a<int*, unsigned long, int>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        }
      ],
      "uid": "std::__fill_n_a<int*, unsigned long, int>"
    },
    "std::__fill_a1<int*, int>#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_a<int*, int>"
        }
      ],
      "uid": "std::__fill_a1<int*, int>"
    },
    "std::allocator<int>::~allocator#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate"
    },
    "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::new_allocator#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::vector<int, std::allocator<int> > >::new_allocator"
    },
    "operator new#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "operator new"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::allocator<int>::~allocator#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::forward<std::vector<int, std::allocator<int> > const&>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::forward<std::vector<int, std::allocator<int> > const&>"
    },
    "std::vector<int, std::allocator<int> >::size#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::vector<int, std::allocator<int> >::vector#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::allocator<int>::allocator#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::allocator<int>::allocator#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "__gnu_cxx::new_allocator<int>::_M_max_size#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::_M_max_size"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::allocator<int>::allocator#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        },
        {
          "func": "std::allocator<int>::allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__copy_move_a2<false, int const*, int*>#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "__memmove_avx_unaligned_erms#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__niter_wrap<int*>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_wrap<int*>"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "std::__niter_wrap<int*>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_wrap<int*>"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::vector<int, std::allocator<int> >::begin#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::begin"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::begin"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::end"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::size#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::vector<int, std::allocator<int> >::~vector#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Destroy<int*, int>#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Destroy_aux<true>::__destroy<int*>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        },
        {
          "func": "std::_Destroy<int*>"
        }
      ],
      "uid": "std::_Destroy_aux<true>::__destroy<int*>"
    },
    "std::_Destroy<int*>#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "cfree@GLIBC_2.2.5#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "operator delete#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "operator delete"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::allocator<int>::~allocator#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::allocator<int>::~allocator#13": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::min<int>#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size"
    },
    "[compare_traces]#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::initializer_list<int>::begin#17": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "__gnu_cxx::__ops::__iter_less_iter#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#18": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::begin#19": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::__iter_less_iter#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#13": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::min_element<int const*>#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::__fill_a<int*, int>#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        }
      ],
      "uid": "std::__fill_a<int*, int>"
    },
    "std::__fill_a1<int*, int>#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_n_a<int*, unsigned long, int>"
        }
      ],
      "uid": "std::__fill_a1<int*, int>"
    },
    "std::__fill_a1<int*, int>#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_a<int*, int>"
        }
      ],
      "uid": "std::__fill_a1<int*, int>"
    },
    "std::vector<int, std::allocator<int> >::_S_check_init_len#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::_S_check_init_len"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_get_Tp_allocator#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_get_Tp_allocator"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "operator new#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "operator new"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::allocator<int>::~allocator#14": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::vector<int, std::allocator<int> >::begin#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::begin"
    },
    "std::vector<int, std::allocator<int> >::size#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::vector<int, std::allocator<int> >::vector#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::allocator<int>::allocator#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::allocator<int>::allocator#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        },
        {
          "func": "std::allocator<int>::allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "__gnu_cxx::new_allocator<int>::_M_max_size#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::_M_max_size"
    },
    "__gnu_cxx::new_allocator<int>::allocate#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "operator new#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::allocator<int>::allocator#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a1<false, int const*, int*>#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__copy_move_a1<false, int const*, int*>#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "__memmove_avx_unaligned_erms#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__copy_move_a2<false, int const*, int*>#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "std::__niter_base<int*>#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int*>"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::vector<int, std::allocator<int> >::begin#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::begin"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::begin"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::end#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::end"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::end"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::size#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::vector<int, std::allocator<int> >::vector#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::vector<int, std::allocator<int> >::~vector#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Destroy<int*, int>#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Destroy<int*>#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Destroy_aux<true>::__destroy<int*>#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        },
        {
          "func": "std::_Destroy<int*>"
        }
      ],
      "uid": "std::_Destroy_aux<true>::__destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::vector<int, std::allocator<int> >::~vector#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::allocator<int>::~allocator#15": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::min<int>#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#13": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
    },
    "[compare_traces]#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::initializer_list<int>::begin#20": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#13": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "__gnu_cxx::__ops::__iter_less_iter#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#13": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#21": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#14": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::begin#22": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#13": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#14": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::__iter_less_iter#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#14": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#15": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::min_element<int const*>#13": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#14": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<int, std::allocator<int> >::vector#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#13": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate"
    },
    "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "operator new#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "operator new"
    },
    "operator new#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "operator new"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "std::vector<int, std::allocator<int> >::end#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::end"
    },
    "std::vector<int, std::allocator<int> >::size#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::vector<int, std::allocator<int> >::vector#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "std::allocator<int>::allocator#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        },
        {
          "func": "std::allocator<int>::allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "operator new#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::allocator_traits<std::allocator<int> >::allocate#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::allocate"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base"
    },
    "std::__copy_move_a1<false, int const*, int*>#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "__memmove_avx_unaligned_erms#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__niter_base<int*>#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int*>"
    },
    "std::__niter_base<int*>#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int*>"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::begin"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator#13": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::end"
        }
      ],
      "uid": "__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator"
    },
    "std::vector<int, std::allocator<int> >::size#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::vector<int, std::allocator<int> >::vector#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_max_size"
    },
    "std::_Destroy<std::vector<int, std::allocator<int> > >#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy<std::vector<int, std::allocator<int> > >"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::_Destroy<int*>#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "[libstdc++.so.6.0.30]#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "cfree@GLIBC_2.2.5#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::min<int>#13": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#15": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#14": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "switch_cost_levenshtein#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "switch_cost_levenshtein"
    },
    "[compare_traces]#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::initializer_list<int>::end#15": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#14": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#15": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#23": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::end#16": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min_element<int const*>#14": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#16": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::__iter_less_iter#13": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#16": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#17": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::min_element<int const*>#15": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#16": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<int, std::allocator<int> >::_M_default_initialize#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::_M_default_initialize"
    },
    "std::__fill_a1<int*, int>#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_a<int*, int>"
        }
      ],
      "uid": "std::__fill_a1<int*, int>"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#15": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_allocate"
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::allocator<int>::~allocator#16": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::vector<int, std::allocator<int> >::begin#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::begin"
    },
    "std::vector<int, std::allocator<int> >::vector#13": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_allocate#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
    },
    "__gnu_cxx::new_allocator<int>::_M_max_size#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::_M_max_size"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        }
      ],
      "uid": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__copy_move_a1<false, int const*, int*>#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a1<false, int const*, int*>"
    },
    "std::__copy_move_a2<false, int const*, int*>#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move_a2<false, int const*, int*>"
    },
    "__memmove_avx_unaligned_erms#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::allocator<int>::~allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::~new_allocator"
    },
    "std::vector<int, std::allocator<int> >::begin#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::begin"
    },
    "std::vector<int, std::allocator<int> >::size#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::size"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_S_check_init_len"
    },
    "std::vector<int, std::allocator<int> >::~vector#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::_Destroy<int*>#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Destroy<int*>#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "__gnu_cxx::new_allocator<int>::~new_allocator#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::~new_allocator"
    },
    "std::allocator<int>::~allocator#17": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::__addressof<std::vector<int, std::allocator<int> > >#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::__addressof<std::vector<int, std::allocator<int> > >"
    },
    "std::vector<int, std::allocator<int> >::~vector#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::~vector"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::min<int>#15": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#17": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#16": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "[compare_traces]#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "[compare_traces]"
    },
    "levenshteinDistance#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#13": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::min<int>#16": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::initializer_list<int>::end#17": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::initializer_list<int>::begin#24": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#14": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::initializer_list<int>::size#15": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::min_element<int const*>#16": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#18": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#17": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#19": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::min_element<int const*>#17": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#18": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_base#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#13": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "std::allocator_traits<std::allocator<int> >::deallocate#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<int> >::deallocate"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#17": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
    },
    "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
    },
    "std::allocator<int>::~allocator#18": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::allocator<int>::~allocator"
    },
    "std::vector<int, std::allocator<int> >::vector#14": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_create_storage#14": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
    },
    "__gnu_cxx::new_allocator<int>::allocate#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "__gnu_cxx::new_allocator<int>::allocate#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_create_storage"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_allocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::allocate"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>#5": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
    },
    "__memmove_avx_unaligned_erms#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__niter_base<int const*, std::vector<int, std::allocator<int> > >"
    },
    "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        }
      ],
      "uid": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
    },
    "std::_Destroy<int*>#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Destroy<int*, int>"
        }
      ],
      "uid": "std::_Destroy<int*>"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#13": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_deallocate#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "[libstdc++.so.6.0.30]#4": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_get_Tp_allocator#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        }
      ],
      "uid": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_get_Tp_allocator"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "std::min<int>#17": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::vector<int, std::allocator<int> >::operator[]#19": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#18": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "levenshteinDistance#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::initializer_list<int>::end#18": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::min<int>#18": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "__gnu_cxx::__ops::__iter_less_iter#14": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "__gnu_cxx::__ops::__iter_less_iter"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#18": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::initializer_list<int>::begin#25": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::begin"
    },
    "std::initializer_list<int>::size#16": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::initializer_list<int>::end"
        }
      ],
      "uid": "std::initializer_list<int>::size"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#19": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#20": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::vector<int, std::allocator<int> >::operator[]#20": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<int, std::allocator<int> >::_S_max_size#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_S_check_init_len"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::_S_max_size"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#19": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "std::vector<int, std::allocator<int> >::vector#15": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::vector"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#13": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data#14": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >#3": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >"
    },
    "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "[compare_traces]#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "[compare_traces]"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator#14": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator"
    },
    "std::_Destroy<int*, int>#6": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Destroy<int*, int>"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#14": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "operator delete#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::vector<int, std::allocator<int> > > >::deallocate"
        }
      ],
      "uid": "operator delete"
    },
    "std::vector<int, std::allocator<int> >::operator[]#21": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]#20": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::operator[]"
    },
    "levenshteinDistance#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::initializer_list<int>::end#19": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::initializer_list<int>::end"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#20": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#21": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        },
        {
          "func": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::vector<int, std::allocator<int> >::operator[]#22": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::vector<int, std::allocator<int> >::operator[]"
    },
    "std::__fill_a1<int*, int>#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::_M_default_initialize"
        },
        {
          "func": "std::__uninitialized_default_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__uninitialized_default_n<int*, unsigned long>"
        },
        {
          "func": "std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>"
        },
        {
          "func": "std::fill_n<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_n_a<int*, unsigned long, int>"
        },
        {
          "func": "std::__fill_a<int*, int>"
        }
      ],
      "uid": "std::__fill_a1<int*, int>"
    },
    "std::allocator<int>::allocator#11": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "__gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_select_on_copy"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::select_on_container_copy_construction"
        }
      ],
      "uid": "std::allocator<int>::allocator"
    },
    "__gnu_cxx::new_allocator<int>::new_allocator#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
        },
        {
          "func": "std::allocator<int>::allocator"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::new_allocator"
    },
    "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl#9": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl"
    },
    "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        },
        {
          "func": "std::__copy_move_a1<false, int const*, int*>"
        },
        {
          "func": "std::__copy_move_a2<false, int const*, int*>"
        }
      ],
      "uid": "std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>"
    },
    "std::_Vector_base<int, std::allocator<int> >::~_Vector_base#15": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        }
      ],
      "uid": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
    },
    "__gnu_cxx::new_allocator<int>::deallocate#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::~vector"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy_aux<false>::__destroy<std::vector<int, std::allocator<int> >*>"
        },
        {
          "func": "std::_Destroy<std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::~vector"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::~_Vector_base"
        },
        {
          "func": "std::_Vector_base<int, std::allocator<int> >::_M_deallocate"
        },
        {
          "func": "std::allocator_traits<std::allocator<int> >::deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<int>::deallocate"
    },
    "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>#2": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        }
      ],
      "uid": "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "levenshteinDistance#12": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "std::min<int>#19": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        }
      ],
      "uid": "std::min<int>"
    },
    "std::min_element<int const*>#18": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        }
      ],
      "uid": "std::min_element<int const*>"
    },
    "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>#21": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::min<int>"
        },
        {
          "func": "std::min_element<int const*>"
        }
      ],
      "uid": "std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>#8": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        },
        {
          "func": "levenshteinDistance"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::vector"
        },
        {
          "func": "std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_initialize"
        },
        {
          "func": "std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >"
        },
        {
          "func": "std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>"
        },
        {
          "func": "std::vector<int, std::allocator<int> >::vector"
        },
        {
          "func": "std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>"
        },
        {
          "func": "std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
        }
      ],
      "uid": "std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]#10": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[]"
    },
    "levenshteinDistance#13": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_levenshtein"
        }
      ],
      "uid": "levenshteinDistance"
    },
    "_int_free#1": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [],
      "uid": "_int_free"
    },
    "_int_malloc#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [],
      "uid": "_int_malloc"
    },
    "_start#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [],
      "uid": "_start"
    },
    "cfree@GLIBC_2.2.5#7": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "malloc#0": {
      "command": "compare_traces",
      "time": 55.053600549697876,
      "trace": [],
      "uid": "malloc"
    }
  },
  "models": [],
  "origin": "0627dc36cbc4bca148725d8aab29eef5ea886596",
  "header": {
    "type": "time",
    "cmd": "./compare_traces inputs/minimal-baseline.txt inputs/minimal-target.txt",
    "workload": "",
    "units": {
      "time": "sample"
    }
  },
  "machine": {
    "architecture": "x86_64",
    "system": "Linux",
    "release": "5.15.146.1-microsoft-standard-WSL2",
    "host": "dellion",
    "cpu": {
      "physical": 6,
      "total": 12,
      "frequency": "2208.00Mhz"
    },
    "memory": {
      "total_ram": "7.7 GiB",
      "swap": "2.0 GiB"
    },
    "boot_info": "initrd=\\initrd.img WSL_ROOT_INIT=1 panic=-1 nr_cpus=12 hv_utils.timesync_implicit=1 console=hvc0 debug pty.legacy_count=0",
    "mem_details": {
      "MemTotal": "8026096 kB",
      "MemFree": "6207924 kB",
      "MemAvailable": "6587164 kB",
      "Buffers": "6248 kB",
      "Cached": "637756 kB",
      "SwapCached": "0 kB",
      "Active": "256728 kB",
      "Inactive": "1137048 kB",
      "Active(anon)": "2680 kB",
      "Inactive(anon)": "842480 kB",
      "Active(file)": "254048 kB",
      "Inactive(file)": "294568 kB",
      "Unevictable": "0 kB",
      "Mlocked": "0 kB",
      "SwapTotal": "2097152 kB",
      "SwapFree": "2097152 kB",
      "Dirty": "0 kB",
      "Writeback": "0 kB",
      "AnonPages": "739152 kB",
      "Mapped": "483472 kB",
      "Shmem": "95144 kB",
      "KReclaimable": "92680 kB",
      "Slab": "161940 kB",
      "SReclaimable": "92680 kB",
      "SUnreclaim": "69260 kB",
      "KernelStack": "7200 kB",
      "PageTables": "12604 kB",
      "NFS_Unstable": "0 kB",
      "Bounce": "0 kB",
      "WritebackTmp": "0 kB",
      "CommitLimit": "6110200 kB",
      "Committed_AS": "3013964 kB",
      "VmallocTotal": "34359738367 kB",
      "VmallocUsed": "29524 kB",
      "VmallocChunk": "0 kB",
      "Percpu": "8960 kB",
      "AnonHugePages": "280576 kB",
      "ShmemHugePages": "0 kB",
      "ShmemPmdMapped": "0 kB",
      "FileHugePages": "0 kB",
      "FilePmdMapped": "0 kB",
      "HugePages_Total": "0",
      "HugePages_Free": "0",
      "HugePages_Rsvd": "0",
      "HugePages_Surp": "0",
      "Hugepagesize": "2048 kB",
      "Hugetlb": "0 kB",
      "DirectMap4k": "128000 kB",
      "DirectMap2M": "6055936 kB",
      "DirectMap1G": "11534336 kB"
    },
    "cpu_details": [
      {
        "processor": "0",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "0",
        "cpu cores": "6",
        "apicid": "0",
        "initial apicid": "0",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "1",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "0",
        "cpu cores": "6",
        "apicid": "1",
        "initial apicid": "1",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "2",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "1",
        "cpu cores": "6",
        "apicid": "2",
        "initial apicid": "2",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "3",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "1",
        "cpu cores": "6",
        "apicid": "3",
        "initial apicid": "3",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "4",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "2",
        "cpu cores": "6",
        "apicid": "4",
        "initial apicid": "4",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "5",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "2",
        "cpu cores": "6",
        "apicid": "5",
        "initial apicid": "5",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "6",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "3",
        "cpu cores": "6",
        "apicid": "6",
        "initial apicid": "6",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "7",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "3",
        "cpu cores": "6",
        "apicid": "7",
        "initial apicid": "7",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "8",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "4",
        "cpu cores": "6",
        "apicid": "8",
        "initial apicid": "8",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "9",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "4",
        "cpu cores": "6",
        "apicid": "9",
        "initial apicid": "9",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "10",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "5",
        "cpu cores": "6",
        "apicid": "10",
        "initial apicid": "10",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "11",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "5",
        "cpu cores": "6",
        "apicid": "11",
        "initial apicid": "11",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {}
    ]
  },
  "collector_info": {
    "name": "kperf",
    "params": {
      "with_sudo": false,
      "warmup": 0,
      "repeat": 1,
      "workload": ""
    }
  },
  "postprocessors": []
}