{
  "resources": {
    "[libstdc++.so.6.0.30]#0": {
      "amount": [
        223888963
      ]
    },
    "[libstdc++.so.6.0.30]#1": {
      "amount": [
        115208448
      ]
    },
    "[libstdc++.so.6.0.30]#2": {
      "amount": [
        76771205
      ]
    },
    "__memmove_avx_unaligned_erms#0": {
      "amount": [
        76425282
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>#0": {
      "amount": [
        153870625
      ]
    },
    "std::basic_ios<char, std::char_traits<char> >::_M_cache_locale#0": {
      "amount": [
        38666047
      ]
    },
    "std::has_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >#0": {
      "amount": [
        38470874
      ]
    },
    "std::ios_base::_M_init#0": {
      "amount": [
        77625595
      ]
    },
    "std::locale::id::_M_id#0": {
      "amount": [
        115131500
      ]
    },
    "std::locale::locale#0": {
      "amount": [
        95059854
      ]
    },
    "std::locale::operator=#0": {
      "amount": [
        38209141
      ]
    },
    "std::locale::~locale#0": {
      "amount": [
        77303023
      ]
    },
    "std::use_facet<std::ctype<char> >#0": {
      "amount": [
        38234180
      ]
    },
    "std::use_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >#0": {
      "amount": [
        113793416
      ]
    },
    "__GI___libc_open#0": {
      "amount": [
        169911
      ]
    },
    "dl_main#0": {
      "amount": [
        1016
      ]
    },
    "_int_free#0": {
      "amount": [
        153609857
      ]
    },
    "[libstdc++.so.6.0.30]#3": {
      "amount": [
        75239579
      ]
    },
    "__memchr_avx2#0": {
      "amount": [
        192597792
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append#0": {
      "amount": [
        38522660
      ]
    },
    "std::basic_ios<char, std::char_traits<char> >::init#0": {
      "amount": [
        114041364
      ]
    },
    "std::getline<char, std::char_traits<char>, std::allocator<char> >#0": {
      "amount": [
        690451595
      ]
    },
    "std::istream::sentry::sentry#0": {
      "amount": [
        458207386
      ]
    },
    "[libstdc++.so.6.0.30]#4": {
      "amount": [
        75130302
      ]
    },
    "std::basic_ios<char, std::char_traits<char> >::_M_cache_locale#1": {
      "amount": [
        142246753
      ]
    },
    "std::use_facet<std::ctype<char> >#1": {
      "amount": [
        76500683
      ]
    },
    "std::use_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >#1": {
      "amount": [
        38201985
      ]
    },
    "std::use_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >#0": {
      "amount": [
        38161058
      ]
    },
    "computeTransformationCost#0": {
      "amount": [
        38385684
      ]
    },
    "computeTransformationCost#1": {
      "amount": [
        77041628
      ]
    },
    "computeTransformationCost#2": {
      "amount": [
        76881041
      ]
    },
    "computeTransformationCost#3": {
      "amount": [
        76364051
      ]
    },
    "split_to_words#0": {
      "amount": [
        38502907
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node#0": {
      "amount": [
        38184861
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node#0": {
      "amount": [
        38074529
      ]
    },
    "std::_Hash_bytes#0": {
      "amount": [
        38989310
      ]
    },
    "std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::insert_iterator#0": {
      "amount": [
        38280295
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#0": {
      "amount": [
        38252457
      ]
    },
    "std::__detail::_Mod_range_hashing::operator#0": {
      "amount": [
        38162254
      ]
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index#0": {
      "amount": [
        38412898
      ]
    },
    "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator#0": {
      "amount": [
        37787060
      ]
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#0": {
      "amount": [
        75884616
      ]
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code#0": {
      "amount": [
        38192542
      ]
    },
    "std::__detail::_Identity::operator#0": {
      "amount": [
        38091784
      ]
    },
    "std::basic_ios<char, std::char_traits<char> >::operator bool#0": {
      "amount": [
        76867011
      ]
    },
    "std::getline<char, std::char_traits<char>, std::allocator<char> >#1": {
      "amount": [
        38174822
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#0": {
      "amount": [
        38208930
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#0": {
      "amount": [
        38226938
      ]
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr#0": {
      "amount": [
        38920102
      ]
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next#0": {
      "amount": [
        38237086
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#0": {
      "amount": [
        38089616
      ]
    },
    "std::initializer_list<double>::end#0": {
      "amount": [
        38342103
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#1": {
      "amount": [
        38147958
      ]
    },
    "std::operator==<char>#0": {
      "amount": [
        77210810
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]#0": {
      "amount": [
        37823971
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node#0": {
      "amount": [
        38741216
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#0": {
      "amount": [
        38217439
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index#0": {
      "amount": [
        38207353
      ]
    },
    "std::__detail::_Mod_range_hashing::operator#1": {
      "amount": [
        39103471
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node#1": {
      "amount": [
        38475115
      ]
    },
    "[compare_traces]#0": {
      "amount": [
        38226638
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::data#0": {
      "amount": [
        37845827
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin#0": {
      "amount": [
        38099900
      ]
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index#1": {
      "amount": [
        38265181
      ]
    },
    "std::__detail::_Mod_range_hashing::operator#2": {
      "amount": [
        115167835
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets#0": {
      "amount": [
        38597729
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#0": {
      "amount": [
        115159748
      ]
    },
    "std::__detail::_Hash_node_base::_Hash_node_base#0": {
      "amount": [
        38025004
      ]
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get#0": {
      "amount": [
        38265650
      ]
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get#1": {
      "amount": [
        38419661
      ]
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::allocate#0": {
      "amount": [
        38254780
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string#0": {
      "amount": [
        38221938
      ]
    },
    "std::forward<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#0": {
      "amount": [
        38219229
      ]
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index#2": {
      "amount": [
        38099974
      ]
    },
    "std::_Hash_bytes#1": {
      "amount": [
        38979773
      ]
    },
    "std::__detail::_Identity::operator#1": {
      "amount": [
        38414645
      ]
    },
    "std::__detail::_Prime_rehash_policy::_M_need_rehash#0": {
      "amount": [
        37203162
      ]
    },
    "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>#0": {
      "amount": [
        38156547
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node#1": {
      "amount": [
        38220117
      ]
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_Hashtable_ebo_helper#0": {
      "amount": [
        38226477
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#2": {
      "amount": [
        38630424
      ]
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*#0": {
      "amount": [
        152962088
      ]
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr#1": {
      "amount": [
        38503327
      ]
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*#1": {
      "amount": [
        38259159
      ]
    },
    "std::__detail::_Node_iterator_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_incr#0": {
      "amount": [
        38647788
      ]
    },
    "std::__detail::operator!=#0": {
      "amount": [
        38401332
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_begin#0": {
      "amount": [
        38300183
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable#0": {
      "amount": [
        38219484
      ]
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_Hashtable_ebo_helper#1": {
      "amount": [
        38507230
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_uses_single_bucket#0": {
      "amount": [
        38889760
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_begin#1": {
      "amount": [
        37555828
      ]
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next#1": {
      "amount": [
        38184651
      ]
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr#2": {
      "amount": [
        38425425
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#1": {
      "amount": [
        38928516
      ]
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get#2": {
      "amount": [
        38282668
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_node_allocator#0": {
      "amount": [
        38237255
      ]
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >#0": {
      "amount": [
        38245842
      ]
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >#0": {
      "amount": [
        76766210
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string#0": {
      "amount": [
        38443052
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr#0": {
      "amount": [
        38349942
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes#0": {
      "amount": [
        38217207
      ]
    },
    "std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::~allocator#0": {
      "amount": [
        38785593
      ]
    },
    "std::min_element<double const*>#0": {
      "amount": [
        38211751
      ]
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin#0": {
      "amount": [
        38411993
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]#1": {
      "amount": [
        38079364
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#1": {
      "amount": [
        38226258
      ]
    },
    "split_to_words#1": {
      "amount": [
        38776512
      ]
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert#0": {
      "amount": [
        38370064
      ]
    },
    "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert#0": {
      "amount": [
        38169374
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node#1": {
      "amount": [
        38292132
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#1": {
      "amount": [
        191682689
      ]
    },
    "std::__detail::_Mod_range_hashing::operator#3": {
      "amount": [
        153784937
      ]
    },
    "std::__detail::_Mod_range_hashing::operator#4": {
      "amount": [
        38161871
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node#2": {
      "amount": [
        38309402
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node#2": {
      "amount": [
        38176124
      ]
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index#3": {
      "amount": [
        38076580
      ]
    },
    "std::__detail::_Mod_range_hashing::operator#5": {
      "amount": [
        75402311
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node#0": {
      "amount": [
        114749966
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin#1": {
      "amount": [
        115037160
      ]
    },
    "std::__detail::_Mod_range_hashing::operator#6": {
      "amount": [
        38934854
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets#0": {
      "amount": [
        39057978
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux#0": {
      "amount": [
        38901668
      ]
    },
    "__memset_avx2_unaligned_erms#0": {
      "amount": [
        76410041
      ]
    },
    "std::allocator<std::__detail::_Hash_node_base*>::~allocator#0": {
      "amount": [
        38208409
      ]
    },
    "std::__detail::_Prime_rehash_policy::_M_state#0": {
      "amount": [
        38507663
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node#2": {
      "amount": [
        38400764
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#1": {
      "amount": [
        38608358
      ]
    },
    "operator new#0": {
      "amount": [
        38169656
      ]
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Hash_node#0": {
      "amount": [
        76574725
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#2": {
      "amount": [
        38143730
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#3": {
      "amount": [
        38484576
      ]
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::allocate#1": {
      "amount": [
        37832311
      ]
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#1": {
      "amount": [
        38313511
      ]
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code#1": {
      "amount": [
        38218878
      ]
    },
    "std::_Hash_impl::hash#0": {
      "amount": [
        38173000
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length#0": {
      "amount": [
        38204954
      ]
    },
    "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator#0": {
      "amount": [
        76691256
      ]
    },
    "std::_Hash_bytes#2": {
      "amount": [
        115864417
      ]
    },
    "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>#1": {
      "amount": [
        115559473
      ]
    },
    "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_AllocNode#0": {
      "amount": [
        37926249
      ]
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code#2": {
      "amount": [
        39007249
      ]
    },
    "std::basic_ios<char, std::char_traits<char> >::operator bool#1": {
      "amount": [
        38136218
      ]
    },
    "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >#0": {
      "amount": [
        115264091
      ]
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v#0": {
      "amount": [
        38187332
      ]
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*#2": {
      "amount": [
        153190979
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#1": {
      "amount": [
        37977341
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#2": {
      "amount": [
        39052262
      ]
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next#2": {
      "amount": [
        38343081
      ]
    },
    "std::__detail::operator!=#1": {
      "amount": [
        115775092
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin#0": {
      "amount": [
        76225270
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_begin#2": {
      "amount": [
        77150551
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable#1": {
      "amount": [
        38596227
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets#0": {
      "amount": [
        38091000
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node#0": {
      "amount": [
        38479111
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes#1": {
      "amount": [
        76577395
      ]
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next#3": {
      "amount": [
        38149608
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node#1": {
      "amount": [
        76295518
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#3": {
      "amount": [
        38757612
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#4": {
      "amount": [
        38322784
      ]
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::deallocate#0": {
      "amount": [
        38462623
      ]
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::deallocate#1": {
      "amount": [
        38667718
      ]
    },
    "std::__addressof<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >#0": {
      "amount": [
        38130494
      ]
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get#3": {
      "amount": [
        38123340
      ]
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >#1": {
      "amount": [
        76031449
      ]
    },
    "std::pointer_traits<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>*>::pointer_to#0": {
      "amount": [
        39022393
      ]
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::~_Hashtable_ebo_helper#0": {
      "amount": [
        38492529
      ]
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::~_Hashtable_ebo_helper#1": {
      "amount": [
        38630710
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]#2": {
      "amount": [
        38819381
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#2": {
      "amount": [
        38168213
      ]
    },
    "switch_cost_similarity#0": {
      "amount": [
        38275498
      ]
    },
    "[compare_traces]#1": {
      "amount": [
        38882852
      ]
    },
    "cfree@GLIBC_2.2.5#0": {
      "amount": [
        38550551
      ]
    },
    "split_to_words#2": {
      "amount": [
        93999014
      ]
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert#1": {
      "amount": [
        38126258
      ]
    },
    "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert#1": {
      "amount": [
        38400106
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#2": {
      "amount": [
        114762513
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index#1": {
      "amount": [
        39004707
      ]
    },
    "std::__detail::_Mod_range_hashing::operator#7": {
      "amount": [
        38683064
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node#3": {
      "amount": [
        38543883
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node#3": {
      "amount": [
        76012973
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node#4": {
      "amount": [
        38298470
      ]
    },
    "std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, true, true> >::_M_equals#0": {
      "amount": [
        38208823
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#5": {
      "amount": [
        38286535
      ]
    },
    "std::forward<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#1": {
      "amount": [
        38304022
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node#1": {
      "amount": [
        115360861
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index#2": {
      "amount": [
        38650528
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin#2": {
      "amount": [
        115599932
      ]
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next#4": {
      "amount": [
        37915251
      ]
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate#0": {
      "amount": [
        38805774
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets#1": {
      "amount": [
        38255879
      ]
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index#4": {
      "amount": [
        39039703
      ]
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_store_code#0": {
      "amount": [
        76166972
      ]
    },
    "std::__detail::_Node_iterator_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Node_iterator_base#0": {
      "amount": [
        38984352
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node#3": {
      "amount": [
        38559411
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#2": {
      "amount": [
        152825326
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#4": {
      "amount": [
        114833074
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#6": {
      "amount": [
        38309752
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_node_allocator#1": {
      "amount": [
        38749907
      ]
    },
    "std::__to_address<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >#0": {
      "amount": [
        38194219
      ]
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::allocate#2": {
      "amount": [
        39018098
      ]
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::_M_max_size#0": {
      "amount": [
        38516169
      ]
    },
    "operator new#1": {
      "amount": [
        75801129
      ]
    },
    "operator new#2": {
      "amount": [
        38203161
      ]
    },
    "operator new#3": {
      "amount": [
        76746195
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string#1": {
      "amount": [
        38687637
      ]
    },
    "std::forward<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#2": {
      "amount": [
        77102780
      ]
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash#0": {
      "amount": [
        38285280
      ]
    },
    "[compare_traces]#2": {
      "amount": [
        38242640
      ]
    },
    "std::__detail::_Hashtable_ebo_helper<1, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true>::_M_cget#0": {
      "amount": [
        115625314
      ]
    },
    "std::_Hash_bytes#3": {
      "amount": [
        115930017
      ]
    },
    "std::__detail::_Prime_rehash_policy::_M_need_rehash#1": {
      "amount": [
        190986706
      ]
    },
    "std::__detail::_Prime_rehash_policy::_M_state#1": {
      "amount": [
        38395065
      ]
    },
    "std::forward<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&>#0": {
      "amount": [
        38606689
      ]
    },
    "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>#2": {
      "amount": [
        76895357
      ]
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code#3": {
      "amount": [
        38339950
      ]
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_Hashtable_ebo_helper#2": {
      "amount": [
        38337802
      ]
    },
    "std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable_base#0": {
      "amount": [
        38288501
      ]
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true>::_Hashtable_ebo_helper#0": {
      "amount": [
        37986171
      ]
    },
    "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>#0": {
      "amount": [
        77164299
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#3": {
      "amount": [
        38369234
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare#0": {
      "amount": [
        38807653
      ]
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v#1": {
      "amount": [
        38402860
      ]
    },
    "std::operator< <char, std::char_traits<char>, std::allocator<char> >#0": {
      "amount": [
        76640111
      ]
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*#3": {
      "amount": [
        38634003
      ]
    },
    "std::__detail::operator!=#2": {
      "amount": [
        51408613
      ]
    },
    "std::operator< <char, std::char_traits<char>, std::allocator<char> >#1": {
      "amount": [
        38371577
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin#1": {
      "amount": [
        38248083
      ]
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::_Node_iterator#0": {
      "amount": [
        38680868
      ]
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#0": {
      "amount": [
        38407469
      ]
    },
    "std::__detail::_Prime_rehash_policy::_Prime_rehash_policy#0": {
      "amount": [
        38182362
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable#0": {
      "amount": [
        38182726
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_begin#3": {
      "amount": [
        38895848
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets#2": {
      "amount": [
        114384191
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_buckets#0": {
      "amount": [
        38934811
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear#0": {
      "amount": [
        38237784
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes#2": {
      "amount": [
        154032866
      ]
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next#5": {
      "amount": [
        36486097
      ]
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr#3": {
      "amount": [
        38684740
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_node_allocator#2": {
      "amount": [
        38167154
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::~_Hashtable_alloc#0": {
      "amount": [
        38484969
      ]
    },
    "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_conjure_hashtable#0": {
      "amount": [
        38254678
      ]
    },
    "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert#2": {
      "amount": [
        38639335
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#3": {
      "amount": [
        272942226
      ]
    },
    "std::__detail::_Mod_range_hashing::operator#8": {
      "amount": [
        38602320
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node#5": {
      "amount": [
        39007623
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node#4": {
      "amount": [
        38245328
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node#6": {
      "amount": [
        116366187
      ]
    },
    "std::char_traits<char>::compare#0": {
      "amount": [
        38489931
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node#2": {
      "amount": [
        228457827
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index#3": {
      "amount": [
        38250512
      ]
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index#5": {
      "amount": [
        37489393
      ]
    },
    "std::__detail::_Mod_range_hashing::operator#9": {
      "amount": [
        153873965
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux#1": {
      "amount": [
        38306003
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets#1": {
      "amount": [
        38482947
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node#4": {
      "amount": [
        153096785
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::~_Scoped_node#0": {
      "amount": [
        38286220
      ]
    },
    "operator new#4": {
      "amount": [
        76390276
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#3": {
      "amount": [
        116076724
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#5": {
      "amount": [
        38973691
      ]
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr#4": {
      "amount": [
        38976993
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#7": {
      "amount": [
        38023056
      ]
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get#4": {
      "amount": [
        38321908
      ]
    },
    "std::__to_address<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >#1": {
      "amount": [
        37044570
      ]
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::allocate#3": {
      "amount": [
        76819788
      ]
    },
    "malloc#0": {
      "amount": [
        38808457
      ]
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#0": {
      "amount": [
        38752912
      ]
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#1": {
      "amount": [
        38046907
      ]
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash#1": {
      "amount": [
        38267994
      ]
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code#4": {
      "amount": [
        37793332
      ]
    },
    "[compare_traces]#3": {
      "amount": [
        37293147
      ]
    },
    "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator#1": {
      "amount": [
        115239249
      ]
    },
    "std::_Hash_bytes#4": {
      "amount": [
        116120711
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#4": {
      "amount": [
        38157194
      ]
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::_Node_iterator#1": {
      "amount": [
        38605325
      ]
    },
    "std::__detail::_Prime_rehash_policy::_M_need_rehash#2": {
      "amount": [
        76110834
      ]
    },
    "std::__detail::_Prime_rehash_policy::_M_next_bkt#0": {
      "amount": [
        38899786
      ]
    },
    "std::forward<bool>#0": {
      "amount": [
        39158605
      ]
    },
    "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>#3": {
      "amount": [
        77364652
      ]
    },
    "std::forward<bool>#1": {
      "amount": [
        38324364
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable#2": {
      "amount": [
        38661205
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_Hashtable_alloc#0": {
      "amount": [
        37321943
      ]
    },
    "std::__detail::_Prime_rehash_policy::_Prime_rehash_policy#1": {
      "amount": [
        38536224
      ]
    },
    "std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream#0": {
      "amount": [
        38386461
      ]
    },
    "std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::insert_iterator#1": {
      "amount": [
        38128377
      ]
    },
    "std::ios_base::ios_base#0": {
      "amount": [
        39045751
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#4": {
      "amount": [
        38209681
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#5": {
      "amount": [
        38243089
      ]
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v#2": {
      "amount": [
        38142580
      ]
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*#4": {
      "amount": [
        76902320
      ]
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v#3": {
      "amount": [
        38058359
      ]
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr#5": {
      "amount": [
        25538460
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#6": {
      "amount": [
        38884066
      ]
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*#5": {
      "amount": [
        38620580
      ]
    },
    "std::operator< <char, std::char_traits<char>, std::allocator<char> >#2": {
      "amount": [
        38640128
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin#2": {
      "amount": [
        77003406
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_begin#4": {
      "amount": [
        38100044
      ]
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::_Node_iterator#2": {
      "amount": [
        38836596
      ]
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::end#0": {
      "amount": [
        38268154
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::end#0": {
      "amount": [
        39047685
      ]
    },
    "__memset_avx2_unaligned_erms#1": {
      "amount": [
        38595830
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets#3": {
      "amount": [
        38889723
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_uses_single_bucket#1": {
      "amount": [
        38243711
      ]
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get#5": {
      "amount": [
        37716194
      ]
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate#0": {
      "amount": [
        38062710
      ]
    },
    "std::allocator<std::__detail::_Hash_node_base*>::~allocator#1": {
      "amount": [
        38741384
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear#1": {
      "amount": [
        38131035
      ]
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next#6": {
      "amount": [
        38351847
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node#2": {
      "amount": [
        38434608
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#8": {
      "amount": [
        38218437
      ]
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::deallocate#0": {
      "amount": [
        38864166
      ]
    },
    "[compare_traces]#4": {
      "amount": [
        38767768
      ]
    },
    "cfree@GLIBC_2.2.5#1": {
      "amount": [
        38298885
      ]
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::deallocate#1": {
      "amount": [
        38231606
      ]
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >#2": {
      "amount": [
        36722768
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr#1": {
      "amount": [
        38939442
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::~_Hashtable_alloc#1": {
      "amount": [
        76984773
      ]
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]#3": {
      "amount": [
        38185056
      ]
    },
    "switch_cost_similarity#1": {
      "amount": [
        37914889
      ]
    },
    "[compare_traces]#5": {
      "amount": [
        38414540
      ]
    },
    "[libstdc++.so.6.0.30]#5": {
      "amount": [
        38500747
      ]
    },
    "split_to_words#3": {
      "amount": [
        38786879
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable#3": {
      "amount": [
        38933958
      ]
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert#2": {
      "amount": [
        38716482
      ]
    },
    "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert#3": {
      "amount": [
        38244225
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#4": {
      "amount": [
        192428955
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index#4": {
      "amount": [
        76163702
      ]
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index#6": {
      "amount": [
        38135210
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node#7": {
      "amount": [
        36542133
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node#5": {
      "amount": [
        38088566
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node#8": {
      "amount": [
        76602355
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node#3": {
      "amount": [
        113310976
      ]
    },
    "std::__detail::_Mod_range_hashing::operator#10": {
      "amount": [
        77346213
      ]
    },
    "__memset_avx2_unaligned_erms#2": {
      "amount": [
        38181823
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets#2": {
      "amount": [
        38441878
      ]
    },
    "std::__detail::_Prime_rehash_policy::_M_state#2": {
      "amount": [
        38947721
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#5": {
      "amount": [
        38849768
      ]
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Hash_node#1": {
      "amount": [
        38343818
      ]
    },
    "std::__to_address<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >#2": {
      "amount": [
        38229479
      ]
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate#0": {
      "amount": [
        38208623
      ]
    },
    "operator new#5": {
      "amount": [
        38851800
      ]
    },
    "std::forward<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#3": {
      "amount": [
        77112299
      ]
    },
    "std::forward<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#4": {
      "amount": [
        39002403
      ]
    },
    "std::__detail::_Hashtable_ebo_helper<1, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true>::_M_cget#1": {
      "amount": [
        38944806
      ]
    },
    "std::_Hash_bytes#5": {
      "amount": [
        153491186
      ]
    },
    "std::__detail::_Identity::operator#2": {
      "amount": [
        38798747
      ]
    },
    "std::__detail::_Prime_rehash_policy::_M_need_rehash#3": {
      "amount": [
        77003233
      ]
    },
    "std::__detail::_Prime_rehash_policy::_M_next_bkt#1": {
      "amount": [
        77171040
      ]
    },
    "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>#4": {
      "amount": [
        38324014
      ]
    },
    "std::forward<bool>#2": {
      "amount": [
        38993593
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node#4": {
      "amount": [
        38689009
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node#5": {
      "amount": [
        38250634
      ]
    },
    "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_AllocNode#1": {
      "amount": [
        38241517
      ]
    },
    "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator#1": {
      "amount": [
        39145837
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable#4": {
      "amount": [
        75122176
      ]
    },
    "std::__detail::_Hash_node_base::_Hash_node_base#1": {
      "amount": [
        76365647
      ]
    },
    "std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::basic_istringstream#0": {
      "amount": [
        76724789
      ]
    },
    "std::getline<char, std::char_traits<char>, std::allocator<char> >#2": {
      "amount": [
        38980691
      ]
    },
    "std::locale::locale#1": {
      "amount": [
        38096599
      ]
    },
    "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >#1": {
      "amount": [
        39084896
      ]
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*#6": {
      "amount": [
        76790771
      ]
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v#4": {
      "amount": [
        38350701
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#7": {
      "amount": [
        22211894
      ]
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr#6": {
      "amount": [
        38152664
      ]
    },
    "std::operator< <char, std::char_traits<char>, std::allocator<char> >#3": {
      "amount": [
        38532749
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin#3": {
      "amount": [
        38251667
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_begin#5": {
      "amount": [
        38945799
      ]
    },
    "std::__detail::_Prime_rehash_policy::_Prime_rehash_policy#2": {
      "amount": [
        38094738
      ]
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set#0": {
      "amount": [
        39059716
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable#1": {
      "amount": [
        38832588
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets#4": {
      "amount": [
        37596659
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_buckets#1": {
      "amount": [
        76269807
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes#3": {
      "amount": [
        38320013
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node#3": {
      "amount": [
        77325921
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#8": {
      "amount": [
        38789083
      ]
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >#1": {
      "amount": [
        38891374
      ]
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr#7": {
      "amount": [
        38168303
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#9": {
      "amount": [
        38055488
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr#2": {
      "amount": [
        38537944
      ]
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::deallocate#2": {
      "amount": [
        37270107
      ]
    },
    "cfree@GLIBC_2.2.5#2": {
      "amount": [
        38921614
      ]
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get#6": {
      "amount": [
        47668998
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr#3": {
      "amount": [
        38086441
      ]
    },
    "switch_cost_similarity#2": {
      "amount": [
        38518973
      ]
    },
    "[libstdc++.so.6.0.30]#6": {
      "amount": [
        36504092
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#5": {
      "amount": [
        38127184
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#6": {
      "amount": [
        115879522
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index#5": {
      "amount": [
        38670773
      ]
    },
    "std::__detail::_Mod_range_hashing::operator#11": {
      "amount": [
        114633532
      ]
    },
    "std::__detail::_Mod_range_hashing::operator#12": {
      "amount": [
        38550050
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node#5": {
      "amount": [
        76174428
      ]
    },
    "std::__detail::_Mod_range_hashing::operator#13": {
      "amount": [
        76122835
      ]
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index#7": {
      "amount": [
        38986821
      ]
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate#1": {
      "amount": [
        38904577
      ]
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::_Node_iterator#3": {
      "amount": [
        38226840
      ]
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Hash_node#2": {
      "amount": [
        38304983
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#6": {
      "amount": [
        38960243
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#9": {
      "amount": [
        38100838
      ]
    },
    "std::__detail::_Hash_node_base::_Hash_node_base#2": {
      "amount": [
        38049449
      ]
    },
    "std::__to_address<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >#3": {
      "amount": [
        38369466
      ]
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate#1": {
      "amount": [
        38836114
      ]
    },
    "malloc#1": {
      "amount": [
        38124055
      ]
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#2": {
      "amount": [
        77123534
      ]
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#2": {
      "amount": [
        76577229
      ]
    },
    "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator#2": {
      "amount": [
        38070194
      ]
    },
    "std::__detail::_Prime_rehash_policy::_M_need_rehash#4": {
      "amount": [
        38330808
      ]
    },
    "std::__detail::_Prime_rehash_policy::_M_next_bkt#2": {
      "amount": [
        38691243
      ]
    },
    "std::forward<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&>#1": {
      "amount": [
        38798780
      ]
    },
    "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator#3": {
      "amount": [
        38216635
      ]
    },
    "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>#5": {
      "amount": [
        38062800
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node#6": {
      "amount": [
        38228269
      ]
    },
    "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_conjure_hashtable#1": {
      "amount": [
        38074193
      ]
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set#0": {
      "amount": [
        38298868
      ]
    },
    "std::__detail::_Hash_node_base::_Hash_node_base#3": {
      "amount": [
        38207113
      ]
    },
    "std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::basic_istringstream#1": {
      "amount": [
        38433646
      ]
    },
    "std::basic_ios<char, std::char_traits<char> >::operator bool#2": {
      "amount": [
        38094174
      ]
    },
    "std::getline<char, std::char_traits<char>, std::allocator<char> >#3": {
      "amount": [
        38212530
      ]
    },
    "std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::insert_iterator#2": {
      "amount": [
        76388433
      ]
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*#7": {
      "amount": [
        38901804
      ]
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v#5": {
      "amount": [
        38792254
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#10": {
      "amount": [
        37624109
      ]
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr#8": {
      "amount": [
        38172766
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#11": {
      "amount": [
        38193566
      ]
    },
    "std::__detail::operator!=#3": {
      "amount": [
        38205135
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable#5": {
      "amount": [
        38163640
      ]
    },
    "std::__detail::_Hash_node_base::_Hash_node_base#4": {
      "amount": [
        38325524
      ]
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate#0": {
      "amount": [
        38669387
      ]
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate#1": {
      "amount": [
        38035978
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node#4": {
      "amount": [
        38474670
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr#4": {
      "amount": [
        38407845
      ]
    },
    "cfree@GLIBC_2.2.5#3": {
      "amount": [
        77135786
      ]
    },
    "std::__addressof<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >#1": {
      "amount": [
        37736992
      ]
    },
    "std::pointer_traits<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>*>::pointer_to#1": {
      "amount": [
        38180251
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes#4": {
      "amount": [
        38133528
      ]
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::end#1": {
      "amount": [
        38202194
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#7": {
      "amount": [
        76849235
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index#6": {
      "amount": [
        38296137
      ]
    },
    "std::__detail::_Mod_range_hashing::operator#14": {
      "amount": [
        38284933
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node#7": {
      "amount": [
        38021023
      ]
    },
    "std::__detail::_Mod_range_hashing::operator#15": {
      "amount": [
        38896953
      ]
    },
    "std::__detail::_Mod_range_hashing::operator#16": {
      "amount": [
        37911721
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_uses_single_bucket#2": {
      "amount": [
        38158366
      ]
    },
    "std::__detail::_Node_iterator_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Node_iterator_base#1": {
      "amount": [
        38254324
      ]
    },
    "operator new#6": {
      "amount": [
        36190610
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#7": {
      "amount": [
        38141591
      ]
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#3": {
      "amount": [
        37750691
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string#2": {
      "amount": [
        38144385
      ]
    },
    "std::__detail::_Identity::operator#3": {
      "amount": [
        38127003
      ]
    },
    "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>#6": {
      "amount": [
        38291505
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node#6": {
      "amount": [
        34464222
      ]
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code#5": {
      "amount": [
        38873546
      ]
    },
    "std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::basic_istringstream#2": {
      "amount": [
        39063186
      ]
    },
    "std::getline<char, std::char_traits<char>, std::allocator<char> >#4": {
      "amount": [
        32610173
      ]
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#6": {
      "amount": [
        37944993
      ]
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v#6": {
      "amount": [
        43308365
      ]
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#10": {
      "amount": [
        38111664
      ]
    },
    "std::_Hash_bytes#6": {
      "amount": [
        38209082
      ]
    },
    "std::__detail::_Node_iterator_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Node_iterator_base#2": {
      "amount": [
        37917569
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable#2": {
      "amount": [
        37891025
      ]
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate#1": {
      "amount": [
        38203011
      ]
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate#2": {
      "amount": [
        38057920
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear#2": {
      "amount": [
        38223956
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes#5": {
      "amount": [
        38699393
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node#5": {
      "amount": [
        38737528
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr#5": {
      "amount": [
        38448355
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes#6": {
      "amount": [
        38135997
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#8": {
      "amount": [
        37213504
      ]
    },
    "std::__detail::_Mod_range_hashing::operator#17": {
      "amount": [
        38247352
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin#3": {
      "amount": [
        74817687
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_node_allocator#3": {
      "amount": [
        37847020
      ]
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate#2": {
      "amount": [
        37495286
      ]
    },
    "operator new#7": {
      "amount": [
        38153788
      ]
    },
    "std::__detail::_Identity::operator#4": {
      "amount": [
        38209126
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable#6": {
      "amount": [
        38149167
      ]
    },
    "std::ios_base::ios_base#1": {
      "amount": [
        38046001
      ]
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin#1": {
      "amount": [
        38327327
      ]
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::end#2": {
      "amount": [
        38300470
      ]
    },
    "std::addressof<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >#0": {
      "amount": [
        38153153
      ]
    },
    "std::addressof<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >#1": {
      "amount": [
        39035959
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin#4": {
      "amount": [
        38178332
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux#2": {
      "amount": [
        38318241
      ]
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Hash_node#3": {
      "amount": [
        38164483
      ]
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#3": {
      "amount": [
        38925195
      ]
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*#8": {
      "amount": [
        35290300
      ]
    },
    "std::operator< <char, std::char_traits<char>, std::allocator<char> >#4": {
      "amount": [
        37348196
      ]
    },
    "std::__detail::operator!=#4": {
      "amount": [
        29385395
      ]
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::_Node_iterator#4": {
      "amount": [
        38200107
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets#5": {
      "amount": [
        38214716
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#9": {
      "amount": [
        37172734
      ]
    },
    "std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >#0": {
      "amount": [
        36629391
      ]
    },
    "std::basic_ios<char, std::char_traits<char> >::operator bool#3": {
      "amount": [
        38166073
      ]
    },
    "std::__detail::_Prime_rehash_policy::_Prime_rehash_policy#3": {
      "amount": [
        38248347
      ]
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#10": {
      "amount": [
        38894298
      ]
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#8": {
      "amount": [
        38110999
      ]
    },
    "std::basic_ios<char, std::char_traits<char> >::operator bool#4": {
      "amount": [
        272413
      ]
    },
    "__memcmp_avx2_movbe#0": {
      "amount": [
        345008477
      ]
    },
    "__memmove_avx_unaligned_erms#1": {
      "amount": [
        191654495
      ]
    },
    "_int_free#1": {
      "amount": [
        154328922
      ]
    },
    "_int_malloc#0": {
      "amount": [
        77235925
      ]
    },
    "_start#0": {
      "amount": [
        2
      ]
    },
    "cfree@GLIBC_2.2.5#4": {
      "amount": [
        189231675
      ]
    },
    "malloc#2": {
      "amount": [
        584388434
      ]
    },
    "std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::basic_istringstream#3": {
      "amount": [
        76391533
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append#1": {
      "amount": [
        115307619
      ]
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare#1": {
      "amount": [
        166009342
      ]
    },
    "std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::_M_sync#0": {
      "amount": [
        37682941
      ]
    },
    "std::basic_ios<char, std::char_traits<char> >::init#1": {
      "amount": [
        76570928
      ]
    },
    "std::getline<char, std::char_traits<char>, std::allocator<char> >#5": {
      "amount": [
        230689922
      ]
    },
    "std::istream::sentry::sentry#1": {
      "amount": [
        114644484
      ]
    }
  },
  "resource_type_map": {
    "[libstdc++.so.6.0.30]#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "[libstdc++.so.6.0.30]#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "[libstdc++.so.6.0.30]#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "__memmove_avx_unaligned_erms#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>"
    },
    "std::basic_ios<char, std::char_traits<char> >::_M_cache_locale#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::basic_ios<char, std::char_traits<char> >::_M_cache_locale"
    },
    "std::has_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::has_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >"
    },
    "std::ios_base::_M_init#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::ios_base::_M_init"
    },
    "std::locale::id::_M_id#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::locale::id::_M_id"
    },
    "std::locale::locale#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::locale::locale"
    },
    "std::locale::operator=#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::locale::operator="
    },
    "std::locale::~locale#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::locale::~locale"
    },
    "std::use_facet<std::ctype<char> >#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::use_facet<std::ctype<char> >"
    },
    "std::use_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::use_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >"
    },
    "__GI___libc_open#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        }
      ],
      "uid": "__GI___libc_open"
    },
    "dl_main#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "_dl_sysdep_start"
        }
      ],
      "uid": "dl_main"
    },
    "_int_free#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        }
      ],
      "uid": "_int_free"
    },
    "[libstdc++.so.6.0.30]#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "__memchr_avx2#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "__memchr_avx2"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append"
    },
    "std::basic_ios<char, std::char_traits<char> >::init#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::basic_ios<char, std::char_traits<char> >::init"
    },
    "std::getline<char, std::char_traits<char>, std::allocator<char> >#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::getline<char, std::char_traits<char>, std::allocator<char> >"
    },
    "std::istream::sentry::sentry#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::istream::sentry::sentry"
    },
    "[libstdc++.so.6.0.30]#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "virtual thunk to std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "std::basic_ios<char, std::char_traits<char> >::_M_cache_locale#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "virtual thunk to std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::basic_ios<char, std::char_traits<char> >::_M_cache_locale"
    },
    "std::use_facet<std::ctype<char> >#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "virtual thunk to std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::use_facet<std::ctype<char> >"
    },
    "std::use_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "virtual thunk to std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::use_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >"
    },
    "std::use_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "[unknown]"
        },
        {
          "func": "virtual thunk to std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream"
        },
        {
          "func": "[unknown]"
        }
      ],
      "uid": "std::use_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >"
    },
    "computeTransformationCost#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "computeTransformationCost#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "computeTransformationCost#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "computeTransformationCost#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "computeTransformationCost"
    },
    "split_to_words#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "split_to_words"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node"
    },
    "std::_Hash_bytes#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
        },
        {
          "func": "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator"
        }
      ],
      "uid": "std::_Hash_bytes"
    },
    "std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::insert_iterator#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::insert_iterator"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size"
    },
    "std::__detail::_Mod_range_hashing::operator#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Mod_range_hashing::operator"
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
    },
    "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
    },
    "std::__detail::_Identity::operator#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Identity::operator"
    },
    "std::basic_ios<char, std::char_traits<char> >::operator bool#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::basic_ios<char, std::char_traits<char> >::operator bool"
    },
    "std::getline<char, std::char_traits<char>, std::allocator<char> >#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::getline<char, std::char_traits<char>, std::allocator<char> >"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr"
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
        }
      ],
      "uid": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        }
      ],
      "uid": "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr"
    },
    "std::initializer_list<double>::end#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        }
      ],
      "uid": "std::initializer_list<double>::end"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        },
        {
          "func": "std::min_element<double const*>"
        },
        {
          "func": "std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::operator==<char>#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::operator==<char>"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
    },
    "std::__detail::_Mod_range_hashing::operator#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Mod_range_hashing::operator"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node"
    },
    "[compare_traces]#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node"
        },
        {
          "func": "std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, true, true> >::_M_equals"
        },
        {
          "func": "std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator"
        }
      ],
      "uid": "[compare_traces]"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::data#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node"
        },
        {
          "func": "std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, true, true> >::_M_equals"
        },
        {
          "func": "std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::data"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin"
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
    },
    "std::__detail::_Mod_range_hashing::operator#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Mod_range_hashing::operator"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "std::__detail::_Hash_node_base::_Hash_node_base#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Hash_node"
        }
      ],
      "uid": "std::__detail::_Hash_node_base::_Hash_node_base"
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_node_allocator"
        }
      ],
      "uid": "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get"
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get"
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::allocate#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::allocate"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string"
    },
    "std::forward<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::forward<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
    },
    "std::_Hash_bytes#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
        },
        {
          "func": "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator"
        }
      ],
      "uid": "std::_Hash_bytes"
    },
    "std::__detail::_Identity::operator#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Identity::operator"
    },
    "std::__detail::_Prime_rehash_policy::_M_need_rehash#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Prime_rehash_policy::_M_need_rehash"
    },
    "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node"
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_Hashtable_ebo_helper#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
        }
      ],
      "uid": "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_Hashtable_ebo_helper"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        }
      ],
      "uid": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
        }
      ],
      "uid": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
    },
    "std::__detail::_Node_iterator_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_incr#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator++"
        }
      ],
      "uid": "std::__detail::_Node_iterator_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_incr"
    },
    "std::__detail::operator!=#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "std::__detail::operator!="
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_begin#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_begin"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_Hashtable_ebo_helper#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
        }
      ],
      "uid": "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_Hashtable_ebo_helper"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_uses_single_bucket#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_uses_single_bucket"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_begin#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_begin"
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        }
      ],
      "uid": "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next"
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        }
      ],
      "uid": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr"
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_node_allocator"
        }
      ],
      "uid": "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_node_allocator#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_node_allocator"
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >"
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
    },
    "std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::~allocator#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::~_Hashtable_alloc"
        },
        {
          "func": "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::~_Hashtable_ebo_helper"
        }
      ],
      "uid": "std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::~allocator"
    },
    "std::min_element<double const*>#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "std::min<double>"
        }
      ],
      "uid": "std::min_element<double const*>"
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size"
    },
    "split_to_words#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "split_to_words"
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        }
      ],
      "uid": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
    },
    "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        }
      ],
      "uid": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
    },
    "std::__detail::_Mod_range_hashing::operator#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Mod_range_hashing::operator"
    },
    "std::__detail::_Mod_range_hashing::operator#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Mod_range_hashing::operator"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node"
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
    },
    "std::__detail::_Mod_range_hashing::operator#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Mod_range_hashing::operator"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin"
    },
    "std::__detail::_Mod_range_hashing::operator#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Mod_range_hashing::operator"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux"
    },
    "__memset_avx2_unaligned_erms#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets"
        }
      ],
      "uid": "__memset_avx2_unaligned_erms"
    },
    "std::allocator<std::__detail::_Hash_node_base*>::~allocator#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets"
        }
      ],
      "uid": "std::allocator<std::__detail::_Hash_node_base*>::~allocator"
    },
    "std::__detail::_Prime_rehash_policy::_M_state#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        }
      ],
      "uid": "std::__detail::_Prime_rehash_policy::_M_state"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "operator new#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "operator new"
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Hash_node#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Hash_node"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
        },
        {
          "func": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr"
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::allocate#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::allocate"
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
    },
    "std::_Hash_impl::hash#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
        }
      ],
      "uid": "std::_Hash_impl::hash"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length"
    },
    "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
        }
      ],
      "uid": "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator"
    },
    "std::_Hash_bytes#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
        },
        {
          "func": "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator"
        }
      ],
      "uid": "std::_Hash_bytes"
    },
    "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>"
    },
    "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_AllocNode#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_AllocNode"
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
    },
    "std::basic_ios<char, std::char_traits<char> >::operator bool#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::basic_ios<char, std::char_traits<char> >::operator bool"
    },
    "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        }
      ],
      "uid": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v"
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        }
      ],
      "uid": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr"
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator++"
        },
        {
          "func": "std::__detail::_Node_iterator_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_incr"
        }
      ],
      "uid": "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next"
    },
    "std::__detail::operator!=#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "std::__detail::operator!="
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_begin#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_begin"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        }
      ],
      "uid": "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
        },
        {
          "func": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr"
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::deallocate#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::deallocate"
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::deallocate#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::deallocate"
    },
    "std::__addressof<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
        },
        {
          "func": "std::pointer_traits<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>*>::pointer_to"
        }
      ],
      "uid": "std::__addressof<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >"
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_node_allocator"
        }
      ],
      "uid": "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get"
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >"
    },
    "std::pointer_traits<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>*>::pointer_to#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        }
      ],
      "uid": "std::pointer_traits<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>*>::pointer_to"
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::~_Hashtable_ebo_helper#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::~_Hashtable_alloc"
        }
      ],
      "uid": "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::~_Hashtable_ebo_helper"
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::~_Hashtable_ebo_helper#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        }
      ],
      "uid": "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::~_Hashtable_ebo_helper"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size"
    },
    "switch_cost_similarity#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "switch_cost_similarity"
    },
    "[compare_traces]#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "[compare_traces]"
    },
    "cfree@GLIBC_2.2.5#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "split_to_words#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "split_to_words"
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        }
      ],
      "uid": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
    },
    "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        }
      ],
      "uid": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
    },
    "std::__detail::_Mod_range_hashing::operator#7": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Mod_range_hashing::operator"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node"
    },
    "std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, true, true> >::_M_equals#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node"
        }
      ],
      "uid": "std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, true, true> >::_M_equals"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node"
        },
        {
          "func": "std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, true, true> >::_M_equals"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr"
    },
    "std::forward<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node"
        },
        {
          "func": "std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, true, true> >::_M_equals"
        },
        {
          "func": "std::__detail::_Identity::operator"
        }
      ],
      "uid": "std::forward<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin"
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin"
        }
      ],
      "uid": "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next"
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        }
      ],
      "uid": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_store_code#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        }
      ],
      "uid": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_store_code"
    },
    "std::__detail::_Node_iterator_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Node_iterator_base#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::_Node_iterator"
        }
      ],
      "uid": "std::__detail::_Node_iterator_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Node_iterator_base"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_node_allocator#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_node_allocator"
    },
    "std::__to_address<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::__to_address<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >"
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::allocate#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::allocate"
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::_M_max_size#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate"
        },
        {
          "func": "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::_M_max_size"
    },
    "operator new#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "operator new#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "operator new"
    },
    "operator new#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "operator new"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string"
    },
    "std::forward<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::forward<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash"
    },
    "[compare_traces]#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
        }
      ],
      "uid": "[compare_traces]"
    },
    "std::__detail::_Hashtable_ebo_helper<1, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true>::_M_cget#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash"
        }
      ],
      "uid": "std::__detail::_Hashtable_ebo_helper<1, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true>::_M_cget"
    },
    "std::_Hash_bytes#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
        },
        {
          "func": "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator"
        }
      ],
      "uid": "std::_Hash_bytes"
    },
    "std::__detail::_Prime_rehash_policy::_M_need_rehash#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Prime_rehash_policy::_M_need_rehash"
    },
    "std::__detail::_Prime_rehash_policy::_M_state#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Prime_rehash_policy::_M_state"
    },
    "std::forward<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&>#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::forward<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&>"
    },
    "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>"
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_Hashtable_ebo_helper#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_Hashtable_alloc"
        }
      ],
      "uid": "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_Hashtable_ebo_helper"
    },
    "std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable_base#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
        }
      ],
      "uid": "std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable_base"
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true>::_Hashtable_ebo_helper#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
        },
        {
          "func": "std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable_base"
        }
      ],
      "uid": "std::__detail::_Hashtable_ebo_helper<0, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true>::_Hashtable_ebo_helper"
    },
    "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        }
      ],
      "uid": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare"
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        }
      ],
      "uid": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v"
    },
    "std::operator< <char, std::char_traits<char>, std::allocator<char> >#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        }
      ],
      "uid": "std::operator< <char, std::char_traits<char>, std::allocator<char> >"
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
    },
    "std::__detail::operator!=#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "std::__detail::operator!="
    },
    "std::operator< <char, std::char_traits<char>, std::allocator<char> >#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "std::operator< <char, std::char_traits<char>, std::allocator<char> >"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin"
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::_Node_iterator#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin"
        }
      ],
      "uid": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::_Node_iterator"
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size"
    },
    "std::__detail::_Prime_rehash_policy::_Prime_rehash_policy#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
        }
      ],
      "uid": "std::__detail::_Prime_rehash_policy::_Prime_rehash_policy"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_begin#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_begin"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_buckets#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_buckets"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        }
      ],
      "uid": "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next"
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        }
      ],
      "uid": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_node_allocator#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_node_allocator"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::~_Hashtable_alloc#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::~_Hashtable_alloc"
    },
    "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_conjure_hashtable#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        }
      ],
      "uid": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_conjure_hashtable"
    },
    "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        }
      ],
      "uid": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
    },
    "std::__detail::_Mod_range_hashing::operator#8": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Mod_range_hashing::operator"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node"
    },
    "std::char_traits<char>::compare#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node"
        },
        {
          "func": "std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, true, true> >::_M_equals"
        },
        {
          "func": "std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator"
        },
        {
          "func": "std::operator==<char>"
        }
      ],
      "uid": "std::char_traits<char>::compare"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
    },
    "std::__detail::_Mod_range_hashing::operator#9": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Mod_range_hashing::operator"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::~_Scoped_node#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::~_Scoped_node"
    },
    "operator new#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        }
      ],
      "uid": "operator new"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr"
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#7": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
        },
        {
          "func": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr"
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_node_allocator"
        }
      ],
      "uid": "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get"
    },
    "std::__to_address<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::__to_address<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >"
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::allocate#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::allocate"
    },
    "malloc#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate"
        }
      ],
      "uid": "malloc"
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash"
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
    },
    "[compare_traces]#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
        }
      ],
      "uid": "[compare_traces]"
    },
    "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
        }
      ],
      "uid": "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator"
    },
    "std::_Hash_bytes#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
        },
        {
          "func": "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator"
        }
      ],
      "uid": "std::_Hash_bytes"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::_Node_iterator#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::_Node_iterator"
    },
    "std::__detail::_Prime_rehash_policy::_M_need_rehash#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Prime_rehash_policy::_M_need_rehash"
    },
    "std::__detail::_Prime_rehash_policy::_M_next_bkt#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Prime_rehash_policy::_M_next_bkt"
    },
    "std::forward<bool>#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::forward<bool>"
    },
    "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>"
    },
    "std::forward<bool>#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>"
        }
      ],
      "uid": "std::forward<bool>"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_Hashtable_alloc#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_Hashtable_alloc"
    },
    "std::__detail::_Prime_rehash_policy::_Prime_rehash_policy#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
        }
      ],
      "uid": "std::__detail::_Prime_rehash_policy::_Prime_rehash_policy"
    },
    "std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream"
    },
    "std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::insert_iterator#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::inserter<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >"
        }
      ],
      "uid": "std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::insert_iterator"
    },
    "std::ios_base::ios_base#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::ios_base::ios_base"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        }
      ],
      "uid": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v"
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        }
      ],
      "uid": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
        }
      ],
      "uid": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v"
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v"
        }
      ],
      "uid": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr"
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
    },
    "std::operator< <char, std::char_traits<char>, std::allocator<char> >#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "std::operator< <char, std::char_traits<char>, std::allocator<char> >"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_begin#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_begin"
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::_Node_iterator#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin"
        }
      ],
      "uid": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::_Node_iterator"
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::end#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::end"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::end#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::end"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::end"
    },
    "__memset_avx2_unaligned_erms#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        }
      ],
      "uid": "__memset_avx2_unaligned_erms"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_uses_single_bucket#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_uses_single_bucket"
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_buckets"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_node_allocator"
        }
      ],
      "uid": "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get"
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_buckets"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate"
    },
    "std::allocator<std::__detail::_Hash_node_base*>::~allocator#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        }
      ],
      "uid": "std::allocator<std::__detail::_Hash_node_base*>::~allocator"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        }
      ],
      "uid": "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_M_next"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#8": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
        },
        {
          "func": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr"
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::deallocate#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::deallocate"
    },
    "[compare_traces]#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::deallocate"
        }
      ],
      "uid": "[compare_traces]"
    },
    "cfree@GLIBC_2.2.5#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::deallocate#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::deallocate"
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::~_Hashtable_alloc#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::~_Hashtable_alloc"
    },
    "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[]"
    },
    "switch_cost_similarity#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "switch_cost_similarity"
    },
    "[compare_traces]#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "[compare_traces]"
    },
    "[libstdc++.so.6.0.30]#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "split_to_words#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "split_to_words"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        }
      ],
      "uid": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
    },
    "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        }
      ],
      "uid": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node#7": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node#8": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_node"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
    },
    "std::__detail::_Mod_range_hashing::operator#10": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Mod_range_hashing::operator"
    },
    "__memset_avx2_unaligned_erms#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets"
        }
      ],
      "uid": "__memset_avx2_unaligned_erms"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets"
    },
    "std::__detail::_Prime_rehash_policy::_M_state#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        }
      ],
      "uid": "std::__detail::_Prime_rehash_policy::_M_state"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Hash_node#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Hash_node"
    },
    "std::__to_address<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::__to_address<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >"
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate"
    },
    "operator new#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::forward<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::forward<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "std::forward<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        }
      ],
      "uid": "std::forward<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "std::__detail::_Hashtable_ebo_helper<1, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true>::_M_cget#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash"
        }
      ],
      "uid": "std::__detail::_Hashtable_ebo_helper<1, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true>::_M_cget"
    },
    "std::_Hash_bytes#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
        },
        {
          "func": "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator"
        }
      ],
      "uid": "std::_Hash_bytes"
    },
    "std::__detail::_Identity::operator#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Identity::operator"
    },
    "std::__detail::_Prime_rehash_policy::_M_need_rehash#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Prime_rehash_policy::_M_need_rehash"
    },
    "std::__detail::_Prime_rehash_policy::_M_next_bkt#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Prime_rehash_policy::_M_next_bkt"
    },
    "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>"
    },
    "std::forward<bool>#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>"
        }
      ],
      "uid": "std::forward<bool>"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node"
    },
    "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_AllocNode#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_AllocNode"
    },
    "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
    },
    "std::__detail::_Hash_node_base::_Hash_node_base#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
        }
      ],
      "uid": "std::__detail::_Hash_node_base::_Hash_node_base"
    },
    "std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::basic_istringstream#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::basic_istringstream"
    },
    "std::getline<char, std::char_traits<char>, std::allocator<char> >#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::getline<char, std::char_traits<char>, std::allocator<char> >"
    },
    "std::locale::locale#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::locale::locale"
    },
    "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        }
      ],
      "uid": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
        }
      ],
      "uid": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#7": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr"
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
        }
      ],
      "uid": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
    },
    "std::operator< <char, std::char_traits<char>, std::allocator<char> >#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "std::operator< <char, std::char_traits<char>, std::allocator<char> >"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_begin#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_begin"
    },
    "std::__detail::_Prime_rehash_policy::_Prime_rehash_policy#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
        }
      ],
      "uid": "std::__detail::_Prime_rehash_policy::_Prime_rehash_policy"
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_buckets#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_buckets"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#8": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr"
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >"
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr#7": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        }
      ],
      "uid": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#9": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::deallocate#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::deallocate"
    },
    "cfree@GLIBC_2.2.5#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_node_allocator"
        }
      ],
      "uid": "std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >, true>::_M_get"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
    },
    "switch_cost_similarity#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "switch_cost_similarity"
    },
    "[libstdc++.so.6.0.30]#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "[libstdc++.so.6.0.30]"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
    },
    "std::__detail::_Mod_range_hashing::operator#11": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Mod_range_hashing::operator"
    },
    "std::__detail::_Mod_range_hashing::operator#12": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Mod_range_hashing::operator"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
    },
    "std::__detail::_Mod_range_hashing::operator#13": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Mod_range_hashing::operator"
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index#7": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate"
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::_Node_iterator#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        }
      ],
      "uid": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::_Node_iterator"
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Hash_node#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        }
      ],
      "uid": "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Hash_node"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#9": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr"
    },
    "std::__detail::_Hash_node_base::_Hash_node_base#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::__detail::_Hash_node_base::_Hash_node_base"
    },
    "std::__to_address<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::__to_address<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >"
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate"
    },
    "malloc#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate"
        }
      ],
      "uid": "malloc"
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
        }
      ],
      "uid": "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator"
    },
    "std::__detail::_Prime_rehash_policy::_M_need_rehash#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Prime_rehash_policy::_M_need_rehash"
    },
    "std::__detail::_Prime_rehash_policy::_M_next_bkt#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Prime_rehash_policy::_M_next_bkt"
    },
    "std::forward<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&>#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::forward<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&>"
    },
    "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator"
    },
    "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
    },
    "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_conjure_hashtable#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_conjure_hashtable"
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        }
      ],
      "uid": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
    },
    "std::__detail::_Hash_node_base::_Hash_node_base#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
        }
      ],
      "uid": "std::__detail::_Hash_node_base::_Hash_node_base"
    },
    "std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::basic_istringstream#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::basic_istringstream"
    },
    "std::basic_ios<char, std::char_traits<char> >::operator bool#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::basic_ios<char, std::char_traits<char> >::operator bool"
    },
    "std::getline<char, std::char_traits<char>, std::allocator<char> >#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::getline<char, std::char_traits<char>, std::allocator<char> >"
    },
    "std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::insert_iterator#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::inserter<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >"
        }
      ],
      "uid": "std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::insert_iterator"
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*#7": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        }
      ],
      "uid": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
        }
      ],
      "uid": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#10": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr"
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr#8": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v"
        }
      ],
      "uid": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr#11": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_ptr"
    },
    "std::__detail::operator!=#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "std::__detail::operator!="
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
    },
    "std::__detail::_Hash_node_base::_Hash_node_base#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
        }
      ],
      "uid": "std::__detail::_Hash_node_base::_Hash_node_base"
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_buckets"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate"
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
    },
    "cfree@GLIBC_2.2.5#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::deallocate"
        }
      ],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "std::__addressof<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
        },
        {
          "func": "std::pointer_traits<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>*>::pointer_to"
        },
        {
          "func": "std::addressof<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >"
        }
      ],
      "uid": "std::__addressof<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >"
    },
    "std::pointer_traits<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>*>::pointer_to#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        }
      ],
      "uid": "std::pointer_traits<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>*>::pointer_to"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::end#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        }
      ],
      "uid": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::end"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#7": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
    },
    "std::__detail::_Mod_range_hashing::operator#14": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Mod_range_hashing::operator"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node#7": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
    },
    "std::__detail::_Mod_range_hashing::operator#15": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Mod_range_hashing::operator"
    },
    "std::__detail::_Mod_range_hashing::operator#16": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Mod_range_hashing::operator"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_uses_single_bucket#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_uses_single_bucket"
    },
    "std::__detail::_Node_iterator_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Node_iterator_base#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::_Node_iterator"
        }
      ],
      "uid": "std::__detail::_Node_iterator_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Node_iterator_base"
    },
    "operator new#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        }
      ],
      "uid": "operator new"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#7": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string"
    },
    "std::__detail::_Identity::operator#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Identity::operator"
    },
    "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool>::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>&, bool, true>"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Scoped_node::_Scoped_node"
    },
    "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
    },
    "std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::basic_istringstream#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::basic_istringstream"
    },
    "std::getline<char, std::char_traits<char>, std::allocator<char> >#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::getline<char, std::char_traits<char>, std::allocator<char> >"
    },
    "__gnu_cxx::__ops::_Iter_less_iter::operator#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "__gnu_cxx::__ops::_Iter_less_iter::operator"
    },
    "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        }
      ],
      "uid": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v"
    },
    "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr#10": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_v"
        },
        {
          "func": "std::__detail::_Hash_node_value_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_valptr"
        }
      ],
      "uid": "__gnu_cxx::__aligned_buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_addr"
    },
    "std::_Hash_bytes#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::operator="
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code"
        },
        {
          "func": "std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator"
        }
      ],
      "uid": "std::_Hash_bytes"
    },
    "std::__detail::_Node_iterator_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Node_iterator_base#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin"
        },
        {
          "func": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::_Node_iterator"
        }
      ],
      "uid": "std::__detail::_Node_iterator_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Node_iterator_base"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_buckets"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate"
    },
    "__gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_buckets"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate"
        }
      ],
      "uid": "__gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#8": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
    },
    "std::__detail::_Mod_range_hashing::operator#17": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_bucket_index"
        },
        {
          "func": "std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_Identity, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index"
        }
      ],
      "uid": "std::__detail::_Mod_range_hashing::operator"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_node_allocator#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_node_allocator"
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate"
    },
    "operator new#7": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
        },
        {
          "func": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::allocate"
        }
      ],
      "uid": "operator new"
    },
    "std::__detail::_Identity::operator#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        }
      ],
      "uid": "std::__detail::_Identity::operator"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable#6": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
    },
    "std::ios_base::ios_base#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::ios_base::ios_base"
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin"
    },
    "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::end#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::end"
    },
    "std::addressof<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
        }
      ],
      "uid": "std::addressof<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >"
    },
    "std::addressof<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_nodes"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_deallocate_node_ptr"
        },
        {
          "func": "std::pointer_traits<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>*>::pointer_to"
        }
      ],
      "uid": "std::addressof<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_bucket_begin"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux"
    },
    "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Hash_node#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        }
      ],
      "uid": "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>::_Hash_node"
    },
    "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        }
      ],
      "uid": "std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*#8": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        }
      ],
      "uid": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::operator*"
    },
    "std::operator< <char, std::char_traits<char>, std::allocator<char> >#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        },
        {
          "func": "__gnu_cxx::__ops::_Iter_less_iter::operator"
        }
      ],
      "uid": "std::operator< <char, std::char_traits<char>, std::allocator<char> >"
    },
    "std::__detail::operator!=#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >"
        },
        {
          "func": "std::__set_intersection<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, std::insert_iterator<std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>"
        }
      ],
      "uid": "std::__detail::operator!="
    },
    "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::_Node_iterator#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::begin"
        }
      ],
      "uid": "std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>::_Node_iterator"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_deallocate_buckets"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#9": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
    },
    "std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets"
        },
        {
          "func": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets"
        }
      ],
      "uid": "std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> >"
    },
    "std::basic_ios<char, std::char_traits<char> >::operator bool#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        }
      ],
      "uid": "std::basic_ios<char, std::char_traits<char> >::operator bool"
    },
    "std::__detail::_Prime_rehash_policy::_Prime_rehash_policy#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unordered_set"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable"
        }
      ],
      "uid": "std::__detail::_Prime_rehash_policy::_Prime_rehash_policy"
    },
    "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >#10": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        }
      ],
      "uid": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
    },
    "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>#8": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "findBestCorrespondingTraces"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "computeTransformationCost"
        },
        {
          "func": "switch_cost_similarity"
        },
        {
          "func": "split_to_words"
        },
        {
          "func": "std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::insert"
        },
        {
          "func": "std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert"
        },
        {
          "func": "std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >"
        },
        {
          "func": "std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::operator"
        }
      ],
      "uid": "std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>"
    },
    "std::basic_ios<char, std::char_traits<char> >::operator bool#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [
        {
          "func": "__libc_start_call_main"
        },
        {
          "func": "main"
        },
        {
          "func": "readTraces"
        }
      ],
      "uid": "std::basic_ios<char, std::char_traits<char> >::operator bool"
    },
    "__memcmp_avx2_movbe#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [],
      "uid": "__memcmp_avx2_movbe"
    },
    "__memmove_avx_unaligned_erms#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [],
      "uid": "__memmove_avx_unaligned_erms"
    },
    "_int_free#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [],
      "uid": "_int_free"
    },
    "_int_malloc#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [],
      "uid": "_int_malloc"
    },
    "_start#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [],
      "uid": "_start"
    },
    "cfree@GLIBC_2.2.5#4": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [],
      "uid": "cfree@GLIBC_2.2.5"
    },
    "malloc#2": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [],
      "uid": "malloc"
    },
    "std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::basic_istringstream#3": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [],
      "uid": "std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::basic_istringstream"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append"
    },
    "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [],
      "uid": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare"
    },
    "std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::_M_sync#0": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [],
      "uid": "std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::_M_sync"
    },
    "std::basic_ios<char, std::char_traits<char> >::init#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [],
      "uid": "std::basic_ios<char, std::char_traits<char> >::init"
    },
    "std::getline<char, std::char_traits<char>, std::allocator<char> >#5": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [],
      "uid": "std::getline<char, std::char_traits<char>, std::allocator<char> >"
    },
    "std::istream::sentry::sentry#1": {
      "command": "compare_traces",
      "time": 8.090215682983398,
      "trace": [],
      "uid": "std::istream::sentry::sentry"
    }
  },
  "models": [],
  "origin": "0627dc36cbc4bca148725d8aab29eef5ea886596",
  "header": {
    "type": "time",
    "cmd": "./compare_traces inputs/minimal-baseline.txt inputs/minimal-target.txt",
    "workload": "",
    "units": {
      "time": "sample"
    }
  },
  "machine": {
    "architecture": "x86_64",
    "system": "Linux",
    "release": "5.15.146.1-microsoft-standard-WSL2",
    "host": "dellion",
    "cpu": {
      "physical": 6,
      "total": 12,
      "frequency": "2208.00Mhz"
    },
    "memory": {
      "total_ram": "7.7 GiB",
      "swap": "2.0 GiB"
    },
    "boot_info": "initrd=\\initrd.img WSL_ROOT_INIT=1 panic=-1 nr_cpus=12 hv_utils.timesync_implicit=1 console=hvc0 debug pty.legacy_count=0",
    "mem_details": {
      "MemTotal": "8026096 kB",
      "MemFree": "6181068 kB",
      "MemAvailable": "6588596 kB",
      "Buffers": "6460 kB",
      "Cached": "665692 kB",
      "SwapCached": "0 kB",
      "Active": "275232 kB",
      "Inactive": "1144760 kB",
      "Active(anon)": "2696 kB",
      "Inactive(anon)": "840492 kB",
      "Active(file)": "272536 kB",
      "Inactive(file)": "304268 kB",
      "Unevictable": "0 kB",
      "Mlocked": "0 kB",
      "SwapTotal": "2097152 kB",
      "SwapFree": "2097152 kB",
      "Dirty": "32 kB",
      "Writeback": "0 kB",
      "AnonPages": "737388 kB",
      "Mapped": "484104 kB",
      "Shmem": "95144 kB",
      "KReclaimable": "92880 kB",
      "Slab": "162208 kB",
      "SReclaimable": "92880 kB",
      "SUnreclaim": "69328 kB",
      "KernelStack": "7200 kB",
      "PageTables": "12744 kB",
      "NFS_Unstable": "0 kB",
      "Bounce": "0 kB",
      "WritebackTmp": "0 kB",
      "CommitLimit": "6110200 kB",
      "Committed_AS": "3011604 kB",
      "VmallocTotal": "34359738367 kB",
      "VmallocUsed": "29540 kB",
      "VmallocChunk": "0 kB",
      "Percpu": "8960 kB",
      "AnonHugePages": "280576 kB",
      "ShmemHugePages": "0 kB",
      "ShmemPmdMapped": "0 kB",
      "FileHugePages": "0 kB",
      "FilePmdMapped": "0 kB",
      "HugePages_Total": "0",
      "HugePages_Free": "0",
      "HugePages_Rsvd": "0",
      "HugePages_Surp": "0",
      "Hugepagesize": "2048 kB",
      "Hugetlb": "0 kB",
      "DirectMap4k": "128000 kB",
      "DirectMap2M": "6055936 kB",
      "DirectMap1G": "11534336 kB"
    },
    "cpu_details": [
      {
        "processor": "0",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "0",
        "cpu cores": "6",
        "apicid": "0",
        "initial apicid": "0",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "1",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "0",
        "cpu cores": "6",
        "apicid": "1",
        "initial apicid": "1",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "2",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "1",
        "cpu cores": "6",
        "apicid": "2",
        "initial apicid": "2",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "3",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "1",
        "cpu cores": "6",
        "apicid": "3",
        "initial apicid": "3",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "4",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "2",
        "cpu cores": "6",
        "apicid": "4",
        "initial apicid": "4",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "5",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "2",
        "cpu cores": "6",
        "apicid": "5",
        "initial apicid": "5",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "6",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "3",
        "cpu cores": "6",
        "apicid": "6",
        "initial apicid": "6",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "7",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "3",
        "cpu cores": "6",
        "apicid": "7",
        "initial apicid": "7",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "8",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "4",
        "cpu cores": "6",
        "apicid": "8",
        "initial apicid": "8",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "9",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "4",
        "cpu cores": "6",
        "apicid": "9",
        "initial apicid": "9",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "10",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "5",
        "cpu cores": "6",
        "apicid": "10",
        "initial apicid": "10",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {
        "processor": "11",
        "vendor_id": "GenuineIntel",
        "cpu family": "6",
        "model": "158",
        "model name": "Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz",
        "stepping": "10",
        "microcode": "0xffffffff",
        "cpu MHz": "2207.999",
        "cache size": "9216 KB",
        "physical id": "0",
        "siblings": "12",
        "core id": "5",
        "cpu cores": "6",
        "apicid": "11",
        "initial apicid": "11",
        "fpu": "yes",
        "fpu_exception": "yes",
        "cpuid level": "21",
        "wp": "yes",
        "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves md_clear flush_l1d arch_capabilities",
        "bugs": "cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds mmio_stale_data retbleed gds",
        "bogomips": "4415.99",
        "clflush size": "64",
        "cache_alignment": "64",
        "address sizes": "39 bits physical, 48 bits virtual",
        "power management": ""
      },
      {}
    ]
  },
  "collector_info": {
    "name": "kperf",
    "params": {
      "with_sudo": false,
      "warmup": 0,
      "repeat": 1,
      "workload": ""
    }
  },
  "postprocessors": []
}